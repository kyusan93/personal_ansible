---


- name: AUDIT - CURL TO GET INSTANCE DETAILS
  become: true
  uri:
    url: "http://169.254.169.254/latest/dynamic/instance-identity/document"
    return_content: true
  register: instance_details
  tags:
    - all
    - upload_compliance_cloud




- name: AUDIT - GET INSTANCE ID
  become: true
  shell: "cat /var/lib/amazon/ssm/registration | awk -F \"\\\"\" '{print $4}'"
  register: instance_id
  tags:
    - all
    - upload_compliance_hybrid


- name: AUDIT - GET INSTANCE REGION
  become: true
  shell: "cat /var/lib/amazon/ssm/registration | awk -F \"\\\"\" '{print $8}'"
  register: instance_region
  tags:
    - all
    - upload_compliance_hybrid


- name: AUDIT - SHOW INSTANCE DETAILS
  become: true
  debug:
    msg: "{{ instance_id.stdout_lines[0] | default(instance_details.json.instanceId) }} - {{ instance_region.stdout_lines[0] | default(instance_details.json.region) }}"
  tags:
    - all
    - upload_compliance_cloud
    - upload_compliance_hybrid


- name: AUDIT - OUTPUT TO FILE
  become: true
  copy:
    content: id,title,compliant_status
    dest: ./audit_result.csv
  tags:
    - all
    - default




####################################################
#  Title  -  1.9 - Ensure updates, patches, and additional security software are installed
#  Profile :  Level 1 - Server
#  Description :  Periodically patches are released for included software either due to security flaws or to include additional functionality.
#  Rationale Statement :  Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.


- name: AUDIT - 1.9 - Ensure updates, patches, and additional security software are installed
  shell: "sh {{ role_path }}/files/1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_9
  failed_when: "results_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.9 - Ensure updates, patches, and additional security software are installed
  debug: msg="rc={{ results_1_9.rc }} :- results={{ results_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.9,Ensure updates- patches- and additional security software are installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section1


####################################################
#  Title  -  1.9 - Ensure updates, patches, and additional security software are installed
#  Profile :  Level 1 - Workstation
#  Description :  Periodically patches are released for included software either due to security flaws or to include additional functionality.
#  Rationale Statement :  Newer patches may contain security enhancements that would not be available through the latest full update. As a result, it is recommended that the latest software patches be used to take advantage of the latest functionality. As with any software installation, organizations need to determine if a given update meets their requirements and verify the compatibility and supportability of any additional software against the update revision that is selected.


- name: AUDIT - 1.9 - Ensure updates, patches, and additional security software are installed
  shell: "sh {{ role_path }}/files/1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_9
  failed_when: "results_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.9 - Ensure updates, patches, and additional security software are installed
  debug: msg="rc={{ results_1_9.rc }} :- results={{ results_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.9,Ensure updates- patches- and additional security software are installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section1


####################################################
#  Title  -  1.10 - Ensure system-wide crypto policy is not legacy
#  Profile :  Level 1 - Server
#  Description :  The system-wide crypto-policies followed by the crypto core components allow consistently deprecating and disabling algorithms system-wide.
# 
# The individual policy levels (DEFAULT, LEGACY, FUTURE, and FIPS) are included in the crypto-policies(7) package.
#  Rationale Statement :  If the Legacy system-wide crypto policy is selected, it includes support for TLS 1.0, TLS 1.1, and SSH2 protocols or later. The algorithms DSA, 3DES, and RC4 are allowed, while RSA and Diffie-Hellman parameters are accepted if larger than 1023-bits.
# 
# These legacy protocols and algorithms can make the system vulnerable to attacks, including those listed in RFC 7457


- name: AUDIT - 1.10 - Ensure system-wide crypto policy is not legacy
  shell: "sh {{ role_path }}/files/1.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_10
  failed_when: "results_1_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.10 - Ensure system-wide crypto policy is not legacy
  debug: msg="rc={{ results_1_10.rc }} :- results={{ results_1_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.10,Ensure system-wide crypto policy is not legacy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.10 - Ensure system-wide crypto policy is not legacy
#  Profile :  Level 1 - Workstation
#  Description :  The system-wide crypto-policies followed by the crypto core components allow consistently deprecating and disabling algorithms system-wide.
# 
# The individual policy levels (DEFAULT, LEGACY, FUTURE, and FIPS) are included in the crypto-policies(7) package.
#  Rationale Statement :  If the Legacy system-wide crypto policy is selected, it includes support for TLS 1.0, TLS 1.1, and SSH2 protocols or later. The algorithms DSA, 3DES, and RC4 are allowed, while RSA and Diffie-Hellman parameters are accepted if larger than 1023-bits.
# 
# These legacy protocols and algorithms can make the system vulnerable to attacks, including those listed in RFC 7457


- name: AUDIT - 1.10 - Ensure system-wide crypto policy is not legacy
  shell: "sh {{ role_path }}/files/1.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_10
  failed_when: "results_1_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.10 - Ensure system-wide crypto policy is not legacy
  debug: msg="rc={{ results_1_10.rc }} :- results={{ results_1_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.10,Ensure system-wide crypto policy is not legacy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.9 - Disable USB Storage
#  Profile :  Level 1 - Server
#  Description :  USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.
#  Rationale Statement :  Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.


- name: AUDIT - 1.1.9 - Disable USB Storage
  shell: "sh {{ role_path }}/files/1.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_9
  failed_when: "results_1_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.9 - Disable USB Storage
  debug: msg="rc={{ results_1_1_9.rc }} :- results={{ results_1_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.9,Disable USB Storage,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.9 - Disable USB Storage
#  Profile :  Level 2 - Workstation
#  Description :  USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.
#  Rationale Statement :  Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.


- name: AUDIT - 1.1.9 - Disable USB Storage
  shell: "sh {{ role_path }}/files/1.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_9
  failed_when: "results_1_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.9 - Disable USB Storage
  debug: msg="rc={{ results_1_1_9.rc }} :- results={{ results_1_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.9,Disable USB Storage,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
#  Profile :  Level 2 - Server
#  Description :  The `squashfs` filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A `squashfs` image can be used without having to first decompress the image.
#  Rationale Statement :  Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.


- name: AUDIT - 1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
  shell: "sh {{ role_path }}/files/1.1.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_1_1
  failed_when: "results_1_1_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
  debug: msg="rc={{ results_1_1_1_1.rc }} :- results={{ results_1_1_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.1.1,Ensure mounting of squashfs filesystems is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
#  Profile :  Level 2 - Workstation
#  Description :  The `squashfs` filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A `squashfs` image can be used without having to first decompress the image.
#  Rationale Statement :  Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.


- name: AUDIT - 1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
  shell: "sh {{ role_path }}/files/1.1.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_1_1
  failed_when: "results_1_1_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.1.1 - Ensure mounting of squashfs filesystems is disabled
  debug: msg="rc={{ results_1_1_1_1.rc }} :- results={{ results_1_1_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.1.1,Ensure mounting of squashfs filesystems is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.1.2 - Ensure mounting of udf filesystems is disabled
#  Profile :  Level 2 - Server
#  Description :  The `udf` filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.
#  Rationale Statement :  Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.


- name: AUDIT - 1.1.1.2 - Ensure mounting of udf filesystems is disabled
  shell: "sh {{ role_path }}/files/1.1.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_1_2
  failed_when: "results_1_1_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.1.2 - Ensure mounting of udf filesystems is disabled
  debug: msg="rc={{ results_1_1_1_2.rc }} :- results={{ results_1_1_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.1.2,Ensure mounting of udf filesystems is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.1.2 - Ensure mounting of udf filesystems is disabled
#  Profile :  Level 2 - Workstation
#  Description :  The `udf` filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.
#  Rationale Statement :  Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.


- name: AUDIT - 1.1.1.2 - Ensure mounting of udf filesystems is disabled
  shell: "sh {{ role_path }}/files/1.1.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_1_2
  failed_when: "results_1_1_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.1.2 - Ensure mounting of udf filesystems is disabled
  debug: msg="rc={{ results_1_1_1_2.rc }} :- results={{ results_1_1_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.1.2,Ensure mounting of udf filesystems is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.2.1 - Ensure /tmp is a separate partition
#  Profile :  Level 1 - Server
#  Description :  The `/tmp` directory is a world-writable directory used for temporary storage by all users and some applications.
#  Rationale Statement :  Making `/tmp` its own file system allows an administrator to set additional mount options such as the `noexec` option on the mount, making `/tmp` useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
# 
# Since the `/tmp` directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.
# 
# This can be accomplished by either mounting `tmpfs` to `/tmp`, or creating a separate partition for `/tmp`.


- name: AUDIT - 1.1.2.1 - Ensure /tmp is a separate partition
  shell: "sh {{ role_path }}/files/1.1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_1
  failed_when: "results_1_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.2.1 - Ensure /tmp is a separate partition
  debug: msg="rc={{ results_1_1_2_1.rc }} :- results={{ results_1_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.1,Ensure /tmp is a separate partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.2.1 - Ensure /tmp is a separate partition
#  Profile :  Level 1 - Workstation
#  Description :  The `/tmp` directory is a world-writable directory used for temporary storage by all users and some applications.
#  Rationale Statement :  Making `/tmp` its own file system allows an administrator to set additional mount options such as the `noexec` option on the mount, making `/tmp` useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
# 
# Since the `/tmp` directory is intended to be world-writable, there is a risk of resource exhaustion if it is not bound to a separate partition.
# 
# This can be accomplished by either mounting `tmpfs` to `/tmp`, or creating a separate partition for `/tmp`.


- name: AUDIT - 1.1.2.1 - Ensure /tmp is a separate partition
  shell: "sh {{ role_path }}/files/1.1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_1
  failed_when: "results_1_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.2.1 - Ensure /tmp is a separate partition
  debug: msg="rc={{ results_1_1_2_1.rc }} :- results={{ results_1_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.1,Ensure /tmp is a separate partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.2.2 - Ensure nodev option set on /tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/tmp` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/tmp`.


- name: AUDIT - 1.1.2.2 - Ensure nodev option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_2
  failed_when: "results_1_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.2.2 - Ensure nodev option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_2.rc }} :- results={{ results_1_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.2,Ensure nodev option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.2.2 - Ensure nodev option set on /tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/tmp` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/tmp`.


- name: AUDIT - 1.1.2.2 - Ensure nodev option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_2
  failed_when: "results_1_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.2.2 - Ensure nodev option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_2.rc }} :- results={{ results_1_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.2,Ensure nodev option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.2.3 - Ensure noexec option set on /tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from `/tmp`.


- name: AUDIT - 1.1.2.3 - Ensure noexec option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_3
  failed_when: "results_1_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.2.3 - Ensure noexec option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_3.rc }} :- results={{ results_1_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.3,Ensure noexec option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.2.3 - Ensure noexec option set on /tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from `/tmp`.


- name: AUDIT - 1.1.2.3 - Ensure noexec option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_3
  failed_when: "results_1_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.2.3 - Ensure noexec option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_3.rc }} :- results={{ results_1_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.3,Ensure noexec option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.2.4 - Ensure nosuid option set on /tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot create `setuid` files in `/tmp`.


- name: AUDIT - 1.1.2.4 - Ensure nosuid option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_4
  failed_when: "results_1_1_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.2.4 - Ensure nosuid option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_4.rc }} :- results={{ results_1_1_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.4,Ensure nosuid option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.2.4 - Ensure nosuid option set on /tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot create `setuid` files in `/tmp`.


- name: AUDIT - 1.1.2.4 - Ensure nosuid option set on /tmp partition
  shell: "sh {{ role_path }}/files/1.1.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_2_4
  failed_when: "results_1_1_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.2.4 - Ensure nosuid option set on /tmp partition
  debug: msg="rc={{ results_1_1_2_4.rc }} :- results={{ results_1_1_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.2.4,Ensure nosuid option set on /tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.3.1 - Ensure separate partition exists for /var
#  Profile :  Level 2 - Server
#  Description :  The `/var` directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.
#  Rationale Statement :  The reasoning for mounting `/var` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var` and cause unintended behavior across the system as the disk is full. See `man auditd.conf` for details.
# 
# #### Fine grained control over the mount
# Configuring `/var` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection from exploitation
# An example of exploiting `/var` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.


- name: AUDIT - 1.1.3.1 - Ensure separate partition exists for /var
  shell: "sh {{ role_path }}/files/1.1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_1
  failed_when: "results_1_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.3.1 - Ensure separate partition exists for /var
  debug: msg="rc={{ results_1_1_3_1.rc }} :- results={{ results_1_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.1,Ensure separate partition exists for /var,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.3.1 - Ensure separate partition exists for /var
#  Profile :  Level 2 - Workstation
#  Description :  The `/var` directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.
#  Rationale Statement :  The reasoning for mounting `/var` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var` and cause unintended behavior across the system as the disk is full. See `man auditd.conf` for details.
# 
# #### Fine grained control over the mount
# Configuring `/var` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection from exploitation
# An example of exploiting `/var` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.


- name: AUDIT - 1.1.3.1 - Ensure separate partition exists for /var
  shell: "sh {{ role_path }}/files/1.1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_1
  failed_when: "results_1_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.3.1 - Ensure separate partition exists for /var
  debug: msg="rc={{ results_1_1_3_1.rc }} :- results={{ results_1_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.1,Ensure separate partition exists for /var,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.3.2 - Ensure nodev option set on /var partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var`.


- name: AUDIT - 1.1.3.2 - Ensure nodev option set on /var partition
  shell: "sh {{ role_path }}/files/1.1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_2
  failed_when: "results_1_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.3.2 - Ensure nodev option set on /var partition
  debug: msg="rc={{ results_1_1_3_2.rc }} :- results={{ results_1_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.2,Ensure nodev option set on /var partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.3.2 - Ensure nodev option set on /var partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var`.


- name: AUDIT - 1.1.3.2 - Ensure nodev option set on /var partition
  shell: "sh {{ role_path }}/files/1.1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_2
  failed_when: "results_1_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.3.2 - Ensure nodev option set on /var partition
  debug: msg="rc={{ results_1_1_3_2.rc }} :- results={{ results_1_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.2,Ensure nodev option set on /var partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.3.3 - Ensure nosuid option set on /var partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var` filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create `setuid` files in `/var`.


- name: AUDIT - 1.1.3.3 - Ensure nosuid option set on /var partition
  shell: "sh {{ role_path }}/files/1.1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_3
  failed_when: "results_1_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.3.3 - Ensure nosuid option set on /var partition
  debug: msg="rc={{ results_1_1_3_3.rc }} :- results={{ results_1_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.3,Ensure nosuid option set on /var partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.3.3 - Ensure nosuid option set on /var partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var` filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create `setuid` files in `/var`.


- name: AUDIT - 1.1.3.3 - Ensure nosuid option set on /var partition
  shell: "sh {{ role_path }}/files/1.1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_3_3
  failed_when: "results_1_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.3.3 - Ensure nosuid option set on /var partition
  debug: msg="rc={{ results_1_1_3_3.rc }} :- results={{ results_1_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.3.3,Ensure nosuid option set on /var partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.4.1 - Ensure separate partition exists for /var/tmp
#  Profile :  Level 2 - Server
#  Description :  The `/var/tmp` directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in `/var/tmp` are to be preserved between reboots.
#  Rationale Statement :  The reasoning for mounting `/var/tmp` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/tmp` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/tmp` and cause potential disruption to daemons as the disk is full.
# 
# #### Fine grained control over the mount
# Configuring `/var/tmp` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection from exploitation
# An example of exploiting `/var/tmp` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.


- name: AUDIT - 1.1.4.1 - Ensure separate partition exists for /var/tmp
  shell: "sh {{ role_path }}/files/1.1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_1
  failed_when: "results_1_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.4.1 - Ensure separate partition exists for /var/tmp
  debug: msg="rc={{ results_1_1_4_1.rc }} :- results={{ results_1_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.1,Ensure separate partition exists for /var/tmp,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.4.1 - Ensure separate partition exists for /var/tmp
#  Profile :  Level 2 - Workstation
#  Description :  The `/var/tmp` directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in `/var/tmp` are to be preserved between reboots.
#  Rationale Statement :  The reasoning for mounting `/var/tmp` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/tmp` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/tmp` and cause potential disruption to daemons as the disk is full.
# 
# #### Fine grained control over the mount
# Configuring `/var/tmp` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection from exploitation
# An example of exploiting `/var/tmp` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.


- name: AUDIT - 1.1.4.1 - Ensure separate partition exists for /var/tmp
  shell: "sh {{ role_path }}/files/1.1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_1
  failed_when: "results_1_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.4.1 - Ensure separate partition exists for /var/tmp
  debug: msg="rc={{ results_1_1_4_1.rc }} :- results={{ results_1_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.1,Ensure separate partition exists for /var/tmp,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.4.2 - Ensure noexec option set on /var/tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from `/var/tmp`.


- name: AUDIT - 1.1.4.2 - Ensure noexec option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_2
  failed_when: "results_1_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.4.2 - Ensure noexec option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_2.rc }} :- results={{ results_1_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.2,Ensure noexec option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.4.2 - Ensure noexec option set on /var/tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot run executable binaries from `/var/tmp`.


- name: AUDIT - 1.1.4.2 - Ensure noexec option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_2
  failed_when: "results_1_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.4.2 - Ensure noexec option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_2.rc }} :- results={{ results_1_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.2,Ensure noexec option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.4.3 - Ensure nosuid option set on /var/tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot create `setuid` files in `/var/tmp`.


- name: AUDIT - 1.1.4.3 - Ensure nosuid option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_3
  failed_when: "results_1_1_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.4.3 - Ensure nosuid option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_3.rc }} :- results={{ results_1_1_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.3,Ensure nosuid option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.4.3 - Ensure nosuid option set on /var/tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/tmp` filesystem is only intended for temporary file storage, set this option to ensure that users cannot create `setuid` files in `/var/tmp`.


- name: AUDIT - 1.1.4.3 - Ensure nosuid option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_3
  failed_when: "results_1_1_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.4.3 - Ensure nosuid option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_3.rc }} :- results={{ results_1_1_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.3,Ensure nosuid option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.4.4 - Ensure nodev option set on /var/tmp partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/tmp` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/tmp`.


- name: AUDIT - 1.1.4.4 - Ensure nodev option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_4
  failed_when: "results_1_1_4_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.4.4 - Ensure nodev option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_4.rc }} :- results={{ results_1_1_4_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.4,Ensure nodev option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.4.4 - Ensure nodev option set on /var/tmp partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/tmp` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/tmp`.


- name: AUDIT - 1.1.4.4 - Ensure nodev option set on /var/tmp partition
  shell: "sh {{ role_path }}/files/1.1.4.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_4_4
  failed_when: "results_1_1_4_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_4_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.4.4 - Ensure nodev option set on /var/tmp partition
  debug: msg="rc={{ results_1_1_4_4.rc }} :- results={{ results_1_1_4_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.4.4,Ensure nodev option set on /var/tmp partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.5.1 - Ensure separate partition exists for /var/log
#  Profile :  Level 2 - Server
#  Description :  The `/var/log` directory is used by system services to store log data.
#  Rationale Statement :  The reasoning for mounting `/var/log` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/log` directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.
# 
# #### Fine grained control over the mount
# Configuring `/var/log` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of log data
# As `/var/log` contains log files, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.5.1 - Ensure separate partition exists for /var/log
  shell: "sh {{ role_path }}/files/1.1.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_1
  failed_when: "results_1_1_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.5.1 - Ensure separate partition exists for /var/log
  debug: msg="rc={{ results_1_1_5_1.rc }} :- results={{ results_1_1_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.1,Ensure separate partition exists for /var/log,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.5.1 - Ensure separate partition exists for /var/log
#  Profile :  Level 2 - Workstation
#  Description :  The `/var/log` directory is used by system services to store log data.
#  Rationale Statement :  The reasoning for mounting `/var/log` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/log` directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.
# 
# #### Fine grained control over the mount
# Configuring `/var/log` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of log data
# As `/var/log` contains log files, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.5.1 - Ensure separate partition exists for /var/log
  shell: "sh {{ role_path }}/files/1.1.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_1
  failed_when: "results_1_1_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.5.1 - Ensure separate partition exists for /var/log
  debug: msg="rc={{ results_1_1_5_1.rc }} :- results={{ results_1_1_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.1,Ensure separate partition exists for /var/log,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.5.2 - Ensure nodev option set on /var/log partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/log` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/log`.


- name: AUDIT - 1.1.5.2 - Ensure nodev option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_2
  failed_when: "results_1_1_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.5.2 - Ensure nodev option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_2.rc }} :- results={{ results_1_1_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.2,Ensure nodev option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.5.2 - Ensure nodev option set on /var/log partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/log` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/log`.


- name: AUDIT - 1.1.5.2 - Ensure nodev option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_2
  failed_when: "results_1_1_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.5.2 - Ensure nodev option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_2.rc }} :- results={{ results_1_1_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.2,Ensure nodev option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.5.3 - Ensure noexec option set on /var/log partition
#  Profile :  Level 1 - Server
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/log` filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from `/var/log`.


- name: AUDIT - 1.1.5.3 - Ensure noexec option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_3
  failed_when: "results_1_1_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.5.3 - Ensure noexec option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_3.rc }} :- results={{ results_1_1_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.3,Ensure noexec option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.5.3 - Ensure noexec option set on /var/log partition
#  Profile :  Level 1 - Workstation
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/log` filesystem is only intended for log files, set this option to ensure that users cannot run executable binaries from `/var/log`.


- name: AUDIT - 1.1.5.3 - Ensure noexec option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_3
  failed_when: "results_1_1_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.5.3 - Ensure noexec option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_3.rc }} :- results={{ results_1_1_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.3,Ensure noexec option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.5.4 - Ensure nosuid option set on /var/log partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/log` filesystem is only intended for log files, set this option to ensure that users cannot create `setuid` files in `/var/log`.


- name: AUDIT - 1.1.5.4 - Ensure nosuid option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_4
  failed_when: "results_1_1_5_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.5.4 - Ensure nosuid option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_4.rc }} :- results={{ results_1_1_5_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.4,Ensure nosuid option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.5.4 - Ensure nosuid option set on /var/log partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/log` filesystem is only intended for log files, set this option to ensure that users cannot create `setuid` files in `/var/log`.


- name: AUDIT - 1.1.5.4 - Ensure nosuid option set on /var/log partition
  shell: "sh {{ role_path }}/files/1.1.5.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_5_4
  failed_when: "results_1_1_5_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_5_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.5.4 - Ensure nosuid option set on /var/log partition
  debug: msg="rc={{ results_1_1_5_4.rc }} :- results={{ results_1_1_5_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.5.4,Ensure nosuid option set on /var/log partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.6.1 - Ensure separate partition exists for /var/log/audit
#  Profile :  Level 2 - Server
#  Description :  The auditing daemon, `auditd`, stores log data in the `/var/log/audit` directory.
#  Rationale Statement :  The reasoning for mounting `/var/log/audit` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/log/audit` directory contains the `audit.log` file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/log/audit` and cause `auditd` to trigger it's `space_left_action` as the disk is full. See `man auditd.conf` for details.
# 
# #### Fine grained control over the mount
# Configuring `/var/log/audit` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of audit data
# As `/var/log/audit` contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.6.1 - Ensure separate partition exists for /var/log/audit
  shell: "sh {{ role_path }}/files/1.1.6.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_1
  failed_when: "results_1_1_6_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.6.1 - Ensure separate partition exists for /var/log/audit
  debug: msg="rc={{ results_1_1_6_1.rc }} :- results={{ results_1_1_6_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.1,Ensure separate partition exists for /var/log/audit,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.6.1 - Ensure separate partition exists for /var/log/audit
#  Profile :  Level 2 - Workstation
#  Description :  The auditing daemon, `auditd`, stores log data in the `/var/log/audit` directory.
#  Rationale Statement :  The reasoning for mounting `/var/log/audit` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/var/log/audit` directory contains the `audit.log` file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/log/audit` and cause `auditd` to trigger it's `space_left_action` as the disk is full. See `man auditd.conf` for details.
# 
# #### Fine grained control over the mount
# Configuring `/var/log/audit` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of audit data
# As `/var/log/audit` contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.6.1 - Ensure separate partition exists for /var/log/audit
  shell: "sh {{ role_path }}/files/1.1.6.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_1
  failed_when: "results_1_1_6_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.6.1 - Ensure separate partition exists for /var/log/audit
  debug: msg="rc={{ results_1_1_6_1.rc }} :- results={{ results_1_1_6_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.1,Ensure separate partition exists for /var/log/audit,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.6.2 - Ensure noexec option set on /var/log/audit partition
#  Profile :  Level 1 - Server
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from `/var/log/audit`.


- name: AUDIT - 1.1.6.2 - Ensure noexec option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_2
  failed_when: "results_1_1_6_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.6.2 - Ensure noexec option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_2.rc }} :- results={{ results_1_1_6_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.2,Ensure noexec option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.6.2 - Ensure noexec option set on /var/log/audit partition
#  Profile :  Level 1 - Workstation
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is only intended for audit logs, set this option to ensure that users cannot run executable binaries from `/var/log/audit`.


- name: AUDIT - 1.1.6.2 - Ensure noexec option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_2
  failed_when: "results_1_1_6_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.6.2 - Ensure noexec option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_2.rc }} :- results={{ results_1_1_6_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.2,Ensure noexec option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.6.3 - Ensure nodev option set on /var/log/audit partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/log/audit`.


- name: AUDIT - 1.1.6.3 - Ensure nodev option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_3
  failed_when: "results_1_1_6_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.6.3 - Ensure nodev option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_3.rc }} :- results={{ results_1_1_6_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.3,Ensure nodev option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.6.3 - Ensure nodev option set on /var/log/audit partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var/log/audit`.


- name: AUDIT - 1.1.6.3 - Ensure nodev option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_3
  failed_when: "results_1_1_6_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.6.3 - Ensure nodev option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_3.rc }} :- results={{ results_1_1_6_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.3,Ensure nodev option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create `setuid` files in `/var/log/audit`.


- name: AUDIT - 1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_4
  failed_when: "results_1_1_6_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_4.rc }} :- results={{ results_1_1_6_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.4,Ensure nosuid option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/var/log/audit` filesystem is only intended for variable files such as logs, set this option to ensure that users cannot create `setuid` files in `/var/log/audit`.


- name: AUDIT - 1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
  shell: "sh {{ role_path }}/files/1.1.6.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_6_4
  failed_when: "results_1_1_6_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_6_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.6.4 - Ensure nosuid option set on /var/log/audit partition
  debug: msg="rc={{ results_1_1_6_4.rc }} :- results={{ results_1_1_6_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.6.4,Ensure nosuid option set on /var/log/audit partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.7.1 - Ensure separate partition exists for /home
#  Profile :  Level 2 - Server
#  Description :  The `/home` directory is used to support disk storage needs of local users.
#  Rationale Statement :  The reasoning for mounting `/home` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/home` directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/home` and impact all local users.
# 
# #### Fine grained control over the mount
# Configuring `/home` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. In the case of `/home` options such as `usrquota/grpquota` may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of user data
# As `/home` contains user data, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.7.1 - Ensure separate partition exists for /home
  shell: "sh {{ role_path }}/files/1.1.7.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_1
  failed_when: "results_1_1_7_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.1.7.1 - Ensure separate partition exists for /home
  debug: msg="rc={{ results_1_1_7_1.rc }} :- results={{ results_1_1_7_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.1,Ensure separate partition exists for /home,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.1.7.1 - Ensure separate partition exists for /home
#  Profile :  Level 2 - Workstation
#  Description :  The `/home` directory is used to support disk storage needs of local users.
#  Rationale Statement :  The reasoning for mounting `/home` on a separate partition is as follows.
# 
# #### Protection from resource exhaustion
# The default installation only creates a single `/` partition. Since the `/home` directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/home` and impact all local users.
# 
# #### Fine grained control over the mount
# Configuring `/home` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. In the case of `/home` options such as `usrquota/grpquota` may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.
# 
# #### Protection of user data
# As `/home` contains user data, care should be taken to ensure the security and integrity of the data and mount point.


- name: AUDIT - 1.1.7.1 - Ensure separate partition exists for /home
  shell: "sh {{ role_path }}/files/1.1.7.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_1
  failed_when: "results_1_1_7_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.7.1 - Ensure separate partition exists for /home
  debug: msg="rc={{ results_1_1_7_1.rc }} :- results={{ results_1_1_7_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.1,Ensure separate partition exists for /home,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.1.7.2 - Ensure nodev option set on /home partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/home` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var`.


- name: AUDIT - 1.1.7.2 - Ensure nodev option set on /home partition
  shell: "sh {{ role_path }}/files/1.1.7.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_2
  failed_when: "results_1_1_7_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.7.2 - Ensure nodev option set on /home partition
  debug: msg="rc={{ results_1_1_7_2.rc }} :- results={{ results_1_1_7_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.2,Ensure nodev option set on /home partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.7.2 - Ensure nodev option set on /home partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/home` filesystem is not intended to support devices, set this option to ensure that users cannot create a block or character special devices in `/var`.


- name: AUDIT - 1.1.7.2 - Ensure nodev option set on /home partition
  shell: "sh {{ role_path }}/files/1.1.7.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_2
  failed_when: "results_1_1_7_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.7.2 - Ensure nodev option set on /home partition
  debug: msg="rc={{ results_1_1_7_2.rc }} :- results={{ results_1_1_7_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.2,Ensure nodev option set on /home partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.7.3 - Ensure nosuid option set on /home partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/home` filesystem is only intended for user file storage, set this option to ensure that users cannot create `setuid` files in `/home`.


- name: AUDIT - 1.1.7.3 - Ensure nosuid option set on /home partition
  shell: "sh {{ role_path }}/files/1.1.7.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_3
  failed_when: "results_1_1_7_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.7.3 - Ensure nosuid option set on /home partition
  debug: msg="rc={{ results_1_1_7_3.rc }} :- results={{ results_1_1_7_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.3,Ensure nosuid option set on /home partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.7.3 - Ensure nosuid option set on /home partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Since the `/home` filesystem is only intended for user file storage, set this option to ensure that users cannot create `setuid` files in `/home`.


- name: AUDIT - 1.1.7.3 - Ensure nosuid option set on /home partition
  shell: "sh {{ role_path }}/files/1.1.7.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_7_3
  failed_when: "results_1_1_7_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_7_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.7.3 - Ensure nosuid option set on /home partition
  debug: msg="rc={{ results_1_1_7_3.rc }} :- results={{ results_1_1_7_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.7.3,Ensure nosuid option set on /home partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.8.1 - Ensure /dev/shm is a separate partition
#  Profile :  Level 1 - Server
#  Description :  The `/dev/shm` directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).
#  Rationale Statement :  Making `/dev/shm` its own file system allows an administrator to set additional mount options such as the `noexec` option on the mount, making `/dev/shm` useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
# 
# This can be accomplished by mounting `tmpfs` to `/dev/shm`.


- name: AUDIT - 1.1.8.1 - Ensure /dev/shm is a separate partition
  shell: "sh {{ role_path }}/files/1.1.8.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_1
  failed_when: "results_1_1_8_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.8.1 - Ensure /dev/shm is a separate partition
  debug: msg="rc={{ results_1_1_8_1.rc }} :- results={{ results_1_1_8_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.1,Ensure /dev/shm is a separate partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.8.1 - Ensure /dev/shm is a separate partition
#  Profile :  Level 1 - Workstation
#  Description :  The `/dev/shm` directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC).
#  Rationale Statement :  Making `/dev/shm` its own file system allows an administrator to set additional mount options such as the `noexec` option on the mount, making `/dev/shm` useless for an attacker to install executable code. It would also prevent an attacker from establishing a hard link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.
# 
# This can be accomplished by mounting `tmpfs` to `/dev/shm`.


- name: AUDIT - 1.1.8.1 - Ensure /dev/shm is a separate partition
  shell: "sh {{ role_path }}/files/1.1.8.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_1
  failed_when: "results_1_1_8_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.8.1 - Ensure /dev/shm is a separate partition
  debug: msg="rc={{ results_1_1_8_1.rc }} :- results={{ results_1_1_8_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.1,Ensure /dev/shm is a separate partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.8.2 - Ensure nodev option set on /dev/shm partition
#  Profile :  Level 1 - Server
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/dev/shm` filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in `/dev/shm` partitions.


- name: AUDIT - 1.1.8.2 - Ensure nodev option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_2
  failed_when: "results_1_1_8_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.8.2 - Ensure nodev option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_2.rc }} :- results={{ results_1_1_8_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.2,Ensure nodev option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.8.2 - Ensure nodev option set on /dev/shm partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nodev` mount option specifies that the filesystem cannot contain special devices.
#  Rationale Statement :  Since the `/dev/shm` filesystem is not intended to support devices, set this option to ensure that users cannot attempt to create special devices in `/dev/shm` partitions.


- name: AUDIT - 1.1.8.2 - Ensure nodev option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_2
  failed_when: "results_1_1_8_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.8.2 - Ensure nodev option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_2.rc }} :- results={{ results_1_1_8_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.2,Ensure nodev option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.8.3 - Ensure noexec option set on /dev/shm partition
#  Profile :  Level 1 - Server
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.


- name: AUDIT - 1.1.8.3 - Ensure noexec option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_3
  failed_when: "results_1_1_8_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.8.3 - Ensure noexec option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_3.rc }} :- results={{ results_1_1_8_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.3,Ensure noexec option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.8.3 - Ensure noexec option set on /dev/shm partition
#  Profile :  Level 1 - Workstation
#  Description :  The `noexec` mount option specifies that the filesystem cannot contain executable binaries.
#  Rationale Statement :  Setting this option on a file system prevents users from executing programs from shared memory. This deters users from introducing potentially malicious software on the system.


- name: AUDIT - 1.1.8.3 - Ensure noexec option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_3
  failed_when: "results_1_1_8_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.8.3 - Ensure noexec option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_3.rc }} :- results={{ results_1_1_8_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.3,Ensure noexec option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.1.8.4 - Ensure nosuid option set on /dev/shm partition
#  Profile :  Level 1 - Server
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.


- name: AUDIT - 1.1.8.4 - Ensure nosuid option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_4
  failed_when: "results_1_1_8_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.1.8.4 - Ensure nosuid option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_4.rc }} :- results={{ results_1_1_8_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.4,Ensure nosuid option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.1.8.4 - Ensure nosuid option set on /dev/shm partition
#  Profile :  Level 1 - Workstation
#  Description :  The `nosuid` mount option specifies that the filesystem cannot contain `setuid` files.
#  Rationale Statement :  Setting this option on a file system prevents users from introducing privileged programs onto the system and allowing non-root users to execute them.


- name: AUDIT - 1.1.8.4 - Ensure nosuid option set on /dev/shm partition
  shell: "sh {{ role_path }}/files/1.1.8.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_1_8_4
  failed_when: "results_1_1_8_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_1_8_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.1.8.4 - Ensure nosuid option set on /dev/shm partition
  debug: msg="rc={{ results_1_1_8_4.rc }} :- results={{ results_1_1_8_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.1.8.4,Ensure nosuid option set on /dev/shm partition,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.2.1 - Ensure GPG keys are configured
#  Profile :  Level 1 - Server
#  Description :  The RPM Package Manager implements GPG key signing to verify package integrity during and after installation.
#  Rationale Statement :  It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system. To this end, verify that GPG keys are configured correctly for your system.


- name: AUDIT - 1.2.1 - Ensure GPG keys are configured
  shell: "sh {{ role_path }}/files/1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_1
  failed_when: "results_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.2.1 - Ensure GPG keys are configured
  debug: msg="rc={{ results_1_2_1.rc }} :- results={{ results_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.1,Ensure GPG keys are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section1


####################################################
#  Title  -  1.2.1 - Ensure GPG keys are configured
#  Profile :  Level 1 - Workstation
#  Description :  The RPM Package Manager implements GPG key signing to verify package integrity during and after installation.
#  Rationale Statement :  It is important to ensure that updates are obtained from a valid source to protect against spoofing that could lead to the inadvertent installation of malware on the system. To this end, verify that GPG keys are configured correctly for your system.


- name: AUDIT - 1.2.1 - Ensure GPG keys are configured
  shell: "sh {{ role_path }}/files/1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_1
  failed_when: "results_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.2.1 - Ensure GPG keys are configured
  debug: msg="rc={{ results_1_2_1.rc }} :- results={{ results_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.1,Ensure GPG keys are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section1


####################################################
#  Title  -  1.2.2 - Ensure gpgcheck is globally activated
#  Profile :  Level 1 - Server
#  Description :  The `gpgcheck` option, found in the main section of the `/etc/dnf/dnf.conf` and individual `/etc/yum.repos.d/*` files, determines if an RPM package's signature is checked prior to its installation.
#  Rationale Statement :  It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source.


- name: AUDIT - 1.2.2 - Ensure gpgcheck is globally activated
  shell: "sh {{ role_path }}/files/1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_2
  failed_when: "results_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.2.2 - Ensure gpgcheck is globally activated
  debug: msg="rc={{ results_1_2_2.rc }} :- results={{ results_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.2,Ensure gpgcheck is globally activated,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.2.2 - Ensure gpgcheck is globally activated
#  Profile :  Level 1 - Workstation
#  Description :  The `gpgcheck` option, found in the main section of the `/etc/dnf/dnf.conf` and individual `/etc/yum.repos.d/*` files, determines if an RPM package's signature is checked prior to its installation.
#  Rationale Statement :  It is important to ensure that an RPM's package signature is always checked prior to installation to ensure that the software is obtained from a trusted source.


- name: AUDIT - 1.2.2 - Ensure gpgcheck is globally activated
  shell: "sh {{ role_path }}/files/1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_2
  failed_when: "results_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.2.2 - Ensure gpgcheck is globally activated
  debug: msg="rc={{ results_1_2_2.rc }} :- results={{ results_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.2,Ensure gpgcheck is globally activated,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.2.3 - Ensure package manager repositories are configured
#  Profile :  Level 1 - Server
#  Description :  Systems need to have the respective package manager repositories configured to ensure that the system is able to receive the latest patches and updates.
#  Rationale Statement :  If a system's package repositories are misconfigured, important patches may not be identified or a rogue repository could introduce compromised software.


- name: AUDIT - 1.2.3 - Ensure package manager repositories are configured
  shell: "sh {{ role_path }}/files/1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_3
  failed_when: "results_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.2.3 - Ensure package manager repositories are configured
  debug: msg="rc={{ results_1_2_3.rc }} :- results={{ results_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.3,Ensure package manager repositories are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section1


####################################################
#  Title  -  1.2.3 - Ensure package manager repositories are configured
#  Profile :  Level 1 - Workstation
#  Description :  Systems need to have the respective package manager repositories configured to ensure that the system is able to receive the latest patches and updates.
#  Rationale Statement :  If a system's package repositories are misconfigured, important patches may not be identified or a rogue repository could introduce compromised software.


- name: AUDIT - 1.2.3 - Ensure package manager repositories are configured
  shell: "sh {{ role_path }}/files/1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_3
  failed_when: "results_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.2.3 - Ensure package manager repositories are configured
  debug: msg="rc={{ results_1_2_3.rc }} :- results={{ results_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.3,Ensure package manager repositories are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section1


####################################################
#  Title  -  1.2.4 - Ensure repo_gpgcheck is globally activated
#  Profile :  Level 2 - Server
#  Description :  The `repo_gpgcheck` option, found in the main section of the `/etc/dnf/dnf.conf` and individual `/etc/yum.repos.d/*` files, will perform a GPG signature check on the repodata.
#  Rationale Statement :  It is important to ensure that the repository data signature is always checked prior to installation to ensure that the software is not tampered with in any way.


- name: AUDIT - 1.2.4 - Ensure repo_gpgcheck is globally activated
  shell: "sh {{ role_path }}/files/1.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_4
  failed_when: "results_1_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.2.4 - Ensure repo_gpgcheck is globally activated
  debug: msg="rc={{ results_1_2_4.rc }} :- results={{ results_1_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.4,Ensure repo_gpgcheck is globally activated,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-server
    - section1


####################################################
#  Title  -  1.2.4 - Ensure repo_gpgcheck is globally activated
#  Profile :  Level 2 - Workstation
#  Description :  The `repo_gpgcheck` option, found in the main section of the `/etc/dnf/dnf.conf` and individual `/etc/yum.repos.d/*` files, will perform a GPG signature check on the repodata.
#  Rationale Statement :  It is important to ensure that the repository data signature is always checked prior to installation to ensure that the software is not tampered with in any way.


- name: AUDIT - 1.2.4 - Ensure repo_gpgcheck is globally activated
  shell: "sh {{ role_path }}/files/1.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_2_4
  failed_when: "results_1_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.2.4 - Ensure repo_gpgcheck is globally activated
  debug: msg="rc={{ results_1_2_4.rc }} :- results={{ results_1_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.2.4,Ensure repo_gpgcheck is globally activated,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-workstation
    - section1


####################################################
#  Title  -  1.3.1 - Ensure AIDE is installed
#  Profile :  Level 1 - Server
#  Description :  Advanced Intrusion Detection Environment (AIDE) is a intrusion detection tool that uses predefined rules to check the integrity of files and directories in the Linux operating system. AIDE has its own database to check the integrity of files and directories. 
# 
# AIDE takes a snapshot of files and directories including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.
#  Rationale Statement :  By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.


- name: AUDIT - 1.3.1 - Ensure AIDE is installed
  shell: "sh {{ role_path }}/files/1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_1
  failed_when: "results_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.3.1 - Ensure AIDE is installed
  debug: msg="rc={{ results_1_3_1.rc }} :- results={{ results_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.1,Ensure AIDE is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.3.1 - Ensure AIDE is installed
#  Profile :  Level 1 - Workstation
#  Description :  Advanced Intrusion Detection Environment (AIDE) is a intrusion detection tool that uses predefined rules to check the integrity of files and directories in the Linux operating system. AIDE has its own database to check the integrity of files and directories. 
# 
# AIDE takes a snapshot of files and directories including modification times, permissions, and file hashes which can then be used to compare against the current state of the filesystem to detect modifications to the system.
#  Rationale Statement :  By monitoring the filesystem state compromised files can be detected to prevent or limit the exposure of accidental or malicious misconfigurations or modified binaries.


- name: AUDIT - 1.3.1 - Ensure AIDE is installed
  shell: "sh {{ role_path }}/files/1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_1
  failed_when: "results_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.3.1 - Ensure AIDE is installed
  debug: msg="rc={{ results_1_3_1.rc }} :- results={{ results_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.1,Ensure AIDE is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.3.2 - Ensure filesystem integrity is regularly checked
#  Profile :  Level 1 - Server
#  Description :  Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.
#  Rationale Statement :  Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.


- name: AUDIT - 1.3.2 - Ensure filesystem integrity is regularly checked
  shell: "sh {{ role_path }}/files/1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_2
  failed_when: "results_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.3.2 - Ensure filesystem integrity is regularly checked
  debug: msg="rc={{ results_1_3_2.rc }} :- results={{ results_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.2,Ensure filesystem integrity is regularly checked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.3.2 - Ensure filesystem integrity is regularly checked
#  Profile :  Level 1 - Workstation
#  Description :  Periodic checking of the filesystem integrity is needed to detect changes to the filesystem.
#  Rationale Statement :  Periodic file checking allows the system administrator to determine on a regular basis if critical files have been changed in an unauthorized fashion.


- name: AUDIT - 1.3.2 - Ensure filesystem integrity is regularly checked
  shell: "sh {{ role_path }}/files/1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_2
  failed_when: "results_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.3.2 - Ensure filesystem integrity is regularly checked
  debug: msg="rc={{ results_1_3_2.rc }} :- results={{ results_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.2,Ensure filesystem integrity is regularly checked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
#  Profile :  Level 1 - Server
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. 
# 
# Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs. 
# 
# Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.


- name: AUDIT - 1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
  shell: "sh {{ role_path }}/files/1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_3
  failed_when: "results_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
  debug: msg="rc={{ results_1_3_3.rc }} :- results={{ results_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.3,Ensure cryptographic mechanisms are used to protect the integrity of audit tools,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
#  Profile :  Level 1 - Workstation
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting the integrity of the tools used for auditing purposes is a critical step toward ensuring the integrity of audit information. Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. 
# 
# Attackers may replace the audit tools or inject code into the existing tools with the purpose of providing the capability to hide or erase system activity from the audit logs. 
# 
# Audit tools should be cryptographically signed in order to provide the capability to identify when the audit tools have been modified, manipulated, or replaced. An example is a checksum hash of the file or files.


- name: AUDIT - 1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
  shell: "sh {{ role_path }}/files/1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_3_3
  failed_when: "results_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.3.3 - Ensure cryptographic mechanisms are used to protect the integrity of audit tools
  debug: msg="rc={{ results_1_3_3.rc }} :- results={{ results_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.3.3,Ensure cryptographic mechanisms are used to protect the integrity of audit tools,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.4.1 - Ensure bootloader password is set
#  Profile :  Level 1 - Server
#  Description :  Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters.
#  Rationale Statement :  Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time).


- name: AUDIT - 1.4.1 - Ensure bootloader password is set
  shell: "sh {{ role_path }}/files/1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_4_1
  failed_when: "results_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.4.1 - Ensure bootloader password is set
  debug: msg="rc={{ results_1_4_1.rc }} :- results={{ results_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.4.1,Ensure bootloader password is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.4.1 - Ensure bootloader password is set
#  Profile :  Level 1 - Workstation
#  Description :  Setting the boot loader password will require that anyone rebooting the system must enter a password before being able to set command line boot parameters.
#  Rationale Statement :  Requiring a boot password upon execution of the boot loader will prevent an unauthorized user from entering boot parameters or changing the boot partition. This prevents users from weakening security (e.g. turning off SELinux at boot time).


- name: AUDIT - 1.4.1 - Ensure bootloader password is set
  shell: "sh {{ role_path }}/files/1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_4_1
  failed_when: "results_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.4.1 - Ensure bootloader password is set
  debug: msg="rc={{ results_1_4_1.rc }} :- results={{ results_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.4.1,Ensure bootloader password is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.4.2 - Ensure permissions on bootloader config are configured
#  Profile :  Level 1 - Server
#  Description :  The grub files contain information on boot settings and passwords for unlocking boot options.
#  Rationale Statement :  Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.


- name: AUDIT - 1.4.2 - Ensure permissions on bootloader config are configured
  shell: "sh {{ role_path }}/files/1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_4_2
  failed_when: "results_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.4.2 - Ensure permissions on bootloader config are configured
  debug: msg="rc={{ results_1_4_2.rc }} :- results={{ results_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.4.2,Ensure permissions on bootloader config are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.4.2 - Ensure permissions on bootloader config are configured
#  Profile :  Level 1 - Workstation
#  Description :  The grub files contain information on boot settings and passwords for unlocking boot options.
#  Rationale Statement :  Setting the permissions to read and write for root only prevents non-root users from seeing the boot parameters or changing them. Non-root users who read the boot parameters may be able to identify weaknesses in security upon boot and be able to exploit them.


- name: AUDIT - 1.4.2 - Ensure permissions on bootloader config are configured
  shell: "sh {{ role_path }}/files/1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_4_2
  failed_when: "results_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.4.2 - Ensure permissions on bootloader config are configured
  debug: msg="rc={{ results_1_4_2.rc }} :- results={{ results_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.4.2,Ensure permissions on bootloader config are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.5.1 - Ensure core dump storage is disabled
#  Profile :  Level 1 - Server
#  Description :  A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.
#  Rationale Statement :  A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.


- name: AUDIT - 1.5.1 - Ensure core dump storage is disabled
  shell: "sh {{ role_path }}/files/1.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_1
  failed_when: "results_1_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.5.1 - Ensure core dump storage is disabled
  debug: msg="rc={{ results_1_5_1.rc }} :- results={{ results_1_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.1,Ensure core dump storage is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.5.1 - Ensure core dump storage is disabled
#  Profile :  Level 1 - Workstation
#  Description :  A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.
#  Rationale Statement :  A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems.


- name: AUDIT - 1.5.1 - Ensure core dump storage is disabled
  shell: "sh {{ role_path }}/files/1.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_1
  failed_when: "results_1_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.5.1 - Ensure core dump storage is disabled
  debug: msg="rc={{ results_1_5_1.rc }} :- results={{ results_1_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.1,Ensure core dump storage is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.5.2 - Ensure core dump backtraces are disabled
#  Profile :  Level 1 - Server
#  Description :  A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.
#  Rationale Statement :  A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems, increasing the risk to the system.


- name: AUDIT - 1.5.2 - Ensure core dump backtraces are disabled
  shell: "sh {{ role_path }}/files/1.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_2
  failed_when: "results_1_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.5.2 - Ensure core dump backtraces are disabled
  debug: msg="rc={{ results_1_5_2.rc }} :- results={{ results_1_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.2,Ensure core dump backtraces are disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.5.2 - Ensure core dump backtraces are disabled
#  Profile :  Level 1 - Workstation
#  Description :  A core dump is the memory of an executable program. It is generally used to determine why a program aborted. It can also be used to glean confidential information from a core file.
#  Rationale Statement :  A core dump includes a memory image taken at the time the operating system terminates an application. The memory image could contain sensitive data and is generally useful only for developers trying to debug problems, increasing the risk to the system.


- name: AUDIT - 1.5.2 - Ensure core dump backtraces are disabled
  shell: "sh {{ role_path }}/files/1.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_2
  failed_when: "results_1_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.5.2 - Ensure core dump backtraces are disabled
  debug: msg="rc={{ results_1_5_2.rc }} :- results={{ results_1_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.2,Ensure core dump backtraces are disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.5.3 - Ensure address space layout randomization (ASLR) is enabled
#  Profile :  Level 1 - Server
#  Description :  Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.
#  Rationale Statement :  Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.


- name: AUDIT - 1.5.3 - Ensure address space layout randomization (ASLR) is enabled
  shell: "sh {{ role_path }}/files/1.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_3
  failed_when: "results_1_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.5.3 - Ensure address space layout randomization (ASLR) is enabled
  debug: msg="rc={{ results_1_5_3.rc }} :- results={{ results_1_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.3,Ensure address space layout randomization (ASLR) is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.5.3 - Ensure address space layout randomization (ASLR) is enabled
#  Profile :  Level 1 - Workstation
#  Description :  Address space layout randomization (ASLR) is an exploit mitigation technique which randomly arranges the address space of key data areas of a process.
#  Rationale Statement :  Randomly placing virtual memory regions will make it difficult to write memory page exploits as the memory placement will be consistently shifting.


- name: AUDIT - 1.5.3 - Ensure address space layout randomization (ASLR) is enabled
  shell: "sh {{ role_path }}/files/1.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_5_3
  failed_when: "results_1_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.5.3 - Ensure address space layout randomization (ASLR) is enabled
  debug: msg="rc={{ results_1_5_3.rc }} :- results={{ results_1_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.5.3,Ensure address space layout randomization (ASLR) is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.1 - Ensure SELinux is installed
#  Profile :  Level 1 - Server
#  Description :  SELinux provides Mandatory Access Control.
#  Rationale Statement :  Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.


- name: AUDIT - 1.6.1.1 - Ensure SELinux is installed
  shell: "sh {{ role_path }}/files/1.6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_1
  failed_when: "results_1_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.1 - Ensure SELinux is installed
  debug: msg="rc={{ results_1_6_1_1.rc }} :- results={{ results_1_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.1,Ensure SELinux is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.1 - Ensure SELinux is installed
#  Profile :  Level 1 - Workstation
#  Description :  SELinux provides Mandatory Access Control.
#  Rationale Statement :  Without a Mandatory Access Control system installed only the default Discretionary Access Control system will be available.


- name: AUDIT - 1.6.1.1 - Ensure SELinux is installed
  shell: "sh {{ role_path }}/files/1.6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_1
  failed_when: "results_1_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.1 - Ensure SELinux is installed
  debug: msg="rc={{ results_1_6_1_1.rc }} :- results={{ results_1_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.1,Ensure SELinux is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
#  Profile :  Level 1 - Server
#  Description :  Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.
#  Rationale Statement :  SELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden.


- name: AUDIT - 1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
  shell: "sh {{ role_path }}/files/1.6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_2
  failed_when: "results_1_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
  debug: msg="rc={{ results_1_6_1_2.rc }} :- results={{ results_1_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.2,Ensure SELinux is not disabled in bootloader configuration,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
#  Profile :  Level 1 - Workstation
#  Description :  Configure SELINUX to be enabled at boot time and verify that it has not been overwritten by the grub boot parameters.
#  Rationale Statement :  SELinux must be enabled at boot time in your grub configuration to ensure that the controls it provides are not overridden.


- name: AUDIT - 1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
  shell: "sh {{ role_path }}/files/1.6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_2
  failed_when: "results_1_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.2 - Ensure SELinux is not disabled in bootloader configuration
  debug: msg="rc={{ results_1_6_1_2.rc }} :- results={{ results_1_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.2,Ensure SELinux is not disabled in bootloader configuration,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.3 - Ensure SELinux policy is configured
#  Profile :  Level 1 - Server
#  Description :  Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.
#  Rationale Statement :  Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met.


- name: AUDIT - 1.6.1.3 - Ensure SELinux policy is configured
  shell: "sh {{ role_path }}/files/1.6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_3
  failed_when: "results_1_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.3 - Ensure SELinux policy is configured
  debug: msg="rc={{ results_1_6_1_3.rc }} :- results={{ results_1_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.3,Ensure SELinux policy is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.3 - Ensure SELinux policy is configured
#  Profile :  Level 1 - Workstation
#  Description :  Configure SELinux to meet or exceed the default targeted policy, which constrains daemons and system software only.
#  Rationale Statement :  Security configuration requirements vary from site to site. Some sites may mandate a policy that is stricter than the default policy, which is perfectly acceptable. This item is intended to ensure that at least the default recommendations are met.


- name: AUDIT - 1.6.1.3 - Ensure SELinux policy is configured
  shell: "sh {{ role_path }}/files/1.6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_3
  failed_when: "results_1_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.3 - Ensure SELinux policy is configured
  debug: msg="rc={{ results_1_6_1_3.rc }} :- results={{ results_1_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.3,Ensure SELinux policy is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.4 - Ensure the SELinux mode is not disabled
#  Profile :  Level 1 - Server
#  Description :  SELinux can run in one of three modes: disabled, permissive, or enforcing:
# - Enforcing - Is the default, and recommended, mode of operation; in enforcing mode SELinux operates normally, enforcing the loaded security policy on the entire system.
# - Permissive - The system acts as if SELinux is enforcing the loaded security policy, including labeling objects and emitting access denial entries in the logs, but it does not actually deny any operations. While not recommended for production systems, permissive mode can be helpful for SELinux policy development.
# - Disabled - Is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future
# 
# **Note:** you can set individual domains to permissive mode while the system runs in enforcing mode. For example, to make the httpd_t domain permissive:
# 
# ```
# # semanage permissive -a httpd_t
# ```
#  Rationale Statement :  Running SELinux in disabled mode is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future.


- name: AUDIT - 1.6.1.4 - Ensure the SELinux mode is not disabled
  shell: "sh {{ role_path }}/files/1.6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_4
  failed_when: "results_1_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.4 - Ensure the SELinux mode is not disabled
  debug: msg="rc={{ results_1_6_1_4.rc }} :- results={{ results_1_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.4,Ensure the SELinux mode is not disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.4 - Ensure the SELinux mode is not disabled
#  Profile :  Level 1 - Workstation
#  Description :  SELinux can run in one of three modes: disabled, permissive, or enforcing:
# - Enforcing - Is the default, and recommended, mode of operation; in enforcing mode SELinux operates normally, enforcing the loaded security policy on the entire system.
# - Permissive - The system acts as if SELinux is enforcing the loaded security policy, including labeling objects and emitting access denial entries in the logs, but it does not actually deny any operations. While not recommended for production systems, permissive mode can be helpful for SELinux policy development.
# - Disabled - Is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future
# 
# **Note:** you can set individual domains to permissive mode while the system runs in enforcing mode. For example, to make the httpd_t domain permissive:
# 
# ```
# # semanage permissive -a httpd_t
# ```
#  Rationale Statement :  Running SELinux in disabled mode is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future.


- name: AUDIT - 1.6.1.4 - Ensure the SELinux mode is not disabled
  shell: "sh {{ role_path }}/files/1.6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_4
  failed_when: "results_1_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.4 - Ensure the SELinux mode is not disabled
  debug: msg="rc={{ results_1_6_1_4.rc }} :- results={{ results_1_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.4,Ensure the SELinux mode is not disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.5 - Ensure the SELinux mode is enforcing
#  Profile :  Level 2 - Server
#  Description :  SELinux can run in one of three modes: disabled, permissive, or enforcing:
# - Enforcing - Is the default, and recommended, mode of operation; in enforcing mode SELinux operates normally, enforcing the loaded security policy on the entire system.
# - Permissive - The system acts as if SELinux is enforcing the loaded security policy, including labeling objects and emitting access denial entries in the logs, but it does not actually deny any operations. While not recommended for production systems, permissive mode can be helpful for SELinux policy development.
# - Disabled - Is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future
# 
# _Note: you can set individual domains to permissive mode while the system runs in enforcing mode. For example, to make the httpd_t domain permissive:_
# ```
# # semanage permissive -a httpd_t
#  Rationale Statement :  Running SELinux in disabled mode the system not only avoids enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future. 
# 
# Running SELinux in Permissive mode, though helpful for developing SELinux policy, only logs access denial entries, but does not deny any operations.


- name: AUDIT - 1.6.1.5 - Ensure the SELinux mode is enforcing
  shell: "sh {{ role_path }}/files/1.6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_5
  failed_when: "results_1_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.5 - Ensure the SELinux mode is enforcing
  debug: msg="rc={{ results_1_6_1_5.rc }} :- results={{ results_1_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.5,Ensure the SELinux mode is enforcing,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.6.1.5 - Ensure the SELinux mode is enforcing
#  Profile :  Level 2 - Workstation
#  Description :  SELinux can run in one of three modes: disabled, permissive, or enforcing:
# - Enforcing - Is the default, and recommended, mode of operation; in enforcing mode SELinux operates normally, enforcing the loaded security policy on the entire system.
# - Permissive - The system acts as if SELinux is enforcing the loaded security policy, including labeling objects and emitting access denial entries in the logs, but it does not actually deny any operations. While not recommended for production systems, permissive mode can be helpful for SELinux policy development.
# - Disabled - Is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future
# 
# _Note: you can set individual domains to permissive mode while the system runs in enforcing mode. For example, to make the httpd_t domain permissive:_
# ```
# # semanage permissive -a httpd_t
#  Rationale Statement :  Running SELinux in disabled mode the system not only avoids enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future. 
# 
# Running SELinux in Permissive mode, though helpful for developing SELinux policy, only logs access denial entries, but does not deny any operations.


- name: AUDIT - 1.6.1.5 - Ensure the SELinux mode is enforcing
  shell: "sh {{ role_path }}/files/1.6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_5
  failed_when: "results_1_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.5 - Ensure the SELinux mode is enforcing
  debug: msg="rc={{ results_1_6_1_5.rc }} :- results={{ results_1_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.5,Ensure the SELinux mode is enforcing,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.6.1.6 - Ensure no unconfined services exist
#  Profile :  Level 1 - Server
#  Description :  Unconfined processes run in unconfined domains
#  Rationale Statement :  For unconfined processes, SELinux policy rules are applied, but policy rules exist that allow processes running in unconfined domains almost all access. Processes running in unconfined domains fall back to using DAC rules exclusively. If an unconfined process is compromised, SELinux does not prevent an attacker from gaining access to system resources and data, but of course, DAC rules are still used. SELinux is a security enhancement on top of DAC rules – it does not replace them


- name: AUDIT - 1.6.1.6 - Ensure no unconfined services exist
  shell: "sh {{ role_path }}/files/1.6.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_6
  failed_when: "results_1_6_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.6 - Ensure no unconfined services exist
  debug: msg="rc={{ results_1_6_1_6.rc }} :- results={{ results_1_6_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.6,Ensure no unconfined services exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.6 - Ensure no unconfined services exist
#  Profile :  Level 1 - Workstation
#  Description :  Unconfined processes run in unconfined domains
#  Rationale Statement :  For unconfined processes, SELinux policy rules are applied, but policy rules exist that allow processes running in unconfined domains almost all access. Processes running in unconfined domains fall back to using DAC rules exclusively. If an unconfined process is compromised, SELinux does not prevent an attacker from gaining access to system resources and data, but of course, DAC rules are still used. SELinux is a security enhancement on top of DAC rules – it does not replace them


- name: AUDIT - 1.6.1.6 - Ensure no unconfined services exist
  shell: "sh {{ role_path }}/files/1.6.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_6
  failed_when: "results_1_6_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.6 - Ensure no unconfined services exist
  debug: msg="rc={{ results_1_6_1_6.rc }} :- results={{ results_1_6_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.6,Ensure no unconfined services exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.6.1.7 - Ensure SETroubleshoot is not installed
#  Profile :  Level 1 - Server
#  Description :  The SETroubleshoot service notifies desktop users of SELinux denials through a user-friendly interface. The service provides important information around configuration errors, unauthorized intrusions, and other potential errors.
#  Rationale Statement :  The SETroubleshoot service is an unnecessary daemon to have running on a server, especially if X Windows is disabled.


- name: AUDIT - 1.6.1.7 - Ensure SETroubleshoot is not installed
  shell: "sh {{ role_path }}/files/1.6.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_7
  failed_when: "results_1_6_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.7 - Ensure SETroubleshoot is not installed
  debug: msg="rc={{ results_1_6_1_7.rc }} :- results={{ results_1_6_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.7,Ensure SETroubleshoot is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
#  Profile :  Level 1 - Server
#  Description :  The `mcstransd` daemon provides category label information to client processes requesting information. The label translations are defined in `/etc/selinux/targeted/setrans.conf`
#  Rationale Statement :  Since this service is not used very often, remove it to reduce the amount of potentially vulnerable code running on the system.


- name: AUDIT - 1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
  shell: "sh {{ role_path }}/files/1.6.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_8
  failed_when: "results_1_6_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
  debug: msg="rc={{ results_1_6_1_8.rc }} :- results={{ results_1_6_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.8,Ensure the MCS Translation Service (mcstrans) is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The `mcstransd` daemon provides category label information to client processes requesting information. The label translations are defined in `/etc/selinux/targeted/setrans.conf`
#  Rationale Statement :  Since this service is not used very often, remove it to reduce the amount of potentially vulnerable code running on the system.


- name: AUDIT - 1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
  shell: "sh {{ role_path }}/files/1.6.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_6_1_8
  failed_when: "results_1_6_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_6_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.6.1.8 - Ensure the MCS Translation Service (mcstrans) is not installed
  debug: msg="rc={{ results_1_6_1_8.rc }} :- results={{ results_1_6_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.6.1.8,Ensure the MCS Translation Service (mcstrans) is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.1 - Ensure message of the day is configured properly
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/motd` file are displayed to users after login and function as a message of the day for authenticated users.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.1 - Ensure message of the day is configured properly
  shell: "sh {{ role_path }}/files/1.7.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_1
  failed_when: "results_1_7_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.1 - Ensure message of the day is configured properly
  debug: msg="rc={{ results_1_7_1.rc }} :- results={{ results_1_7_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.1,Ensure message of the day is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.1 - Ensure message of the day is configured properly
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/motd` file are displayed to users after login and function as a message of the day for authenticated users.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.1 - Ensure message of the day is configured properly
  shell: "sh {{ role_path }}/files/1.7.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_1
  failed_when: "results_1_7_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.1 - Ensure message of the day is configured properly
  debug: msg="rc={{ results_1_7_1.rc }} :- results={{ results_1_7_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.1,Ensure message of the day is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.2 - Ensure local login warning banner is configured properly
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/issue` file are displayed to users prior to login for local terminals.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version - or the operating system's name
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.2 - Ensure local login warning banner is configured properly
  shell: "sh {{ role_path }}/files/1.7.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_2
  failed_when: "results_1_7_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.2 - Ensure local login warning banner is configured properly
  debug: msg="rc={{ results_1_7_2.rc }} :- results={{ results_1_7_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.2,Ensure local login warning banner is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.2 - Ensure local login warning banner is configured properly
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/issue` file are displayed to users prior to login for local terminals.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version - or the operating system's name
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.2 - Ensure local login warning banner is configured properly
  shell: "sh {{ role_path }}/files/1.7.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_2
  failed_when: "results_1_7_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.2 - Ensure local login warning banner is configured properly
  debug: msg="rc={{ results_1_7_2.rc }} :- results={{ results_1_7_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.2,Ensure local login warning banner is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.3 - Ensure remote login warning banner is configured properly
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/issue.net` file are displayed to users prior to login for remote connections from configured services.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.3 - Ensure remote login warning banner is configured properly
  shell: "sh {{ role_path }}/files/1.7.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_3
  failed_when: "results_1_7_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.3 - Ensure remote login warning banner is configured properly
  debug: msg="rc={{ results_1_7_3.rc }} :- results={{ results_1_7_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.3,Ensure remote login warning banner is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.3 - Ensure remote login warning banner is configured properly
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/issue.net` file are displayed to users prior to login for remote connections from configured services.
# 
# Unix-based systems have typically displayed information about the OS release and patch level upon logging in to the system. This information can be useful to developers who are developing software for a particular OS platform. If `mingetty(8)` supports the following options, they display operating system information: `\m` - machine architecture `\r` - operating system release `\s` - operating system name `\v` - operating system version
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place. Displaying OS and patch level information in login banners also has the side effect of providing detailed system information to attackers attempting to target specific exploits of a system. Authorized users can easily get this information by running the " `uname -a` " command once they have logged in.


- name: AUDIT - 1.7.3 - Ensure remote login warning banner is configured properly
  shell: "sh {{ role_path }}/files/1.7.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_3
  failed_when: "results_1_7_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.3 - Ensure remote login warning banner is configured properly
  debug: msg="rc={{ results_1_7_3.rc }} :- results={{ results_1_7_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.3,Ensure remote login warning banner is configured properly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.4 - Ensure permissions on /etc/motd are configured
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/motd` file are displayed to users after login and function as a message of the day for authenticated users.
#  Rationale Statement :  If the `/etc/motd` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.4 - Ensure permissions on /etc/motd are configured
  shell: "sh {{ role_path }}/files/1.7.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_4
  failed_when: "results_1_7_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.4 - Ensure permissions on /etc/motd are configured
  debug: msg="rc={{ results_1_7_4.rc }} :- results={{ results_1_7_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.4,Ensure permissions on /etc/motd are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.4 - Ensure permissions on /etc/motd are configured
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/motd` file are displayed to users after login and function as a message of the day for authenticated users.
#  Rationale Statement :  If the `/etc/motd` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.4 - Ensure permissions on /etc/motd are configured
  shell: "sh {{ role_path }}/files/1.7.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_4
  failed_when: "results_1_7_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.4 - Ensure permissions on /etc/motd are configured
  debug: msg="rc={{ results_1_7_4.rc }} :- results={{ results_1_7_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.4,Ensure permissions on /etc/motd are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.5 - Ensure permissions on /etc/issue are configured
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/issue` file are displayed to users prior to login for local terminals.
#  Rationale Statement :  If the `/etc/issue` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.5 - Ensure permissions on /etc/issue are configured
  shell: "sh {{ role_path }}/files/1.7.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_5
  failed_when: "results_1_7_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.5 - Ensure permissions on /etc/issue are configured
  debug: msg="rc={{ results_1_7_5.rc }} :- results={{ results_1_7_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.5,Ensure permissions on /etc/issue are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.5 - Ensure permissions on /etc/issue are configured
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/issue` file are displayed to users prior to login for local terminals.
#  Rationale Statement :  If the `/etc/issue` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.5 - Ensure permissions on /etc/issue are configured
  shell: "sh {{ role_path }}/files/1.7.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_5
  failed_when: "results_1_7_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.5 - Ensure permissions on /etc/issue are configured
  debug: msg="rc={{ results_1_7_5.rc }} :- results={{ results_1_7_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.5,Ensure permissions on /etc/issue are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.7.6 - Ensure permissions on /etc/issue.net are configured
#  Profile :  Level 1 - Server
#  Description :  The contents of the `/etc/issue.net` file are displayed to users prior to login for remote connections from configured services.
#  Rationale Statement :  If the `/etc/issue.net` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.6 - Ensure permissions on /etc/issue.net are configured
  shell: "sh {{ role_path }}/files/1.7.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_6
  failed_when: "results_1_7_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.7.6 - Ensure permissions on /etc/issue.net are configured
  debug: msg="rc={{ results_1_7_6.rc }} :- results={{ results_1_7_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.6,Ensure permissions on /etc/issue.net are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.7.6 - Ensure permissions on /etc/issue.net are configured
#  Profile :  Level 1 - Workstation
#  Description :  The contents of the `/etc/issue.net` file are displayed to users prior to login for remote connections from configured services.
#  Rationale Statement :  If the `/etc/issue.net` file does not have the correct ownership it could be modified by unauthorized users with incorrect or misleading information.


- name: AUDIT - 1.7.6 - Ensure permissions on /etc/issue.net are configured
  shell: "sh {{ role_path }}/files/1.7.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_7_6
  failed_when: "results_1_7_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_7_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.7.6 - Ensure permissions on /etc/issue.net are configured
  debug: msg="rc={{ results_1_7_6.rc }} :- results={{ results_1_7_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.7.6,Ensure permissions on /etc/issue.net are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.1 - Ensure GNOME Display Manager is removed
#  Profile :  Level 2 - Server
#  Description :  The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.
#  Rationale Statement :  If a Graphical User Interface (GUI) is not required, it should be removed to reduce the attack surface of the system.


- name: AUDIT - 1.8.1 - Ensure GNOME Display Manager is removed
  shell: "sh {{ role_path }}/files/1.8.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_1
  failed_when: "results_1_8_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - RESULTS - 1.8.1 - Ensure GNOME Display Manager is removed
  debug: msg="rc={{ results_1_8_1.rc }} :- results={{ results_1_8_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.1,Ensure GNOME Display Manager is removed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section1


####################################################
#  Title  -  1.8.2 - Ensure GDM login banner is configured
#  Profile :  Level 1 - Server
#  Description :  GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.


- name: AUDIT - 1.8.2 - Ensure GDM login banner is configured
  shell: "sh {{ role_path }}/files/1.8.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_2
  failed_when: "results_1_8_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.2 - Ensure GDM login banner is configured
  debug: msg="rc={{ results_1_8_2.rc }} :- results={{ results_1_8_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.2,Ensure GDM login banner is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.2 - Ensure GDM login banner is configured
#  Profile :  Level 1 - Workstation
#  Description :  GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.
#  Rationale Statement :  Warning messages inform users who are attempting to login to the system of their legal status regarding the system and must include the name of the organization that owns the system and any monitoring policies that are in place.


- name: AUDIT - 1.8.2 - Ensure GDM login banner is configured
  shell: "sh {{ role_path }}/files/1.8.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_2
  failed_when: "results_1_8_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.2 - Ensure GDM login banner is configured
  debug: msg="rc={{ results_1_8_2.rc }} :- results={{ results_1_8_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.2,Ensure GDM login banner is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.3 - Ensure GDM disable-user-list option is enabled
#  Profile :  Level 1 - Server
#  Description :  GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.
# 
# The `disable-user-list` option controls if a list of users is displayed on the login screen
#  Rationale Statement :  Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.


- name: AUDIT - 1.8.3 - Ensure GDM disable-user-list option is enabled
  shell: "sh {{ role_path }}/files/1.8.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_3
  failed_when: "results_1_8_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.3 - Ensure GDM disable-user-list option is enabled
  debug: msg="rc={{ results_1_8_3.rc }} :- results={{ results_1_8_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.3,Ensure GDM disable-user-list option is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.3 - Ensure GDM disable-user-list option is enabled
#  Profile :  Level 1 - Workstation
#  Description :  GDM is the GNOME Display Manager which handles graphical login for GNOME based systems.
# 
# The `disable-user-list` option controls if a list of users is displayed on the login screen
#  Rationale Statement :  Displaying the user list eliminates half of the Userid/Password equation that an unauthorized person would need to log on.


- name: AUDIT - 1.8.3 - Ensure GDM disable-user-list option is enabled
  shell: "sh {{ role_path }}/files/1.8.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_3
  failed_when: "results_1_8_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.3 - Ensure GDM disable-user-list option is enabled
  debug: msg="rc={{ results_1_8_3.rc }} :- results={{ results_1_8_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.3,Ensure GDM disable-user-list option is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.4 - Ensure GDM screen locks when the user is idle
#  Profile :  Level 1 - Server
#  Description :  GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.
# 
# - `idle-delay=uint32 {n}` - Number of seconds of inactivity before the screen goes blank
# - `lock-delay=uint32 {n}` - Number of seconds after the screen is blank before locking the screen
# 
# _Example key file:_
# ```
# # Specify the dconf path
# [org/gnome/desktop/session]
# 
# # Number of seconds of inactivity before the screen goes blank
# # Set to 0 seconds if you want to deactivate the screensaver.
# idle-delay=uint32 900
# 
# # Specify the dconf path
# [org/gnome/desktop/screensaver]
# 
# # Number of seconds after the screen is blank before locking the screen
# lock-delay=uint32 5
# ```
#  Rationale Statement :  Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.


- name: AUDIT - 1.8.4 - Ensure GDM screen locks when the user is idle
  shell: "sh {{ role_path }}/files/1.8.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_4
  failed_when: "results_1_8_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.4 - Ensure GDM screen locks when the user is idle
  debug: msg="rc={{ results_1_8_4.rc }} :- results={{ results_1_8_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.4,Ensure GDM screen locks when the user is idle,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.4 - Ensure GDM screen locks when the user is idle
#  Profile :  Level 1 - Workstation
#  Description :  GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.
# 
# - `idle-delay=uint32 {n}` - Number of seconds of inactivity before the screen goes blank
# - `lock-delay=uint32 {n}` - Number of seconds after the screen is blank before locking the screen
# 
# _Example key file:_
# ```
# # Specify the dconf path
# [org/gnome/desktop/session]
# 
# # Number of seconds of inactivity before the screen goes blank
# # Set to 0 seconds if you want to deactivate the screensaver.
# idle-delay=uint32 900
# 
# # Specify the dconf path
# [org/gnome/desktop/screensaver]
# 
# # Number of seconds after the screen is blank before locking the screen
# lock-delay=uint32 5
# ```
#  Rationale Statement :  Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.


- name: AUDIT - 1.8.4 - Ensure GDM screen locks when the user is idle
  shell: "sh {{ role_path }}/files/1.8.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_4
  failed_when: "results_1_8_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.4 - Ensure GDM screen locks when the user is idle
  debug: msg="rc={{ results_1_8_4.rc }} :- results={{ results_1_8_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.4,Ensure GDM screen locks when the user is idle,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.5 - Ensure GDM screen locks cannot be overridden
#  Profile :  Level 1 - Server
#  Description :  GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# _Example Lock File:_
# 
# ```
# # Lock desktop screensaver settings
# /org/gnome/desktop/session/idle-delay
# /org/gnome/desktop/screensaver/lock-delay
# ```
#  Rationale Statement :  Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.
# 
# Without locking down the system settings, user settings take precedence over the system settings.


- name: AUDIT - 1.8.5 - Ensure GDM screen locks cannot be overridden
  shell: "sh {{ role_path }}/files/1.8.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_5
  failed_when: "results_1_8_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.5 - Ensure GDM screen locks cannot be overridden
  debug: msg="rc={{ results_1_8_5.rc }} :- results={{ results_1_8_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.5,Ensure GDM screen locks cannot be overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.5 - Ensure GDM screen locks cannot be overridden
#  Profile :  Level 1 - Workstation
#  Description :  GNOME Desktop Manager can make the screen lock automatically whenever the user is idle for some amount of time.
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# _Example Lock File:_
# 
# ```
# # Lock desktop screensaver settings
# /org/gnome/desktop/session/idle-delay
# /org/gnome/desktop/screensaver/lock-delay
# ```
#  Rationale Statement :  Setting a lock-out value reduces the window of opportunity for unauthorized user access to another user's session that has been left unattended.
# 
# Without locking down the system settings, user settings take precedence over the system settings.


- name: AUDIT - 1.8.5 - Ensure GDM screen locks cannot be overridden
  shell: "sh {{ role_path }}/files/1.8.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_5
  failed_when: "results_1_8_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.5 - Ensure GDM screen locks cannot be overridden
  debug: msg="rc={{ results_1_8_5.rc }} :- results={{ results_1_8_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.5,Ensure GDM screen locks cannot be overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.6 - Ensure GDM automatic mounting of removable media is disabled
#  Profile :  Level 1 - Server
#  Description :  By default GNOME automatically mounts removable media when inserted as a convenience to the user.
#  Rationale Statement :  With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.


- name: AUDIT - 1.8.6 - Ensure GDM automatic mounting of removable media is disabled
  shell: "sh {{ role_path }}/files/1.8.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_6
  failed_when: "results_1_8_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.6 - Ensure GDM automatic mounting of removable media is disabled
  debug: msg="rc={{ results_1_8_6.rc }} :- results={{ results_1_8_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.6,Ensure GDM automatic mounting of removable media is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.6 - Ensure GDM automatic mounting of removable media is disabled
#  Profile :  Level 2 - Workstation
#  Description :  By default GNOME automatically mounts removable media when inserted as a convenience to the user.
#  Rationale Statement :  With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.


- name: AUDIT - 1.8.6 - Ensure GDM automatic mounting of removable media is disabled
  shell: "sh {{ role_path }}/files/1.8.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_6
  failed_when: "results_1_8_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.6 - Ensure GDM automatic mounting of removable media is disabled
  debug: msg="rc={{ results_1_8_6.rc }} :- results={{ results_1_8_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.6,Ensure GDM automatic mounting of removable media is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
#  Profile :  Level 1 - Server
#  Description :  By default GNOME automatically mounts removable media when inserted as a convenience to the user
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# _Example Lock File:_
# ```
# # Lock automount settings
# /org/gnome/desktop/media-handling/automount
# /org/gnome/desktop/media-handling/automount-open
# ```
#  Rationale Statement :  With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.


- name: AUDIT - 1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
  shell: "sh {{ role_path }}/files/1.8.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_7
  failed_when: "results_1_8_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
  debug: msg="rc={{ results_1_8_7.rc }} :- results={{ results_1_8_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.7,Ensure GDM disabling automatic mounting of removable media is not overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
#  Profile :  Level 2 - Workstation
#  Description :  By default GNOME automatically mounts removable media when inserted as a convenience to the user
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# _Example Lock File:_
# ```
# # Lock automount settings
# /org/gnome/desktop/media-handling/automount
# /org/gnome/desktop/media-handling/automount-open
# ```
#  Rationale Statement :  With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.


- name: AUDIT - 1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
  shell: "sh {{ role_path }}/files/1.8.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_7
  failed_when: "results_1_8_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.7 - Ensure GDM disabling automatic mounting of removable media is not overridden
  debug: msg="rc={{ results_1_8_7.rc }} :- results={{ results_1_8_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.7,Ensure GDM disabling automatic mounting of removable media is not overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section1


####################################################
#  Title  -  1.8.8 - Ensure GDM autorun-never is enabled
#  Profile :  Level 1 - Server
#  Description :  The `autorun-never` setting allows the GNOME Desktop Display Manager to disable autorun through GDM.
#  Rationale Statement :  Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.


- name: AUDIT - 1.8.8 - Ensure GDM autorun-never is enabled
  shell: "sh {{ role_path }}/files/1.8.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_8
  failed_when: "results_1_8_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.8 - Ensure GDM autorun-never is enabled
  debug: msg="rc={{ results_1_8_8.rc }} :- results={{ results_1_8_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.8,Ensure GDM autorun-never is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.8 - Ensure GDM autorun-never is enabled
#  Profile :  Level 1 - Workstation
#  Description :  The `autorun-never` setting allows the GNOME Desktop Display Manager to disable autorun through GDM.
#  Rationale Statement :  Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.


- name: AUDIT - 1.8.8 - Ensure GDM autorun-never is enabled
  shell: "sh {{ role_path }}/files/1.8.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_8
  failed_when: "results_1_8_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.8 - Ensure GDM autorun-never is enabled
  debug: msg="rc={{ results_1_8_8.rc }} :- results={{ results_1_8_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.8,Ensure GDM autorun-never is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.9 - Ensure GDM autorun-never is not overridden
#  Profile :  Level 1 - Server
#  Description :  The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# Example Lock File:
# ```
# # Lock desktop media-handling settings
# /org/gnome/desktop/media-handling/autorun-never
# ```
#  Rationale Statement :  Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.


- name: AUDIT - 1.8.9 - Ensure GDM autorun-never is not overridden
  shell: "sh {{ role_path }}/files/1.8.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_9
  failed_when: "results_1_8_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.9 - Ensure GDM autorun-never is not overridden
  debug: msg="rc={{ results_1_8_9.rc }} :- results={{ results_1_8_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.9,Ensure GDM autorun-never is not overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.9 - Ensure GDM autorun-never is not overridden
#  Profile :  Level 1 - Workstation
#  Description :  The autorun-never setting allows the GNOME Desktop Display Manager to disable autorun through GDM.
# 
# By using the lockdown mode in dconf, you can prevent users from changing specific settings.
# 
# To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.
# 
# Example Lock File:
# ```
# # Lock desktop media-handling settings
# /org/gnome/desktop/media-handling/autorun-never
# ```
#  Rationale Statement :  Malware on removable media may taking advantage of Autorun features when the media is inserted into a system and execute.


- name: AUDIT - 1.8.9 - Ensure GDM autorun-never is not overridden
  shell: "sh {{ role_path }}/files/1.8.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_9
  failed_when: "results_1_8_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.9 - Ensure GDM autorun-never is not overridden
  debug: msg="rc={{ results_1_8_9.rc }} :- results={{ results_1_8_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.9,Ensure GDM autorun-never is not overridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  1.8.10 - Ensure XDCMP is not enabled
#  Profile :  Level 1 - Server
#  Description :  X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays
#  Rationale Statement :  XDMCP is inherently insecure.
# - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user
# - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.


- name: AUDIT - 1.8.10 - Ensure XDCMP is not enabled
  shell: "sh {{ role_path }}/files/1.8.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_10
  failed_when: "results_1_8_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - RESULTS - 1.8.10 - Ensure XDCMP is not enabled
  debug: msg="rc={{ results_1_8_10.rc }} :- results={{ results_1_8_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.10,Ensure XDCMP is not enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section1


####################################################
#  Title  -  1.8.10 - Ensure XDCMP is not enabled
#  Profile :  Level 1 - Workstation
#  Description :  X Display Manager Control Protocol (XDMCP) is designed to provide authenticated access to display management services for remote displays
#  Rationale Statement :  XDMCP is inherently insecure.
# - XDMCP is not a ciphered protocol. This may allow an attacker to capture keystrokes entered by a user
# - XDMCP is vulnerable to man-in-the-middle attacks. This may allow an attacker to steal the credentials of legitimate users by impersonating the XDMCP server.


- name: AUDIT - 1.8.10 - Ensure XDCMP is not enabled
  shell: "sh {{ role_path }}/files/1.8.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_1_8_10
  failed_when: "results_1_8_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- set_fact:
    compliant_status: "{% if results_1_8_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - RESULTS - 1.8.10 - Ensure XDCMP is not enabled
  debug: msg="rc={{ results_1_8_10.rc }} :- results={{ results_1_8_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section1


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "1.8.10,Ensure XDCMP is not enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section1


####################################################
#  Title  -  2.4 - Ensure nonessential services listening on the system are removed or masked
#  Profile :  Level 1 - Server
#  Description :  A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.
# 
# A listening port is a network port on which an application or process listens on, acting as a communication endpoint.
# 
# Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.
#  Rationale Statement :  Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.


- name: AUDIT - 2.4 - Ensure nonessential services listening on the system are removed or masked
  shell: "sh {{ role_path }}/files/2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_4
  failed_when: "results_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.4 - Ensure nonessential services listening on the system are removed or masked
  debug: msg="rc={{ results_2_4.rc }} :- results={{ results_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.4,Ensure nonessential services listening on the system are removed or masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section2


####################################################
#  Title  -  2.4 - Ensure nonessential services listening on the system are removed or masked
#  Profile :  Level 1 - Workstation
#  Description :  A network port is identified by its number, the associated IP address, and the type of the communication protocol such as TCP or UDP.
# 
# A listening port is a network port on which an application or process listens on, acting as a communication endpoint.
# 
# Each listening port can be open or closed (filtered) using a firewall. In general terms, an open port is a network port that accepts incoming packets from remote locations.
#  Rationale Statement :  Services listening on the system pose a potential risk as an attack vector. These services should be reviewed, and if not required, the service should be stopped, and the package containing the service should be removed. If required packages have a dependency, the service should be stopped and masked to reduce the attack surface of the system.


- name: AUDIT - 2.4 - Ensure nonessential services listening on the system are removed or masked
  shell: "sh {{ role_path }}/files/2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_4
  failed_when: "results_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.4 - Ensure nonessential services listening on the system are removed or masked
  debug: msg="rc={{ results_2_4.rc }} :- results={{ results_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.4,Ensure nonessential services listening on the system are removed or masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section2


####################################################
#  Title  -  2.1.1 - Ensure time synchronization is in use
#  Profile :  Level 1 - Server
#  Description :  System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.
# 
# **Note:** If another method for time synchronization is being used, this section may be skipped.
#  Rationale Statement :  Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.


- name: AUDIT - 2.1.1 - Ensure time synchronization is in use
  shell: "sh {{ role_path }}/files/2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_1_1
  failed_when: "results_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.1.1 - Ensure time synchronization is in use
  debug: msg="rc={{ results_2_1_1.rc }} :- results={{ results_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.1.1,Ensure time synchronization is in use,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.1.1 - Ensure time synchronization is in use
#  Profile :  Level 1 - Workstation
#  Description :  System time should be synchronized between all systems in an environment. This is typically done by establishing an authoritative time server or set of servers and having all systems synchronize their clocks to them.
# 
# **Note:** If another method for time synchronization is being used, this section may be skipped.
#  Rationale Statement :  Time synchronization is important to support time sensitive security mechanisms like Kerberos and also ensures log files have consistent time records across the enterprise, which aids in forensic investigations.


- name: AUDIT - 2.1.1 - Ensure time synchronization is in use
  shell: "sh {{ role_path }}/files/2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_1_1
  failed_when: "results_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.1.1 - Ensure time synchronization is in use
  debug: msg="rc={{ results_2_1_1.rc }} :- results={{ results_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.1.1,Ensure time synchronization is in use,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.1.2 - Ensure chrony is configured
#  Profile :  Level 1 - Server
#  Description :  `chrony` is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on `chrony` can be found at <http://chrony.tuxfamily.org/>. `chrony` can be configured to be a client and/or a server.
#  Rationale Statement :  If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.


- name: AUDIT - 2.1.2 - Ensure chrony is configured
  shell: "sh {{ role_path }}/files/2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_1_2
  failed_when: "results_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.1.2 - Ensure chrony is configured
  debug: msg="rc={{ results_2_1_2.rc }} :- results={{ results_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.1.2,Ensure chrony is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.1.2 - Ensure chrony is configured
#  Profile :  Level 1 - Workstation
#  Description :  `chrony` is a daemon which implements the Network Time Protocol (NTP) and is designed to synchronize system clocks across a variety of systems and use a source that is highly accurate. More information on `chrony` can be found at <http://chrony.tuxfamily.org/>. `chrony` can be configured to be a client and/or a server.
#  Rationale Statement :  If chrony is in use on the system proper configuration is vital to ensuring time synchronization is working properly.


- name: AUDIT - 2.1.2 - Ensure chrony is configured
  shell: "sh {{ role_path }}/files/2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_1_2
  failed_when: "results_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.1.2 - Ensure chrony is configured
  debug: msg="rc={{ results_2_1_2.rc }} :- results={{ results_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.1.2,Ensure chrony is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.1 - Ensure xorg-x11-server-common is not installed
#  Profile :  Level 2 - Server
#  Description :  The X Window System provides a Graphical User Interface (GUI) where users can have multiple windows in which to run programs and various add on. The X Windows system is typically used on workstations where users login, but not on servers where users typically do not login.
#  Rationale Statement :  Unless your organization specifically requires graphical login access via X Windows, remove it to reduce the potential attack surface.


- name: AUDIT - 2.2.1 - Ensure xorg-x11-server-common is not installed
  shell: "sh {{ role_path }}/files/2.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_1
  failed_when: "results_2_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section2


- name: AUDIT - RESULTS - 2.2.1 - Ensure xorg-x11-server-common is not installed
  debug: msg="rc={{ results_2_2_1.rc }} :- results={{ results_2_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.1,Ensure xorg-x11-server-common is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section2


####################################################
#  Title  -  2.2.2 - Ensure Avahi Server is not installed
#  Profile :  Level 1 - Server
#  Description :  Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.
#  Rationale Statement :  Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.


- name: AUDIT - 2.2.2 - Ensure Avahi Server is not installed
  shell: "sh {{ role_path }}/files/2.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_2
  failed_when: "results_2_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.2 - Ensure Avahi Server is not installed
  debug: msg="rc={{ results_2_2_2.rc }} :- results={{ results_2_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.2,Ensure Avahi Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.2 - Ensure Avahi Server is not installed
#  Profile :  Level 2 - Workstation
#  Description :  Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.
#  Rationale Statement :  Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.


- name: AUDIT - 2.2.2 - Ensure Avahi Server is not installed
  shell: "sh {{ role_path }}/files/2.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_2
  failed_when: "results_2_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.2 - Ensure Avahi Server is not installed
  debug: msg="rc={{ results_2_2_2.rc }} :- results={{ results_2_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.2,Ensure Avahi Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section2


####################################################
#  Title  -  2.2.3 - Ensure CUPS is not installed
#  Profile :  Level 1 - Server
#  Description :  The Common Unix Print System (CUPS) provides the ability to print to both local and network printers. A system running CUPS can also accept print jobs from remote systems and print them to local printers. It also provides a web based remote administration capability.
#  Rationale Statement :  If the system does not need to print jobs or accept print jobs from other systems, it is recommended that CUPS be removed to reduce the potential attack surface.
# 
# _Note: Removing CUPS will prevent printing from the system_


- name: AUDIT - 2.2.3 - Ensure CUPS is not installed
  shell: "sh {{ role_path }}/files/2.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_3
  failed_when: "results_2_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.3 - Ensure CUPS is not installed
  debug: msg="rc={{ results_2_2_3.rc }} :- results={{ results_2_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.3,Ensure CUPS is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.4 - Ensure DHCP Server is not installed
#  Profile :  Level 1 - Server
#  Description :  The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.
#  Rationale Statement :  Unless a system is specifically set up to act as a DHCP server, it is recommended that the `dhcp-server` package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.4 - Ensure DHCP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_4
  failed_when: "results_2_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.4 - Ensure DHCP Server is not installed
  debug: msg="rc={{ results_2_2_4.rc }} :- results={{ results_2_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.4,Ensure DHCP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.4 - Ensure DHCP Server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to be dynamically assigned IP addresses.
#  Rationale Statement :  Unless a system is specifically set up to act as a DHCP server, it is recommended that the `dhcp-server` package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.4 - Ensure DHCP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_4
  failed_when: "results_2_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.4 - Ensure DHCP Server is not installed
  debug: msg="rc={{ results_2_2_4.rc }} :- results={{ results_2_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.4,Ensure DHCP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.5 - Ensure DNS Server is not installed
#  Profile :  Level 1 - Server
#  Description :  The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.
#  Rationale Statement :  Unless a system is specifically designated to act as a DNS server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.5 - Ensure DNS Server is not installed
  shell: "sh {{ role_path }}/files/2.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_5
  failed_when: "results_2_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.5 - Ensure DNS Server is not installed
  debug: msg="rc={{ results_2_2_5.rc }} :- results={{ results_2_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.5,Ensure DNS Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.5 - Ensure DNS Server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The Domain Name System (DNS) is a hierarchical naming system that maps names to IP addresses for computers, services and other resources connected to a network.
#  Rationale Statement :  Unless a system is specifically designated to act as a DNS server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.5 - Ensure DNS Server is not installed
  shell: "sh {{ role_path }}/files/2.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_5
  failed_when: "results_2_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.5 - Ensure DNS Server is not installed
  debug: msg="rc={{ results_2_2_5.rc }} :- results={{ results_2_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.5,Ensure DNS Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.6 - Ensure VSFTP Server is not installed
#  Profile :  Level 1 - Server
#  Description :  FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).
#  Rationale Statement :  Unless there is a need to run the system as a FTP server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.6 - Ensure VSFTP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_6
  failed_when: "results_2_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.6 - Ensure VSFTP Server is not installed
  debug: msg="rc={{ results_2_2_6.rc }} :- results={{ results_2_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.6,Ensure VSFTP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.6 - Ensure VSFTP Server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).
#  Rationale Statement :  Unless there is a need to run the system as a FTP server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.6 - Ensure VSFTP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_6
  failed_when: "results_2_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.6 - Ensure VSFTP Server is not installed
  debug: msg="rc={{ results_2_2_6.rc }} :- results={{ results_2_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.6,Ensure VSFTP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.7 - Ensure TFTP Server is not installed
#  Profile :  Level 1 - Server
#  Description :  Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.
#  Rationale Statement :  Unless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.
# 
# TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files


- name: AUDIT - 2.2.7 - Ensure TFTP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_7
  failed_when: "results_2_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.7 - Ensure TFTP Server is not installed
  debug: msg="rc={{ results_2_2_7.rc }} :- results={{ results_2_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.7,Ensure TFTP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.7 - Ensure TFTP Server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.
#  Rationale Statement :  Unless there is a need to run the system as a TFTP server, it is recommended that the package be removed to reduce the potential attack surface.
# 
# TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files


- name: AUDIT - 2.2.7 - Ensure TFTP Server is not installed
  shell: "sh {{ role_path }}/files/2.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_7
  failed_when: "results_2_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.7 - Ensure TFTP Server is not installed
  debug: msg="rc={{ results_2_2_7.rc }} :- results={{ results_2_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.7,Ensure TFTP Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.8 - Ensure a web server is not installed
#  Profile :  Level 1 - Server
#  Description :  Web servers provide the ability to host web site content.
#  Rationale Statement :  Unless there is a need to run the system as a web server, it is recommended that the packages be removed to reduce the potential attack surface.
# 
# **Note:** Several http servers exist. They should also be audited, and removed, if not required.


- name: AUDIT - 2.2.8 - Ensure a web server is not installed
  shell: "sh {{ role_path }}/files/2.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_8
  failed_when: "results_2_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.8 - Ensure a web server is not installed
  debug: msg="rc={{ results_2_2_8.rc }} :- results={{ results_2_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.8,Ensure a web server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.8 - Ensure a web server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  Web servers provide the ability to host web site content.
#  Rationale Statement :  Unless there is a need to run the system as a web server, it is recommended that the packages be removed to reduce the potential attack surface.
# 
# **Note:** Several http servers exist. They should also be audited, and removed, if not required.


- name: AUDIT - 2.2.8 - Ensure a web server is not installed
  shell: "sh {{ role_path }}/files/2.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_8
  failed_when: "results_2_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.8 - Ensure a web server is not installed
  debug: msg="rc={{ results_2_2_8.rc }} :- results={{ results_2_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.8,Ensure a web server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.9 - Ensure IMAP and POP3 server is not installed
#  Profile :  Level 1 - Server
#  Description :  `dovecot` is an open source IMAP and POP3 server for Linux based systems.
#  Rationale Statement :  Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.
# 
# **Note:** Several IMAP/POP3 servers exist and can use other service names. These should also be audited and the packages removed if not required.


- name: AUDIT - 2.2.9 - Ensure IMAP and POP3 server is not installed
  shell: "sh {{ role_path }}/files/2.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_9
  failed_when: "results_2_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.9 - Ensure IMAP and POP3 server is not installed
  debug: msg="rc={{ results_2_2_9.rc }} :- results={{ results_2_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.9,Ensure IMAP and POP3 server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.9 - Ensure IMAP and POP3 server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  `dovecot` is an open source IMAP and POP3 server for Linux based systems.
#  Rationale Statement :  Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface.
# 
# **Note:** Several IMAP/POP3 servers exist and can use other service names. These should also be audited and the packages removed if not required.


- name: AUDIT - 2.2.9 - Ensure IMAP and POP3 server is not installed
  shell: "sh {{ role_path }}/files/2.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_9
  failed_when: "results_2_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.9 - Ensure IMAP and POP3 server is not installed
  debug: msg="rc={{ results_2_2_9.rc }} :- results={{ results_2_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.9,Ensure IMAP and POP3 server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.10 - Ensure Samba is not installed
#  Profile :  Level 1 - Server
#  Description :  The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.
#  Rationale Statement :  If there is no need to mount directories and file systems to Windows systems, then this package can be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.10 - Ensure Samba is not installed
  shell: "sh {{ role_path }}/files/2.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_10
  failed_when: "results_2_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.10 - Ensure Samba is not installed
  debug: msg="rc={{ results_2_2_10.rc }} :- results={{ results_2_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.10,Ensure Samba is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.10 - Ensure Samba is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The Samba daemon allows system administrators to configure their Linux systems to share file systems and directories with Windows desktops. Samba will advertise the file systems and directories via the Server Message Block (SMB) protocol. Windows desktop users will be able to mount these directories and file systems as letter drives on their systems.
#  Rationale Statement :  If there is no need to mount directories and file systems to Windows systems, then this package can be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.10 - Ensure Samba is not installed
  shell: "sh {{ role_path }}/files/2.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_10
  failed_when: "results_2_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.10 - Ensure Samba is not installed
  debug: msg="rc={{ results_2_2_10.rc }} :- results={{ results_2_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.10,Ensure Samba is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.11 - Ensure HTTP Proxy Server is not installed
#  Profile :  Level 1 - Server
#  Description :  Squid is a standard proxy server used in many distributions and environments.
#  Rationale Statement :  Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.
# 
# **Note:** Several HTTP proxy servers exist. These should be checked and removed unless required.


- name: AUDIT - 2.2.11 - Ensure HTTP Proxy Server is not installed
  shell: "sh {{ role_path }}/files/2.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_11
  failed_when: "results_2_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.11 - Ensure HTTP Proxy Server is not installed
  debug: msg="rc={{ results_2_2_11.rc }} :- results={{ results_2_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.11,Ensure HTTP Proxy Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.11 - Ensure HTTP Proxy Server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  Squid is a standard proxy server used in many distributions and environments.
#  Rationale Statement :  Unless a system is specifically set up to act as a proxy server, it is recommended that the squid package be removed to reduce the potential attack surface.
# 
# **Note:** Several HTTP proxy servers exist. These should be checked and removed unless required.


- name: AUDIT - 2.2.11 - Ensure HTTP Proxy Server is not installed
  shell: "sh {{ role_path }}/files/2.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_11
  failed_when: "results_2_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.11 - Ensure HTTP Proxy Server is not installed
  debug: msg="rc={{ results_2_2_11.rc }} :- results={{ results_2_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.11,Ensure HTTP Proxy Server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.12 - Ensure net-snmp is not installed
#  Profile :  Level 1 - Server
#  Description :  Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs. 
# 
# Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. 
# 
# Support for SNMPv2 classic (a.k.a. "SNMPv2 historic" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.
# 
# The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.
#  Rationale Statement :  The SNMP server can communicate using `SNMPv1`, which transmits data in the clear and does not require authentication to execute commands. `SNMPv3` replaces the simple/clear text password sharing used in `SNMPv2` with more securely encoded parameters. If the the SNMP service is not required, the `net-snmp` package should be removed to reduce the attack surface of the system.
# 
# **Note:** If SNMP is required:
# - The server should be configured for `SNMP v3` only. `User Authentication` and `Message Encryption` should be configured.
# - If `SNMP v2` is **absolutely** necessary, modify the community strings' values.


- name: AUDIT - 2.2.12 - Ensure net-snmp is not installed
  shell: "sh {{ role_path }}/files/2.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_12
  failed_when: "results_2_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.12 - Ensure net-snmp is not installed
  debug: msg="rc={{ results_2_2_12.rc }} :- results={{ results_2_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.12,Ensure net-snmp is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.12 - Ensure net-snmp is not installed
#  Profile :  Level 1 - Workstation
#  Description :  Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring the health and welfare of network equipment, computer equipment and devices like UPSs. 
# 
# Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2 (RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6. 
# 
# Support for SNMPv2 classic (a.k.a. "SNMPv2 historic" - RFCs 1441-1452) was dropped with the 4.0 release of the UCD-snmp package.
# 
# The Simple Network Management Protocol (SNMP) server is used to listen for SNMP commands from an SNMP management system, execute the commands or collect the information and then send results back to the requesting system.
#  Rationale Statement :  The SNMP server can communicate using `SNMPv1`, which transmits data in the clear and does not require authentication to execute commands. `SNMPv3` replaces the simple/clear text password sharing used in `SNMPv2` with more securely encoded parameters. If the the SNMP service is not required, the `net-snmp` package should be removed to reduce the attack surface of the system.
# 
# **Note:** If SNMP is required:
# - The server should be configured for `SNMP v3` only. `User Authentication` and `Message Encryption` should be configured.
# - If `SNMP v2` is **absolutely** necessary, modify the community strings' values.


- name: AUDIT - 2.2.12 - Ensure net-snmp is not installed
  shell: "sh {{ role_path }}/files/2.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_12
  failed_when: "results_2_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.12 - Ensure net-snmp is not installed
  debug: msg="rc={{ results_2_2_12.rc }} :- results={{ results_2_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.12,Ensure net-snmp is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.13 - Ensure telnet-server is not installed
#  Profile :  Level 1 - Server
#  Description :  The `telnet-server` package contains the `telnet` daemon, which accepts connections from users from other systems via the `telnet` protocol.
#  Rationale Statement :  The `telnet` protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The `ssh` package provides an encrypted session and stronger security.


- name: AUDIT - 2.2.13 - Ensure telnet-server is not installed
  shell: "sh {{ role_path }}/files/2.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_13
  failed_when: "results_2_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.13 - Ensure telnet-server is not installed
  debug: msg="rc={{ results_2_2_13.rc }} :- results={{ results_2_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.13,Ensure telnet-server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.13 - Ensure telnet-server is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The `telnet-server` package contains the `telnet` daemon, which accepts connections from users from other systems via the `telnet` protocol.
#  Rationale Statement :  The `telnet` protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow a user with access to sniff network traffic the ability to steal credentials. The `ssh` package provides an encrypted session and stronger security.


- name: AUDIT - 2.2.13 - Ensure telnet-server is not installed
  shell: "sh {{ role_path }}/files/2.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_13
  failed_when: "results_2_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.13 - Ensure telnet-server is not installed
  debug: msg="rc={{ results_2_2_13.rc }} :- results={{ results_2_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.13,Ensure telnet-server is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.14 - Ensure dnsmasq is not installed
#  Profile :  Level 1 - Server
#  Description :  `dnsmasq` is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.
#  Rationale Statement :  Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.14 - Ensure dnsmasq is not installed
  shell: "sh {{ role_path }}/files/2.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_14
  failed_when: "results_2_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.14 - Ensure dnsmasq is not installed
  debug: msg="rc={{ results_2_2_14.rc }} :- results={{ results_2_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.14,Ensure dnsmasq is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.14 - Ensure dnsmasq is not installed
#  Profile :  Level 1 - Workstation
#  Description :  `dnsmasq` is a lightweight tool that provides DNS caching, DNS forwarding and DHCP (Dynamic Host Configuration Protocol) services.
#  Rationale Statement :  Unless a system is specifically designated to act as a DNS caching, DNS forwarding and/or DHCP server, it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.2.14 - Ensure dnsmasq is not installed
  shell: "sh {{ role_path }}/files/2.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_14
  failed_when: "results_2_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.14 - Ensure dnsmasq is not installed
  debug: msg="rc={{ results_2_2_14.rc }} :- results={{ results_2_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.14,Ensure dnsmasq is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.15 - Ensure mail transfer agent is configured for local-only mode
#  Profile :  Level 1 - Server
#  Description :  Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.
#  Rationale Statement :  The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.
# 
# **Note:**
# - This recommendation is designed around the postfix mail server.
# - Depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state.


- name: AUDIT - 2.2.15 - Ensure mail transfer agent is configured for local-only mode
  shell: "sh {{ role_path }}/files/2.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_15
  failed_when: "results_2_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.15 - Ensure mail transfer agent is configured for local-only mode
  debug: msg="rc={{ results_2_2_15.rc }} :- results={{ results_2_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.15,Ensure mail transfer agent is configured for local-only mode,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.15 - Ensure mail transfer agent is configured for local-only mode
#  Profile :  Level 1 - Workstation
#  Description :  Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for incoming mail and transfer the messages to the appropriate user or mail server. If the system is not intended to be a mail server, it is recommended that the MTA be configured to only process local mail.
#  Rationale Statement :  The software for all Mail Transfer Agents is complex and most have a long history of security issues. While it is important to ensure that the system can process local mail messages, it is not necessary to have the MTA's daemon listening on a port unless the server is intended to be a mail server that receives and processes mail from other systems.
# 
# **Note:**
# - This recommendation is designed around the postfix mail server.
# - Depending on your environment you may have an alternative MTA installed such as sendmail. If this is the case consult the documentation for your installed MTA to configure the recommended state.


- name: AUDIT - 2.2.15 - Ensure mail transfer agent is configured for local-only mode
  shell: "sh {{ role_path }}/files/2.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_15
  failed_when: "results_2_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.15 - Ensure mail transfer agent is configured for local-only mode
  debug: msg="rc={{ results_2_2_15.rc }} :- results={{ results_2_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.15,Ensure mail transfer agent is configured for local-only mode,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
#  Profile :  Level 1 - Server
#  Description :  The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.
#  Rationale Statement :  If the system does not require network shares, it is recommended that the nfs-utils package be removed to reduce the attack surface of the system.


- name: AUDIT - 2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
  shell: "sh {{ role_path }}/files/2.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_16
  failed_when: "results_2_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
  debug: msg="rc={{ results_2_2_16.rc }} :- results={{ results_2_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.16,Ensure nfs-utils is not installed or the  nfs-server service is masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
#  Profile :  Level 1 - Workstation
#  Description :  The Network File System (NFS) is one of the first and most widely distributed file systems in the UNIX environment. It provides the ability for systems to mount file systems of other servers through the network.
#  Rationale Statement :  If the system does not require network shares, it is recommended that the nfs-utils package be removed to reduce the attack surface of the system.


- name: AUDIT - 2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
  shell: "sh {{ role_path }}/files/2.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_16
  failed_when: "results_2_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.16 - Ensure nfs-utils is not installed or the  nfs-server service is masked
  debug: msg="rc={{ results_2_2_16.rc }} :- results={{ results_2_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.16,Ensure nfs-utils is not installed or the  nfs-server service is masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
#  Profile :  Level 1 - Server
#  Description :  The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service
# 
# Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.
#  Rationale Statement :  A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.


- name: AUDIT - 2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
  shell: "sh {{ role_path }}/files/2.2.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_17
  failed_when: "results_2_2_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
  debug: msg="rc={{ results_2_2_17.rc }} :- results={{ results_2_2_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.17,Ensure rpcbind is not installed or the  rpcbind services are masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
#  Profile :  Level 1 - Workstation
#  Description :  The rpcbind utility maps RPC services to the ports on which they listen. RPC processes notify rpcbind when they start, registering the ports they are listening on and the RPC program numbers they expect to serve. The client system then contacts rpcbind on the server with a particular RPC program number. The rpcbind service redirects the client to the proper port number so it can communicate with the requested service
# 
# Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their corresponding port number on the server. When a remote host makes an RPC call to that server, it first consults with portmap to determine where the RPC server is listening.
#  Rationale Statement :  A small request (~82 bytes via UDP) sent to the Portmapper generates a large response (7x to 28x amplification), which makes it a suitable tool for DDoS attacks. If rpcbind is not required, it is recommended that the rpcbind package be removed to reduce the attack surface of the system.


- name: AUDIT - 2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
  shell: "sh {{ role_path }}/files/2.2.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_17
  failed_when: "results_2_2_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.17 - Ensure rpcbind is not installed or the  rpcbind services are masked
  debug: msg="rc={{ results_2_2_17.rc }} :- results={{ results_2_2_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.17,Ensure rpcbind is not installed or the  rpcbind services are masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
#  Profile :  Level 1 - Server
#  Description :  The `rsyncd` service can be used to synchronize files between systems over network links.
#  Rationale Statement :  Unless required, the `rsync-daemon` package should be removed to reduce the attack surface area of the system.
# 
# The `rsyncd` service presents a security risk as it uses unencrypted protocols for communication.
# 
# Note: If a required dependency exists for the `rsync-daemon` package, but the `rsyncd` service is not required, the service should be masked.


- name: AUDIT - 2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
  shell: "sh {{ role_path }}/files/2.2.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_18
  failed_when: "results_2_2_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
  debug: msg="rc={{ results_2_2_18.rc }} :- results={{ results_2_2_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.18,Ensure rsync-daemon is not installed or the rsyncd service is masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
#  Profile :  Level 1 - Workstation
#  Description :  The `rsyncd` service can be used to synchronize files between systems over network links.
#  Rationale Statement :  Unless required, the `rsync-daemon` package should be removed to reduce the attack surface area of the system.
# 
# The `rsyncd` service presents a security risk as it uses unencrypted protocols for communication.
# 
# Note: If a required dependency exists for the `rsync-daemon` package, but the `rsyncd` service is not required, the service should be masked.


- name: AUDIT - 2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
  shell: "sh {{ role_path }}/files/2.2.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_2_18
  failed_when: "results_2_2_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_2_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.2.18 - Ensure rsync-daemon is not installed or the rsyncd service is masked
  debug: msg="rc={{ results_2_2_18.rc }} :- results={{ results_2_2_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.2.18,Ensure rsync-daemon is not installed or the rsyncd service is masked,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.3.1 - Ensure telnet client is not installed
#  Profile :  Level 1 - Server
#  Description :  The `telnet` package contains the `telnet` client, which allows users to start connections to other systems via the telnet protocol.
#  Rationale Statement :  The `telnet` protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The `ssh` package provides an encrypted session and stronger security and is included in most Linux distributions.


- name: AUDIT - 2.3.1 - Ensure telnet client is not installed
  shell: "sh {{ role_path }}/files/2.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_1
  failed_when: "results_2_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.3.1 - Ensure telnet client is not installed
  debug: msg="rc={{ results_2_3_1.rc }} :- results={{ results_2_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.1,Ensure telnet client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.3.1 - Ensure telnet client is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The `telnet` package contains the `telnet` client, which allows users to start connections to other systems via the telnet protocol.
#  Rationale Statement :  The `telnet` protocol is insecure and unencrypted. The use of an unencrypted transmission medium could allow an unauthorized user to steal credentials. The `ssh` package provides an encrypted session and stronger security and is included in most Linux distributions.


- name: AUDIT - 2.3.1 - Ensure telnet client is not installed
  shell: "sh {{ role_path }}/files/2.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_1
  failed_when: "results_2_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.3.1 - Ensure telnet client is not installed
  debug: msg="rc={{ results_2_3_1.rc }} :- results={{ results_2_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.1,Ensure telnet client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.3.2 - Ensure LDAP client is not installed
#  Profile :  Level 1 - Server
#  Description :  The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.
#  Rationale Statement :  If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.


- name: AUDIT - 2.3.2 - Ensure LDAP client is not installed
  shell: "sh {{ role_path }}/files/2.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_2
  failed_when: "results_2_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.3.2 - Ensure LDAP client is not installed
  debug: msg="rc={{ results_2_3_2.rc }} :- results={{ results_2_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.2,Ensure LDAP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.3.2 - Ensure LDAP client is not installed
#  Profile :  Level 1 - Workstation
#  Description :  The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for NIS/YP. It is a service that provides a method for looking up information from a central database.
#  Rationale Statement :  If the system will not need to act as an LDAP client, it is recommended that the software be removed to reduce the potential attack surface.


- name: AUDIT - 2.3.2 - Ensure LDAP client is not installed
  shell: "sh {{ role_path }}/files/2.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_2
  failed_when: "results_2_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.3.2 - Ensure LDAP client is not installed
  debug: msg="rc={{ results_2_3_2.rc }} :- results={{ results_2_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.2,Ensure LDAP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.3.3 - Ensure TFTP client is not installed
#  Profile :  Level 1 - Server
#  Description :  Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.
#  Rationale Statement :  TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files


- name: AUDIT - 2.3.3 - Ensure TFTP client is not installed
  shell: "sh {{ role_path }}/files/2.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_3
  failed_when: "results_2_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.3.3 - Ensure TFTP client is not installed
  debug: msg="rc={{ results_2_3_3.rc }} :- results={{ results_2_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.3,Ensure TFTP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.3.3 - Ensure TFTP client is not installed
#  Profile :  Level 1 - Workstation
#  Description :  Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending and receiving files.
#  Rationale Statement :  TFTP does not have built-in encryption, access control or authentication. This makes it very easy for an attacker to exploit TFTP to gain access to files


- name: AUDIT - 2.3.3 - Ensure TFTP client is not installed
  shell: "sh {{ role_path }}/files/2.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_3
  failed_when: "results_2_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.3.3 - Ensure TFTP client is not installed
  debug: msg="rc={{ results_2_3_3.rc }} :- results={{ results_2_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.3,Ensure TFTP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  2.3.4 - Ensure FTP client is not installed
#  Profile :  Level 1 - Server
#  Description :  FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).
#  Rationale Statement :  FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.3.4 - Ensure FTP client is not installed
  shell: "sh {{ role_path }}/files/2.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_4
  failed_when: "results_2_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - RESULTS - 2.3.4 - Ensure FTP client is not installed
  debug: msg="rc={{ results_2_3_4.rc }} :- results={{ results_2_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.4,Ensure FTP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section2


####################################################
#  Title  -  2.3.4 - Ensure FTP client is not installed
#  Profile :  Level 1 - Workstation
#  Description :  FTP (File Transfer Protocol) is a traditional and widely used standard tool for transferring files between a server and clients over a network, especially where no authentication is necessary (permits anonymous users to connect to a server).
#  Rationale Statement :  FTP does not protect the confidentiality of data or authentication credentials. It is recommended SFTP be used if file transfer is required. Unless there is a need to run the system as a FTP server (for example, to allow anonymous downloads), it is recommended that the package be removed to reduce the potential attack surface.


- name: AUDIT - 2.3.4 - Ensure FTP client is not installed
  shell: "sh {{ role_path }}/files/2.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_2_3_4
  failed_when: "results_2_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- set_fact:
    compliant_status: "{% if results_2_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - RESULTS - 2.3.4 - Ensure FTP client is not installed
  debug: msg="rc={{ results_2_3_4.rc }} :- results={{ results_2_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section2


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "2.3.4,Ensure FTP client is not installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section2


####################################################
#  Title  -  3.1.1 - Ensure IPv6 status is identified
#  Profile :  Level 1 - Server
#  Description :  Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion addresses, which is 340 followed by 36 zeroes.
# 
# Features of IPv6
# - Hierarchical addressing and routing infrastructure
# - Stateful and Stateless configuration
# - Support for quality of service (QoS)
# - An ideal protocol for neighboring node interaction
#  Rationale Statement :  IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.
# 
# If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.
# 
# **Note:** It is recommended that IPv6 be enabled and configured unless this is against local site policy


- name: AUDIT - 3.1.1 - Ensure IPv6 status is identified
  shell: "sh {{ role_path }}/files/3.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_1_1
  failed_when: "results_3_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.1.1 - Ensure IPv6 status is identified
  debug: msg="rc={{ results_3_1_1.rc }} :- results={{ results_3_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.1.1,Ensure IPv6 status is identified,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section3


####################################################
#  Title  -  3.1.1 - Ensure IPv6 status is identified
#  Profile :  Level 1 - Workstation
#  Description :  Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's designed to supply IP addressing and additional security to support the predicted growth of connected devices. IPv6 is based on 128-bit addressing and can support 340 undecillion addresses, which is 340 followed by 36 zeroes.
# 
# Features of IPv6
# - Hierarchical addressing and routing infrastructure
# - Stateful and Stateless configuration
# - Support for quality of service (QoS)
# - An ideal protocol for neighboring node interaction
#  Rationale Statement :  IETF RFC 4038 recommends that applications are built with an assumption of dual stack. It is recommended that IPv6 be enabled and configured in accordance with Benchmark recommendations.
# 
# If dual stack and IPv6 are not used in your environment, IPv6 may be disabled to reduce the attack surface of the system, and recommendations pertaining to IPv6 can be skipped.
# 
# **Note:** It is recommended that IPv6 be enabled and configured unless this is against local site policy


- name: AUDIT - 3.1.1 - Ensure IPv6 status is identified
  shell: "sh {{ role_path }}/files/3.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_1_1
  failed_when: "results_3_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.1.1 - Ensure IPv6 status is identified
  debug: msg="rc={{ results_3_1_1.rc }} :- results={{ results_3_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.1.1,Ensure IPv6 status is identified,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section3


####################################################
#  Title  -  3.1.2 - Ensure wireless interfaces are disabled
#  Profile :  Level 1 - Server
#  Description :  Wireless networking is used when wired networks are unavailable.
#  Rationale Statement :  If wireless is not to be used, wireless devices should be disabled to reduce the potential attack surface.


- name: AUDIT - 3.1.2 - Ensure wireless interfaces are disabled
  shell: "sh {{ role_path }}/files/3.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_1_2
  failed_when: "results_3_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.1.2 - Ensure wireless interfaces are disabled
  debug: msg="rc={{ results_3_1_2.rc }} :- results={{ results_3_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.1.2,Ensure wireless interfaces are disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.1.3 - Ensure TIPC is disabled
#  Profile :  Level 2 - Server
#  Description :  The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.
#  Rationale Statement :  If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.


- name: AUDIT - 3.1.3 - Ensure TIPC is disabled
  shell: "sh {{ role_path }}/files/3.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_1_3
  failed_when: "results_3_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section3


- name: AUDIT - RESULTS - 3.1.3 - Ensure TIPC is disabled
  debug: msg="rc={{ results_3_1_3.rc }} :- results={{ results_3_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.1.3,Ensure TIPC is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section3


####################################################
#  Title  -  3.1.3 - Ensure TIPC is disabled
#  Profile :  Level 2 - Workstation
#  Description :  The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.
#  Rationale Statement :  If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.


- name: AUDIT - 3.1.3 - Ensure TIPC is disabled
  shell: "sh {{ role_path }}/files/3.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_1_3
  failed_when: "results_3_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section3


- name: AUDIT - RESULTS - 3.1.3 - Ensure TIPC is disabled
  debug: msg="rc={{ results_3_1_3.rc }} :- results={{ results_3_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.1.3,Ensure TIPC is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section3


####################################################
#  Title  -  3.2.1 - Ensure IP forwarding is disabled
#  Profile :  Level 1 - Server
#  Description :  The `net.ipv4.ip_forward` and `net.ipv6.conf.all.forwarding` flags are used to tell the system whether it can forward packets or not.
#  Rationale Statement :  Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.


- name: AUDIT - 3.2.1 - Ensure IP forwarding is disabled
  shell: "sh {{ role_path }}/files/3.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_2_1
  failed_when: "results_3_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.2.1 - Ensure IP forwarding is disabled
  debug: msg="rc={{ results_3_2_1.rc }} :- results={{ results_3_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.2.1,Ensure IP forwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.2.1 - Ensure IP forwarding is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `net.ipv4.ip_forward` and `net.ipv6.conf.all.forwarding` flags are used to tell the system whether it can forward packets or not.
#  Rationale Statement :  Setting the flags to 0 ensures that a system with multiple interfaces (for example, a hard proxy), will never be able to forward packets, and therefore, never serve as a router.


- name: AUDIT - 3.2.1 - Ensure IP forwarding is disabled
  shell: "sh {{ role_path }}/files/3.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_2_1
  failed_when: "results_3_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.2.1 - Ensure IP forwarding is disabled
  debug: msg="rc={{ results_3_2_1.rc }} :- results={{ results_3_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.2.1,Ensure IP forwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.2.2 - Ensure packet redirect sending is disabled
#  Profile :  Level 1 - Server
#  Description :  ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.
#  Rationale Statement :  An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.


- name: AUDIT - 3.2.2 - Ensure packet redirect sending is disabled
  shell: "sh {{ role_path }}/files/3.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_2_2
  failed_when: "results_3_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.2.2 - Ensure packet redirect sending is disabled
  debug: msg="rc={{ results_3_2_2.rc }} :- results={{ results_3_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.2.2,Ensure packet redirect sending is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.2.2 - Ensure packet redirect sending is disabled
#  Profile :  Level 1 - Workstation
#  Description :  ICMP Redirects are used to send routing information to other hosts. As a host itself does not act as a router (in a host only configuration), there is no need to send redirects.
#  Rationale Statement :  An attacker could use a compromised host to send invalid ICMP redirects to other router devices in an attempt to corrupt routing and have users access a system set up by the attacker as opposed to a valid system.


- name: AUDIT - 3.2.2 - Ensure packet redirect sending is disabled
  shell: "sh {{ role_path }}/files/3.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_2_2
  failed_when: "results_3_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.2.2 - Ensure packet redirect sending is disabled
  debug: msg="rc={{ results_3_2_2.rc }} :- results={{ results_3_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.2.2,Ensure packet redirect sending is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.1 - Ensure source routed packets are not accepted
#  Profile :  Level 1 - Server
#  Description :  In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.
#  Rationale Statement :  Setting `net.ipv4.conf.all.accept_source_route`, `net.ipv4.conf.default.accept_source_route`, `net.ipv6.conf.all.accept_source_route` and `net.ipv6.conf.default.accept_source_route` to `0` disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.


- name: AUDIT - 3.3.1 - Ensure source routed packets are not accepted
  shell: "sh {{ role_path }}/files/3.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_1
  failed_when: "results_3_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.1 - Ensure source routed packets are not accepted
  debug: msg="rc={{ results_3_3_1.rc }} :- results={{ results_3_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.1,Ensure source routed packets are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.1 - Ensure source routed packets are not accepted
#  Profile :  Level 1 - Workstation
#  Description :  In networking, source routing allows a sender to partially or fully specify the route packets take through a network. In contrast, non-source routed packets travel a path determined by routers in the network. In some cases, systems may not be routable or reachable from some locations (e.g. private addresses vs. Internet routable), and so source routed packets would need to be used.
#  Rationale Statement :  Setting `net.ipv4.conf.all.accept_source_route`, `net.ipv4.conf.default.accept_source_route`, `net.ipv6.conf.all.accept_source_route` and `net.ipv6.conf.default.accept_source_route` to `0` disables the system from accepting source routed packets. Assume this system was capable of routing packets to Internet routable addresses on one interface and private addresses on another interface. Assume that the private addresses were not routable to the Internet routable addresses and vice versa. Under normal routing circumstances, an attacker from the Internet routable addresses could not use the system as a way to reach the private address systems. If, however, source routed packets were allowed, they could be used to gain access to the private address systems as the route could be specified, rather than rely on routing protocols that did not allow this routing.


- name: AUDIT - 3.3.1 - Ensure source routed packets are not accepted
  shell: "sh {{ role_path }}/files/3.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_1
  failed_when: "results_3_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.1 - Ensure source routed packets are not accepted
  debug: msg="rc={{ results_3_3_1.rc }} :- results={{ results_3_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.1,Ensure source routed packets are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.2 - Ensure ICMP redirects are not accepted
#  Profile :  Level 1 - Server
#  Description :  ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting `net.ipv4.conf.all.accept_redirects` and `net.ipv6.conf.all.accept_redirects` to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.
#  Rationale Statement :  Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.


- name: AUDIT - 3.3.2 - Ensure ICMP redirects are not accepted
  shell: "sh {{ role_path }}/files/3.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_2
  failed_when: "results_3_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.2 - Ensure ICMP redirects are not accepted
  debug: msg="rc={{ results_3_3_2.rc }} :- results={{ results_3_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.2,Ensure ICMP redirects are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.2 - Ensure ICMP redirects are not accepted
#  Profile :  Level 1 - Workstation
#  Description :  ICMP redirect messages are packets that convey routing information and tell your host (acting as a router) to send packets via an alternate path. It is a way of allowing an outside routing device to update your system routing tables. By setting `net.ipv4.conf.all.accept_redirects` and `net.ipv6.conf.all.accept_redirects` to 0, the system will not accept any ICMP redirect messages, and therefore, won't allow outsiders to update the system's routing tables.
#  Rationale Statement :  Attackers could use bogus ICMP redirect messages to maliciously alter the system routing tables and get them to send packets to incorrect networks and allow your system packets to be captured.


- name: AUDIT - 3.3.2 - Ensure ICMP redirects are not accepted
  shell: "sh {{ role_path }}/files/3.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_2
  failed_when: "results_3_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.2 - Ensure ICMP redirects are not accepted
  debug: msg="rc={{ results_3_3_2.rc }} :- results={{ results_3_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.2,Ensure ICMP redirects are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.3 - Ensure secure ICMP redirects are not accepted
#  Profile :  Level 1 - Server
#  Description :  Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.
#  Rationale Statement :  It is still possible for even known gateways to be compromised. Setting `net.ipv4.conf.all.secure_redirects` and `net.ipv4.conf.default.secure_redirects` to 0 protects the system from routing table updates by possibly compromised known gateways.


- name: AUDIT - 3.3.3 - Ensure secure ICMP redirects are not accepted
  shell: "sh {{ role_path }}/files/3.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_3
  failed_when: "results_3_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.3 - Ensure secure ICMP redirects are not accepted
  debug: msg="rc={{ results_3_3_3.rc }} :- results={{ results_3_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.3,Ensure secure ICMP redirects are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.3 - Ensure secure ICMP redirects are not accepted
#  Profile :  Level 1 - Workstation
#  Description :  Secure ICMP redirects are the same as ICMP redirects, except they come from gateways listed on the default gateway list. It is assumed that these gateways are known to your system, and that they are likely to be secure.
#  Rationale Statement :  It is still possible for even known gateways to be compromised. Setting `net.ipv4.conf.all.secure_redirects` and `net.ipv4.conf.default.secure_redirects` to 0 protects the system from routing table updates by possibly compromised known gateways.


- name: AUDIT - 3.3.3 - Ensure secure ICMP redirects are not accepted
  shell: "sh {{ role_path }}/files/3.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_3
  failed_when: "results_3_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.3 - Ensure secure ICMP redirects are not accepted
  debug: msg="rc={{ results_3_3_3.rc }} :- results={{ results_3_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.3,Ensure secure ICMP redirects are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.4 - Ensure suspicious packets are logged
#  Profile :  Level 1 - Server
#  Description :  When enabled, this feature logs packets with un-routable source addresses to the kernel log.
#  Rationale Statement :  Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.


- name: AUDIT - 3.3.4 - Ensure suspicious packets are logged
  shell: "sh {{ role_path }}/files/3.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_4
  failed_when: "results_3_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.4 - Ensure suspicious packets are logged
  debug: msg="rc={{ results_3_3_4.rc }} :- results={{ results_3_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.4,Ensure suspicious packets are logged,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.4 - Ensure suspicious packets are logged
#  Profile :  Level 1 - Workstation
#  Description :  When enabled, this feature logs packets with un-routable source addresses to the kernel log.
#  Rationale Statement :  Enabling this feature and logging these packets allows an administrator to investigate the possibility that an attacker is sending spoofed packets to their system.


- name: AUDIT - 3.3.4 - Ensure suspicious packets are logged
  shell: "sh {{ role_path }}/files/3.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_4
  failed_when: "results_3_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.4 - Ensure suspicious packets are logged
  debug: msg="rc={{ results_3_3_4.rc }} :- results={{ results_3_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.4,Ensure suspicious packets are logged,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.5 - Ensure broadcast ICMP requests are ignored
#  Profile :  Level 1 - Server
#  Description :  Setting `net.ipv4.icmp_echo_ignore_broadcasts` to `1` will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.
#  Rationale Statement :  Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.


- name: AUDIT - 3.3.5 - Ensure broadcast ICMP requests are ignored
  shell: "sh {{ role_path }}/files/3.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_5
  failed_when: "results_3_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.5 - Ensure broadcast ICMP requests are ignored
  debug: msg="rc={{ results_3_3_5.rc }} :- results={{ results_3_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.5,Ensure broadcast ICMP requests are ignored,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.5 - Ensure broadcast ICMP requests are ignored
#  Profile :  Level 1 - Workstation
#  Description :  Setting `net.ipv4.icmp_echo_ignore_broadcasts` to `1` will cause the system to ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.
#  Rationale Statement :  Accepting ICMP echo and timestamp requests with broadcast or multicast destinations for your network could be used to trick your host into starting (or participating) in a Smurf attack. A Smurf attack relies on an attacker sending large amounts of ICMP broadcast messages with a spoofed source address. All hosts receiving this message and responding would send echo-reply messages back to the spoofed address, which is probably not routable. If many hosts respond to the packets, the amount of traffic on the network could be significantly multiplied.


- name: AUDIT - 3.3.5 - Ensure broadcast ICMP requests are ignored
  shell: "sh {{ role_path }}/files/3.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_5
  failed_when: "results_3_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.5 - Ensure broadcast ICMP requests are ignored
  debug: msg="rc={{ results_3_3_5.rc }} :- results={{ results_3_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.5,Ensure broadcast ICMP requests are ignored,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.6 - Ensure bogus ICMP responses are ignored
#  Profile :  Level 1 - Server
#  Description :  Setting `icmp_ignore_bogus_error_responses` to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.
#  Rationale Statement :  Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.


- name: AUDIT - 3.3.6 - Ensure bogus ICMP responses are ignored
  shell: "sh {{ role_path }}/files/3.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_6
  failed_when: "results_3_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.6 - Ensure bogus ICMP responses are ignored
  debug: msg="rc={{ results_3_3_6.rc }} :- results={{ results_3_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.6,Ensure bogus ICMP responses are ignored,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.6 - Ensure bogus ICMP responses are ignored
#  Profile :  Level 1 - Workstation
#  Description :  Setting `icmp_ignore_bogus_error_responses` to 1 prevents the kernel from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes, keeping file systems from filling up with useless log messages.
#  Rationale Statement :  Some routers (and some attackers) will send responses that violate RFC-1122 and attempt to fill up a log file system with many useless error messages.


- name: AUDIT - 3.3.6 - Ensure bogus ICMP responses are ignored
  shell: "sh {{ role_path }}/files/3.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_6
  failed_when: "results_3_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.6 - Ensure bogus ICMP responses are ignored
  debug: msg="rc={{ results_3_3_6.rc }} :- results={{ results_3_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.6,Ensure bogus ICMP responses are ignored,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.7 - Ensure Reverse Path Filtering is enabled
#  Profile :  Level 1 - Server
#  Description :  Setting `net.ipv4.conf.all.rp_filter` and `net.ipv4.conf.default.rp_filter` to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if `log_martians` is set).
#  Rationale Statement :  Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.


- name: AUDIT - 3.3.7 - Ensure Reverse Path Filtering is enabled
  shell: "sh {{ role_path }}/files/3.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_7
  failed_when: "results_3_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.7 - Ensure Reverse Path Filtering is enabled
  debug: msg="rc={{ results_3_3_7.rc }} :- results={{ results_3_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.7,Ensure Reverse Path Filtering is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.7 - Ensure Reverse Path Filtering is enabled
#  Profile :  Level 1 - Workstation
#  Description :  Setting `net.ipv4.conf.all.rp_filter` and `net.ipv4.conf.default.rp_filter` to 1 forces the Linux kernel to utilize reverse path filtering on a received packet to determine if the packet was valid. Essentially, with reverse path filtering, if the return packet does not go out the same interface that the corresponding source packet came from, the packet is dropped (and logged if `log_martians` is set).
#  Rationale Statement :  Setting these flags is a good way to deter attackers from sending your system bogus packets that cannot be responded to. One instance where this feature breaks down is if asymmetrical routing is employed. This would occur when using dynamic routing protocols (bgp, ospf, etc) on your system. If you are using asymmetrical routing on your system, you will not be able to enable this feature without breaking the routing.


- name: AUDIT - 3.3.7 - Ensure Reverse Path Filtering is enabled
  shell: "sh {{ role_path }}/files/3.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_7
  failed_when: "results_3_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.7 - Ensure Reverse Path Filtering is enabled
  debug: msg="rc={{ results_3_3_7.rc }} :- results={{ results_3_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.7,Ensure Reverse Path Filtering is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.8 - Ensure TCP SYN Cookies is enabled
#  Profile :  Level 1 - Server
#  Description :  When `tcp_syncookies` is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.
#  Rationale Statement :  Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.


- name: AUDIT - 3.3.8 - Ensure TCP SYN Cookies is enabled
  shell: "sh {{ role_path }}/files/3.3.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_8
  failed_when: "results_3_3_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.8 - Ensure TCP SYN Cookies is enabled
  debug: msg="rc={{ results_3_3_8.rc }} :- results={{ results_3_3_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.8,Ensure TCP SYN Cookies is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.8 - Ensure TCP SYN Cookies is enabled
#  Profile :  Level 1 - Workstation
#  Description :  When `tcp_syncookies` is set, the kernel will handle TCP SYN packets normally until the half-open connection queue is full, at which time, the SYN cookie functionality kicks in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply replies to the SYN with a SYN|ACK, but will include a specially crafted TCP sequence number that encodes the source and destination IP address and port number and the time the packet was sent. A legitimate connection would send the ACK packet of the three way handshake with the specially crafted sequence number. This allows the system to verify that it has received a valid response to a SYN cookie and allow the connection, even though there is no corresponding SYN in the queue.
#  Rationale Statement :  Attackers use SYN flood attacks to perform a denial of service attacked on a system by sending many SYN packets without completing the three way handshake. This will quickly use up slots in the kernel's half-open connection queue and prevent legitimate connections from succeeding. SYN cookies allow the system to keep accepting valid connections, even if under a denial of service attack.


- name: AUDIT - 3.3.8 - Ensure TCP SYN Cookies is enabled
  shell: "sh {{ role_path }}/files/3.3.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_8
  failed_when: "results_3_3_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.8 - Ensure TCP SYN Cookies is enabled
  debug: msg="rc={{ results_3_3_8.rc }} :- results={{ results_3_3_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.8,Ensure TCP SYN Cookies is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.3.9 - Ensure IPv6 router advertisements are not accepted
#  Profile :  Level 1 - Server
#  Description :  This setting disables the system's ability to accept IPv6 router advertisements.
#  Rationale Statement :  It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.


- name: AUDIT - 3.3.9 - Ensure IPv6 router advertisements are not accepted
  shell: "sh {{ role_path }}/files/3.3.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_9
  failed_when: "results_3_3_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.3.9 - Ensure IPv6 router advertisements are not accepted
  debug: msg="rc={{ results_3_3_9.rc }} :- results={{ results_3_3_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.9,Ensure IPv6 router advertisements are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.3.9 - Ensure IPv6 router advertisements are not accepted
#  Profile :  Level 1 - Workstation
#  Description :  This setting disables the system's ability to accept IPv6 router advertisements.
#  Rationale Statement :  It is recommended that systems do not accept router advertisements as they could be tricked into routing traffic to compromised machines. Setting hard routes within the system (usually a single default route to a trusted router) protects the system from bad routes.


- name: AUDIT - 3.3.9 - Ensure IPv6 router advertisements are not accepted
  shell: "sh {{ role_path }}/files/3.3.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_3_9
  failed_when: "results_3_3_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_3_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.3.9 - Ensure IPv6 router advertisements are not accepted
  debug: msg="rc={{ results_3_3_9.rc }} :- results={{ results_3_3_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.3.9,Ensure IPv6 router advertisements are not accepted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.1.1 - Ensure nftables is installed
#  Profile :  Level 1 - Server
#  Description :  nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. 
# 
# nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.
#  Rationale Statement :  nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.


- name: AUDIT - 3.4.1.1 - Ensure nftables is installed
  shell: "sh {{ role_path }}/files/3.4.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_1_1
  failed_when: "results_3_4_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.1.1 - Ensure nftables is installed
  debug: msg="rc={{ results_3_4_1_1.rc }} :- results={{ results_3_4_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.1.1,Ensure nftables is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.1.1 - Ensure nftables is installed
#  Profile :  Level 1 - Workstation
#  Description :  nftables provides a new in-kernel packet classification framework that is based on a network-specific Virtual Machine (VM) and a new nft userspace command line tool. 
# 
# nftables reuses the existing Netfilter subsystems such as the existing hook infrastructure, the connection tracking system, NAT, userspace queuing and logging subsystem.
#  Rationale Statement :  nftables is a subsystem of the Linux kernel that can protect against threats originating from within a corporate network to include malicious mobile code and poorly configured software on a host.


- name: AUDIT - 3.4.1.1 - Ensure nftables is installed
  shell: "sh {{ role_path }}/files/3.4.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_1_1
  failed_when: "results_3_4_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.1.1 - Ensure nftables is installed
  debug: msg="rc={{ results_3_4_1_1.rc }} :- results={{ results_3_4_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.1.1,Ensure nftables is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.1.2 - Ensure a single firewall configuration utility is in use
#  Profile :  Level 1 - Server
#  Description :  FirewallD - Is a firewall service daemon that provides a dynamic customizable host-based firewall with a D-Bus interface. Being dynamic, it enables creating, changing, and deleting the rules without the necessity to restart the firewall daemon each time the rules are changed
# 
# NFTables - Includes the nft utility for configuration of the nftables subsystem of the Linux kernel
# 
# **Note:** firewalld with nftables backend does not support passing custom nftables rules to firewalld, using the `--direct` option.
#  Rationale Statement :  In order to configure firewall rules for nftables, a firewall utility needs to be installed and active of the system. The use of more than one firewall utility may produce unexpected results.


- name: AUDIT - 3.4.1.2 - Ensure a single firewall configuration utility is in use
  shell: "sh {{ role_path }}/files/3.4.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_1_2
  failed_when: "results_3_4_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.1.2 - Ensure a single firewall configuration utility is in use
  debug: msg="rc={{ results_3_4_1_2.rc }} :- results={{ results_3_4_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.1.2,Ensure a single firewall configuration utility is in use,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.1.2 - Ensure a single firewall configuration utility is in use
#  Profile :  Level 1 - Workstation
#  Description :  FirewallD - Is a firewall service daemon that provides a dynamic customizable host-based firewall with a D-Bus interface. Being dynamic, it enables creating, changing, and deleting the rules without the necessity to restart the firewall daemon each time the rules are changed
# 
# NFTables - Includes the nft utility for configuration of the nftables subsystem of the Linux kernel
# 
# **Note:** firewalld with nftables backend does not support passing custom nftables rules to firewalld, using the `--direct` option.
#  Rationale Statement :  In order to configure firewall rules for nftables, a firewall utility needs to be installed and active of the system. The use of more than one firewall utility may produce unexpected results.


- name: AUDIT - 3.4.1.2 - Ensure a single firewall configuration utility is in use
  shell: "sh {{ role_path }}/files/3.4.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_1_2
  failed_when: "results_3_4_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.1.2 - Ensure a single firewall configuration utility is in use
  debug: msg="rc={{ results_3_4_1_2.rc }} :- results={{ results_3_4_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.1.2,Ensure a single firewall configuration utility is in use,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.1 - Ensure firewalld default zone is set
#  Profile :  Level 1 - Server
#  Description :  A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.
# - The default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone.
# - If no zone assigned to a connection, interface or source, only the default zone is used. 
# - The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.
# 
# Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.
# 
# **Note:**
# - A firewalld zone configuration file contains the information for a zone.
#  - These are the zone description, services, ports, protocols, icmp-blocks, masquerade, forward-ports and rich language rules in an XML file format.
#  - The file name has to be `zone_name.xml` where length of `zone_name` is currently limited to 17 chars.
# - NetworkManager binds interfaces to zones automatically
#  Rationale Statement :  Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, if FirewallD is being used, it is important for the default zone to set


- name: AUDIT - 3.4.2.1 - Ensure firewalld default zone is set
  shell: "sh {{ role_path }}/files/3.4.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_1
  failed_when: "results_3_4_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.1 - Ensure firewalld default zone is set
  debug: msg="rc={{ results_3_4_2_1.rc }} :- results={{ results_3_4_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.1,Ensure firewalld default zone is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.1 - Ensure firewalld default zone is set
#  Profile :  Level 1 - Workstation
#  Description :  A firewall zone defines the trust level for a connection, interface or source address binding. This is a one to many relation, which means that a connection, interface or source can only be part of one zone, but a zone can be used for many network connections, interfaces and sources.
# - The default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone.
# - If no zone assigned to a connection, interface or source, only the default zone is used. 
# - The default zone is not always listed as being used for an interface or source as it will be used for it either way. This depends on the manager of the interfaces.
# 
# Connections handled by NetworkManager are listed as NetworkManager requests to add the zone binding for the interface used by the connection. Also interfaces under control of the network service are listed also because the service requests it.
# 
# **Note:**
# - A firewalld zone configuration file contains the information for a zone.
#  - These are the zone description, services, ports, protocols, icmp-blocks, masquerade, forward-ports and rich language rules in an XML file format.
#  - The file name has to be `zone_name.xml` where length of `zone_name` is currently limited to 17 chars.
# - NetworkManager binds interfaces to zones automatically
#  Rationale Statement :  Because the default zone is the zone that is used for everything that is not explicitly bound/assigned to another zone, if FirewallD is being used, it is important for the default zone to set


- name: AUDIT - 3.4.2.1 - Ensure firewalld default zone is set
  shell: "sh {{ role_path }}/files/3.4.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_1
  failed_when: "results_3_4_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.1 - Ensure firewalld default zone is set
  debug: msg="rc={{ results_3_4_2_1.rc }} :- results={{ results_3_4_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.1,Ensure firewalld default zone is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.2 - Ensure at least one nftables table exists
#  Profile :  Level 1 - Server
#  Description :  Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.
#  Rationale Statement :  Without a table, nftables will not filter network traffic.


- name: AUDIT - 3.4.2.2 - Ensure at least one nftables table exists
  shell: "sh {{ role_path }}/files/3.4.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_2
  failed_when: "results_3_4_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.2 - Ensure at least one nftables table exists
  debug: msg="rc={{ results_3_4_2_2.rc }} :- results={{ results_3_4_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.2,Ensure at least one nftables table exists,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.2 - Ensure at least one nftables table exists
#  Profile :  Level 1 - Workstation
#  Description :  Tables hold chains. Each table only has one address family and only applies to packets of this family. Tables can have one of five families.
#  Rationale Statement :  Without a table, nftables will not filter network traffic.


- name: AUDIT - 3.4.2.2 - Ensure at least one nftables table exists
  shell: "sh {{ role_path }}/files/3.4.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_2
  failed_when: "results_3_4_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.2 - Ensure at least one nftables table exists
  debug: msg="rc={{ results_3_4_2_2.rc }} :- results={{ results_3_4_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.2,Ensure at least one nftables table exists,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.3 - Ensure nftables base chains exist
#  Profile :  Level 1 - Server
#  Description :  Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.
#  Rationale Statement :  If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.


- name: AUDIT - 3.4.2.3 - Ensure nftables base chains exist
  shell: "sh {{ role_path }}/files/3.4.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_3
  failed_when: "results_3_4_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.3 - Ensure nftables base chains exist
  debug: msg="rc={{ results_3_4_2_3.rc }} :- results={{ results_3_4_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.3,Ensure nftables base chains exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.3 - Ensure nftables base chains exist
#  Profile :  Level 1 - Workstation
#  Description :  Chains are containers for rules. They exist in two kinds, base chains and regular chains. A base chain is an entry point for packets from the networking stack, a regular chain may be used as jump target and is used for better rule organization.
#  Rationale Statement :  If a base chain doesn't exist with a hook for input, forward, and delete, packets that would flow through those chains will not be touched by nftables.


- name: AUDIT - 3.4.2.3 - Ensure nftables base chains exist
  shell: "sh {{ role_path }}/files/3.4.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_3
  failed_when: "results_3_4_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.3 - Ensure nftables base chains exist
  debug: msg="rc={{ results_3_4_2_3.rc }} :- results={{ results_3_4_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.3,Ensure nftables base chains exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.4 - Ensure host based firewall loopback traffic is configured
#  Profile :  Level 1 - Server
#  Description :  Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network
#  Rationale Statement :  Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.


- name: AUDIT - 3.4.2.4 - Ensure host based firewall loopback traffic is configured
  shell: "sh {{ role_path }}/files/3.4.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_4
  failed_when: "results_3_4_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.4 - Ensure host based firewall loopback traffic is configured
  debug: msg="rc={{ results_3_4_2_4.rc }} :- results={{ results_3_4_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.4,Ensure host based firewall loopback traffic is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.4 - Ensure host based firewall loopback traffic is configured
#  Profile :  Level 1 - Workstation
#  Description :  Configure the loopback interface to accept traffic. Configure all other interfaces to deny traffic to the loopback network
#  Rationale Statement :  Loopback traffic is generated between processes on machine and is typically critical to operation of the system. The loopback interface is the only place that loopback network traffic should be seen, all other interfaces should ignore traffic on this network as an anti-spoofing measure.


- name: AUDIT - 3.4.2.4 - Ensure host based firewall loopback traffic is configured
  shell: "sh {{ role_path }}/files/3.4.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_4
  failed_when: "results_3_4_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.4 - Ensure host based firewall loopback traffic is configured
  debug: msg="rc={{ results_3_4_2_4.rc }} :- results={{ results_3_4_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.4,Ensure host based firewall loopback traffic is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.5 - Ensure firewalld drops unnecessary services and ports
#  Profile :  Level 1 - Server
#  Description :  Services and ports can be accepted or explicitly rejected or dropped by a zone.
# 
# For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.
# - ACCEPT - you accept all incoming packets except those disabled by a specific rule.
# - REJECT - you disable all incoming packets except those that you have allowed in specific rules and the source machine is informed about the rejection.
# - DROP - you disable all incoming packets except those that you have allowed in specific rules and no information sent to the source machine.
#  Rationale Statement :  To reduce the attack surface of a system, all services and ports should be blocked unless required


- name: AUDIT - 3.4.2.5 - Ensure firewalld drops unnecessary services and ports
  shell: "sh {{ role_path }}/files/3.4.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_5
  failed_when: "results_3_4_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.5 - Ensure firewalld drops unnecessary services and ports
  debug: msg="rc={{ results_3_4_2_5.rc }} :- results={{ results_3_4_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.5,Ensure firewalld drops unnecessary services and ports,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.5 - Ensure firewalld drops unnecessary services and ports
#  Profile :  Level 1 - Workstation
#  Description :  Services and ports can be accepted or explicitly rejected or dropped by a zone.
# 
# For every zone, you can set a default behavior that handles incoming traffic that is not further specified. Such behavior is defined by setting the target of the zone. There are three options - default, ACCEPT, REJECT, and DROP.
# - ACCEPT - you accept all incoming packets except those disabled by a specific rule.
# - REJECT - you disable all incoming packets except those that you have allowed in specific rules and the source machine is informed about the rejection.
# - DROP - you disable all incoming packets except those that you have allowed in specific rules and no information sent to the source machine.
#  Rationale Statement :  To reduce the attack surface of a system, all services and ports should be blocked unless required


- name: AUDIT - 3.4.2.5 - Ensure firewalld drops unnecessary services and ports
  shell: "sh {{ role_path }}/files/3.4.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_5
  failed_when: "results_3_4_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.5 - Ensure firewalld drops unnecessary services and ports
  debug: msg="rc={{ results_3_4_2_5.rc }} :- results={{ results_3_4_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.5,Ensure firewalld drops unnecessary services and ports,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.6 - Ensure nftables established connections are configured
#  Profile :  Level 1 - Server
#  Description :  Configure the firewall rules for new outbound and established connections
#  Rationale Statement :  If rules are not in place for established connections, all packets will be dropped by the default policy preventing network usage.


- name: AUDIT - 3.4.2.6 - Ensure nftables established connections are configured
  shell: "sh {{ role_path }}/files/3.4.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_6
  failed_when: "results_3_4_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.6 - Ensure nftables established connections are configured
  debug: msg="rc={{ results_3_4_2_6.rc }} :- results={{ results_3_4_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.6,Ensure nftables established connections are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.6 - Ensure nftables established connections are configured
#  Profile :  Level 1 - Workstation
#  Description :  Configure the firewall rules for new outbound and established connections
#  Rationale Statement :  If rules are not in place for established connections, all packets will be dropped by the default policy preventing network usage.


- name: AUDIT - 3.4.2.6 - Ensure nftables established connections are configured
  shell: "sh {{ role_path }}/files/3.4.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_6
  failed_when: "results_3_4_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.6 - Ensure nftables established connections are configured
  debug: msg="rc={{ results_3_4_2_6.rc }} :- results={{ results_3_4_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.6,Ensure nftables established connections are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section3


####################################################
#  Title  -  3.4.2.7 - Ensure nftables default deny firewall policy
#  Profile :  Level 1 - Server
#  Description :  Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.
#  Rationale Statement :  There are two policies: accept (Default) and drop. If the policy is set to `accept`, the firewall will accept any packet that is not configured to be denied and the packet will continue traversing the network stack.
# 
# It is easier to explicitly permit acceptable usage than to deny unacceptable usage.
# 
# **Note:** Changing firewall settings while connected over the network can result in being locked out of the system.


- name: AUDIT - 3.4.2.7 - Ensure nftables default deny firewall policy
  shell: "sh {{ role_path }}/files/3.4.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_7
  failed_when: "results_3_4_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - RESULTS - 3.4.2.7 - Ensure nftables default deny firewall policy
  debug: msg="rc={{ results_3_4_2_7.rc }} :- results={{ results_3_4_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.7,Ensure nftables default deny firewall policy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section3


####################################################
#  Title  -  3.4.2.7 - Ensure nftables default deny firewall policy
#  Profile :  Level 1 - Workstation
#  Description :  Base chain policy is the default verdict that will be applied to packets reaching the end of the chain.
#  Rationale Statement :  There are two policies: accept (Default) and drop. If the policy is set to `accept`, the firewall will accept any packet that is not configured to be denied and the packet will continue traversing the network stack.
# 
# It is easier to explicitly permit acceptable usage than to deny unacceptable usage.
# 
# **Note:** Changing firewall settings while connected over the network can result in being locked out of the system.


- name: AUDIT - 3.4.2.7 - Ensure nftables default deny firewall policy
  shell: "sh {{ role_path }}/files/3.4.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_3_4_2_7
  failed_when: "results_3_4_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- set_fact:
    compliant_status: "{% if results_3_4_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - RESULTS - 3.4.2.7 - Ensure nftables default deny firewall policy
  debug: msg="rc={{ results_3_4_2_7.rc }} :- results={{ results_3_4_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section3


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "3.4.2.7,Ensure nftables default deny firewall policy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section3


####################################################
#  Title  -  4.3 - Ensure logrotate is configured
#  Profile :  Level 1 - Server
#  Description :  The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file `/etc/logrotate.d/syslog` is the configuration file used to rotate log files created by `syslog` or `rsyslog`.
#  Rationale Statement :  By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.


- name: AUDIT - 4.3 - Ensure logrotate is configured
  shell: "sh {{ role_path }}/files/4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_3
  failed_when: "results_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.3 - Ensure logrotate is configured
  debug: msg="rc={{ results_4_3.rc }} :- results={{ results_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.3,Ensure logrotate is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.3 - Ensure logrotate is configured
#  Profile :  Level 1 - Workstation
#  Description :  The system includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file `/etc/logrotate.d/syslog` is the configuration file used to rotate log files created by `syslog` or `rsyslog`.
#  Rationale Statement :  By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.


- name: AUDIT - 4.3 - Ensure logrotate is configured
  shell: "sh {{ role_path }}/files/4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_3
  failed_when: "results_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.3 - Ensure logrotate is configured
  debug: msg="rc={{ results_4_3.rc }} :- results={{ results_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.3,Ensure logrotate is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.1.1.1 - Ensure auditd is installed
#  Profile :  Level 2 - Server
#  Description :  auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk
#  Rationale Statement :  The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.


- name: AUDIT - 4.1.1.1 - Ensure auditd is installed
  shell: "sh {{ role_path }}/files/4.1.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_1
  failed_when: "results_4_1_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.1.1 - Ensure auditd is installed
  debug: msg="rc={{ results_4_1_1_1.rc }} :- results={{ results_4_1_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.1,Ensure auditd is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.1.1 - Ensure auditd is installed
#  Profile :  Level 2 - Workstation
#  Description :  auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk
#  Rationale Statement :  The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.


- name: AUDIT - 4.1.1.1 - Ensure auditd is installed
  shell: "sh {{ role_path }}/files/4.1.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_1
  failed_when: "results_4_1_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.1.1 - Ensure auditd is installed
  debug: msg="rc={{ results_4_1_1_1.rc }} :- results={{ results_4_1_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.1,Ensure auditd is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
#  Profile :  Level 2 - Server
#  Description :  Configure `grub2` so that processes that are capable of being audited can be audited even if they start up prior to `auditd` startup.
#  Rationale Statement :  Audit events need to be captured on processes that start up prior to `auditd` , so that potential malicious activity cannot go undetected.


- name: AUDIT - 4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
  shell: "sh {{ role_path }}/files/4.1.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_2
  failed_when: "results_4_1_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
  debug: msg="rc={{ results_4_1_1_2.rc }} :- results={{ results_4_1_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.2,Ensure auditing for processes that start prior to auditd is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
#  Profile :  Level 2 - Workstation
#  Description :  Configure `grub2` so that processes that are capable of being audited can be audited even if they start up prior to `auditd` startup.
#  Rationale Statement :  Audit events need to be captured on processes that start up prior to `auditd` , so that potential malicious activity cannot go undetected.


- name: AUDIT - 4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
  shell: "sh {{ role_path }}/files/4.1.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_2
  failed_when: "results_4_1_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.1.2 - Ensure auditing for processes that start prior to auditd is enabled
  debug: msg="rc={{ results_4_1_1_2.rc }} :- results={{ results_4_1_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.2,Ensure auditing for processes that start prior to auditd is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.1.3 - Ensure audit_backlog_limit is sufficient
#  Profile :  Level 2 - Server
#  Description :  The backlog limit has a default setting of 64
#  Rationale Statement :  During boot if `audit=1`, then the backlog will hold 64 records. If more that 64 records are created during boot, auditd records will be lost and potential malicious activity could go undetected.


- name: AUDIT - 4.1.1.3 - Ensure audit_backlog_limit is sufficient
  shell: "sh {{ role_path }}/files/4.1.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_3
  failed_when: "results_4_1_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.1.3 - Ensure audit_backlog_limit is sufficient
  debug: msg="rc={{ results_4_1_1_3.rc }} :- results={{ results_4_1_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.3,Ensure audit_backlog_limit is sufficient,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.1.3 - Ensure audit_backlog_limit is sufficient
#  Profile :  Level 2 - Workstation
#  Description :  The backlog limit has a default setting of 64
#  Rationale Statement :  During boot if `audit=1`, then the backlog will hold 64 records. If more that 64 records are created during boot, auditd records will be lost and potential malicious activity could go undetected.


- name: AUDIT - 4.1.1.3 - Ensure audit_backlog_limit is sufficient
  shell: "sh {{ role_path }}/files/4.1.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_3
  failed_when: "results_4_1_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.1.3 - Ensure audit_backlog_limit is sufficient
  debug: msg="rc={{ results_4_1_1_3.rc }} :- results={{ results_4_1_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.3,Ensure audit_backlog_limit is sufficient,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.1.4 - Ensure auditd service is enabled
#  Profile :  Level 2 - Server
#  Description :  Turn on the `auditd` daemon to record system events.
#  Rationale Statement :  The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.


- name: AUDIT - 4.1.1.4 - Ensure auditd service is enabled
  shell: "sh {{ role_path }}/files/4.1.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_4
  failed_when: "results_4_1_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.1.4 - Ensure auditd service is enabled
  debug: msg="rc={{ results_4_1_1_4.rc }} :- results={{ results_4_1_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.4,Ensure auditd service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.1.4 - Ensure auditd service is enabled
#  Profile :  Level 2 - Workstation
#  Description :  Turn on the `auditd` daemon to record system events.
#  Rationale Statement :  The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.


- name: AUDIT - 4.1.1.4 - Ensure auditd service is enabled
  shell: "sh {{ role_path }}/files/4.1.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_1_4
  failed_when: "results_4_1_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.1.4 - Ensure auditd service is enabled
  debug: msg="rc={{ results_4_1_1_4.rc }} :- results={{ results_4_1_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.1.4,Ensure auditd service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.2.1 - Ensure audit log storage size is configured
#  Profile :  Level 2 - Server
#  Description :  Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.
#  Rationale Statement :  It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.


- name: AUDIT - 4.1.2.1 - Ensure audit log storage size is configured
  shell: "sh {{ role_path }}/files/4.1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_1
  failed_when: "results_4_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.2.1 - Ensure audit log storage size is configured
  debug: msg="rc={{ results_4_1_2_1.rc }} :- results={{ results_4_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.1,Ensure audit log storage size is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.2.1 - Ensure audit log storage size is configured
#  Profile :  Level 2 - Workstation
#  Description :  Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.
#  Rationale Statement :  It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.


- name: AUDIT - 4.1.2.1 - Ensure audit log storage size is configured
  shell: "sh {{ role_path }}/files/4.1.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_1
  failed_when: "results_4_1_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.2.1 - Ensure audit log storage size is configured
  debug: msg="rc={{ results_4_1_2_1.rc }} :- results={{ results_4_1_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.1,Ensure audit log storage size is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.2.2 - Ensure audit logs are not automatically deleted
#  Profile :  Level 2 - Server
#  Description :  The `max_log_file_action` setting determines how to handle the audit log file reaching the max file size. A value of `keep_logs` will rotate the logs but never delete old logs.
#  Rationale Statement :  In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.


- name: AUDIT - 4.1.2.2 - Ensure audit logs are not automatically deleted
  shell: "sh {{ role_path }}/files/4.1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_2
  failed_when: "results_4_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.2.2 - Ensure audit logs are not automatically deleted
  debug: msg="rc={{ results_4_1_2_2.rc }} :- results={{ results_4_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.2,Ensure audit logs are not automatically deleted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.2.2 - Ensure audit logs are not automatically deleted
#  Profile :  Level 2 - Workstation
#  Description :  The `max_log_file_action` setting determines how to handle the audit log file reaching the max file size. A value of `keep_logs` will rotate the logs but never delete old logs.
#  Rationale Statement :  In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.


- name: AUDIT - 4.1.2.2 - Ensure audit logs are not automatically deleted
  shell: "sh {{ role_path }}/files/4.1.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_2
  failed_when: "results_4_1_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.2.2 - Ensure audit logs are not automatically deleted
  debug: msg="rc={{ results_4_1_2_2.rc }} :- results={{ results_4_1_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.2,Ensure audit logs are not automatically deleted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.2.3 - Ensure system is disabled when audit logs are full
#  Profile :  Level 2 - Server
#  Description :  The `auditd` daemon can be configured to halt the system when the audit logs are full.
# 
# The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore, syslog, suspend, single, and halt.
# - `ignore`, the audit daemon does nothing
# - `Syslog`, the audit daemon will issue a warning to syslog
# - `Suspend`, the audit daemon will stop writing records to the disk
# - `single`, the audit daemon will put the computer system in single user mode
# - `halt`, the audit daemon will shut down the system
#  Rationale Statement :  In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.


- name: AUDIT - 4.1.2.3 - Ensure system is disabled when audit logs are full
  shell: "sh {{ role_path }}/files/4.1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_3
  failed_when: "results_4_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.2.3 - Ensure system is disabled when audit logs are full
  debug: msg="rc={{ results_4_1_2_3.rc }} :- results={{ results_4_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.3,Ensure system is disabled when audit logs are full,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.2.3 - Ensure system is disabled when audit logs are full
#  Profile :  Level 2 - Workstation
#  Description :  The `auditd` daemon can be configured to halt the system when the audit logs are full.
# 
# The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore, syslog, suspend, single, and halt.
# - `ignore`, the audit daemon does nothing
# - `Syslog`, the audit daemon will issue a warning to syslog
# - `Suspend`, the audit daemon will stop writing records to the disk
# - `single`, the audit daemon will put the computer system in single user mode
# - `halt`, the audit daemon will shut down the system
#  Rationale Statement :  In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.


- name: AUDIT - 4.1.2.3 - Ensure system is disabled when audit logs are full
  shell: "sh {{ role_path }}/files/4.1.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_2_3
  failed_when: "results_4_1_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.2.3 - Ensure system is disabled when audit logs are full
  debug: msg="rc={{ results_4_1_2_3.rc }} :- results={{ results_4_1_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.2.3,Ensure system is disabled when audit logs are full,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
#  Profile :  Level 2 - Server
#  Description :  Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the `sudo` command to execute privileged commands, it is possible to monitor changes in scope. The file `/etc/sudoers`, or files in `/etc/sudoers.d`, will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier "scope".
#  Rationale Statement :  Changes in the `/etc/sudoers` and `/etc/sudoers.d` files can indicate that an unauthorized change has been made to the scope of system administrator activity.


- name: AUDIT - 4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
  shell: "sh {{ role_path }}/files/4.1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_1
  failed_when: "results_4_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
  debug: msg="rc={{ results_4_1_3_1.rc }} :- results={{ results_4_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.1,Ensure changes to system administration scope (sudoers) is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the `sudo` command to execute privileged commands, it is possible to monitor changes in scope. The file `/etc/sudoers`, or files in `/etc/sudoers.d`, will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier "scope".
#  Rationale Statement :  Changes in the `/etc/sudoers` and `/etc/sudoers.d` files can indicate that an unauthorized change has been made to the scope of system administrator activity.


- name: AUDIT - 4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
  shell: "sh {{ role_path }}/files/4.1.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_1
  failed_when: "results_4_1_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.1 - Ensure changes to system administration scope (sudoers) is collected
  debug: msg="rc={{ results_4_1_3_1.rc }} :- results={{ results_4_1_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.1,Ensure changes to system administration scope (sudoers) is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.2 - Ensure actions as another user are always logged
#  Profile :  Level 2 - Server
#  Description :  `sudo` provides users with temporary elevated privileges to perform operations, either as the superuser or another user.
#  Rationale Statement :  Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to `sudo`'s logfile to verify if unauthorized commands have been executed.


- name: AUDIT - 4.1.3.2 - Ensure actions as another user are always logged
  shell: "sh {{ role_path }}/files/4.1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_2
  failed_when: "results_4_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.2 - Ensure actions as another user are always logged
  debug: msg="rc={{ results_4_1_3_2.rc }} :- results={{ results_4_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.2,Ensure actions as another user are always logged,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.2 - Ensure actions as another user are always logged
#  Profile :  Level 2 - Workstation
#  Description :  `sudo` provides users with temporary elevated privileges to perform operations, either as the superuser or another user.
#  Rationale Statement :  Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to `sudo`'s logfile to verify if unauthorized commands have been executed.


- name: AUDIT - 4.1.3.2 - Ensure actions as another user are always logged
  shell: "sh {{ role_path }}/files/4.1.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_2
  failed_when: "results_4_1_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.2 - Ensure actions as another user are always logged
  debug: msg="rc={{ results_4_1_3_2.rc }} :- results={{ results_4_1_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.2,Ensure actions as another user are always logged,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.3 - Ensure events that modify the sudo log file are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor the `sudo` log file. If the system has been properly configured to disable the use of the `su` command and force all administrators to have to log in first and then use `sudo` to execute privileged commands, then all administrator commands will be logged to `/var/log/sudo.log` . Any time a command is executed, an audit event will be triggered as the `/var/log/sudo.log` file will be opened for write and the executed administration command will be written to the log.
#  Rationale Statement :  Changes in `/var/log/sudo.log` indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to `/var/log/sudo.log` to verify if unauthorized commands have been executed.


- name: AUDIT - 4.1.3.3 - Ensure events that modify the sudo log file are collected
  shell: "sh {{ role_path }}/files/4.1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_3
  failed_when: "results_4_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.3 - Ensure events that modify the sudo log file are collected
  debug: msg="rc={{ results_4_1_3_3.rc }} :- results={{ results_4_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.3,Ensure events that modify the sudo log file are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.3 - Ensure events that modify the sudo log file are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor the `sudo` log file. If the system has been properly configured to disable the use of the `su` command and force all administrators to have to log in first and then use `sudo` to execute privileged commands, then all administrator commands will be logged to `/var/log/sudo.log` . Any time a command is executed, an audit event will be triggered as the `/var/log/sudo.log` file will be opened for write and the executed administration command will be written to the log.
#  Rationale Statement :  Changes in `/var/log/sudo.log` indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to `/var/log/sudo.log` to verify if unauthorized commands have been executed.


- name: AUDIT - 4.1.3.3 - Ensure events that modify the sudo log file are collected
  shell: "sh {{ role_path }}/files/4.1.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_3
  failed_when: "results_4_1_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.3 - Ensure events that modify the sudo log file are collected
  debug: msg="rc={{ results_4_1_3_3.rc }} :- results={{ results_4_1_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.3,Ensure events that modify the sudo log file are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.4 - Ensure events that modify date and time information are collected
#  Profile :  Level 2 - Server
#  Description :  Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;
# - `adjtimex` - tune kernel clock
# - `settimeofday` - set time using `timeval` and `timezone` structures
# - `stime` - using seconds since 1/1/1970
# - `clock_settime` - allows for the setting of several internal clocks and timers
# 
# system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as "time-change".
#  Rationale Statement :  Unexpected changes in system date and/or time could be a sign of malicious activity on the system.


- name: AUDIT - 4.1.3.4 - Ensure events that modify date and time information are collected
  shell: "sh {{ role_path }}/files/4.1.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_4
  failed_when: "results_4_1_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.4 - Ensure events that modify date and time information are collected
  debug: msg="rc={{ results_4_1_3_4.rc }} :- results={{ results_4_1_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.4,Ensure events that modify date and time information are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.4 - Ensure events that modify date and time information are collected
#  Profile :  Level 2 - Workstation
#  Description :  Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;
# - `adjtimex` - tune kernel clock
# - `settimeofday` - set time using `timeval` and `timezone` structures
# - `stime` - using seconds since 1/1/1970
# - `clock_settime` - allows for the setting of several internal clocks and timers
# 
# system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as "time-change".
#  Rationale Statement :  Unexpected changes in system date and/or time could be a sign of malicious activity on the system.


- name: AUDIT - 4.1.3.4 - Ensure events that modify date and time information are collected
  shell: "sh {{ role_path }}/files/4.1.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_4
  failed_when: "results_4_1_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.4 - Ensure events that modify date and time information are collected
  debug: msg="rc={{ results_4_1_3_4.rc }} :- results={{ results_4_1_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.4,Ensure events that modify date and time information are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.5 - Ensure events that modify the system's network environment are collected
#  Profile :  Level 2 - Server
#  Description :  Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:
# - `sethostname` - set the systems host name
# - `setdomainname` - set the systems domain name
# 
# The files being monitored are:
# - `/etc/issue` and `/etc/issue.net` - messages displayed pre-login
# - `/etc/hosts` - file containing host names and associated IP addresses
# - `/etc/sysconfig/network` - additional information that is valid to all network interfaces
# - `/etc/sysconfig/network-scripts/` - directory containing network interface scripts and configurations files
#  Rationale Statement :  Monitoring `sethostname` and `setdomainname` will identify potential unauthorized changes to host and domain name of a system. The changing of these names could potentially break security parameters that are set based on those names. The `/etc/hosts` file is monitored for changes that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring `/etc/issue` and `/etc/issue.net` is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring `/etc/sysconfig/network` is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records should have a relevant tag associated with them.


- name: AUDIT - 4.1.3.5 - Ensure events that modify the system's network environment are collected
  shell: "sh {{ role_path }}/files/4.1.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_5
  failed_when: "results_4_1_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.5 - Ensure events that modify the system's network environment are collected
  debug: msg="rc={{ results_4_1_3_5.rc }} :- results={{ results_4_1_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.5,Ensure events that modify the system's network environment are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.5 - Ensure events that modify the system's network environment are collected
#  Profile :  Level 2 - Workstation
#  Description :  Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:
# - `sethostname` - set the systems host name
# - `setdomainname` - set the systems domain name
# 
# The files being monitored are:
# - `/etc/issue` and `/etc/issue.net` - messages displayed pre-login
# - `/etc/hosts` - file containing host names and associated IP addresses
# - `/etc/sysconfig/network` - additional information that is valid to all network interfaces
# - `/etc/sysconfig/network-scripts/` - directory containing network interface scripts and configurations files
#  Rationale Statement :  Monitoring `sethostname` and `setdomainname` will identify potential unauthorized changes to host and domain name of a system. The changing of these names could potentially break security parameters that are set based on those names. The `/etc/hosts` file is monitored for changes that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring `/etc/issue` and `/etc/issue.net` is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring `/etc/sysconfig/network` is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records should have a relevant tag associated with them.


- name: AUDIT - 4.1.3.5 - Ensure events that modify the system's network environment are collected
  shell: "sh {{ role_path }}/files/4.1.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_5
  failed_when: "results_4_1_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.5 - Ensure events that modify the system's network environment are collected
  debug: msg="rc={{ results_4_1_3_5.rc }} :- results={{ results_4_1_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.5,Ensure events that modify the system's network environment are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.6 - Ensure use of privileged commands are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor privileged programs, those that have the `setuid` and/or `setgid` bit set on execution, to determine if unprivileged users are running these commands.
#  Rationale Statement :  Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.


- name: AUDIT - 4.1.3.6 - Ensure use of privileged commands are collected
  shell: "sh {{ role_path }}/files/4.1.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_6
  failed_when: "results_4_1_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.6 - Ensure use of privileged commands are collected
  debug: msg="rc={{ results_4_1_3_6.rc }} :- results={{ results_4_1_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.6,Ensure use of privileged commands are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.6 - Ensure use of privileged commands are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor privileged programs, those that have the `setuid` and/or `setgid` bit set on execution, to determine if unprivileged users are running these commands.
#  Rationale Statement :  Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.


- name: AUDIT - 4.1.3.6 - Ensure use of privileged commands are collected
  shell: "sh {{ role_path }}/files/4.1.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_6
  failed_when: "results_4_1_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.6 - Ensure use of privileged commands are collected
  debug: msg="rc={{ results_4_1_3_6.rc }} :- results={{ results_4_1_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.6,Ensure use of privileged commands are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.7 - Ensure unsuccessful file access attempts are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:
# - creation - `creat`
# - opening - `open` , `openat`
# - truncation - `truncate` , `ftruncate`
# 
# An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:
# - a non-privileged user (auid>=UID_MIN)
# - is not a Daemon event (auid=4294967295/unset/-1)
# - if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)
#  Rationale Statement :  Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.


- name: AUDIT - 4.1.3.7 - Ensure unsuccessful file access attempts are collected
  shell: "sh {{ role_path }}/files/4.1.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_7
  failed_when: "results_4_1_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.7 - Ensure unsuccessful file access attempts are collected
  debug: msg="rc={{ results_4_1_3_7.rc }} :- results={{ results_4_1_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.7,Ensure unsuccessful file access attempts are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.7 - Ensure unsuccessful file access attempts are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:
# - creation - `creat`
# - opening - `open` , `openat`
# - truncation - `truncate` , `ftruncate`
# 
# An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:
# - a non-privileged user (auid>=UID_MIN)
# - is not a Daemon event (auid=4294967295/unset/-1)
# - if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)
#  Rationale Statement :  Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.


- name: AUDIT - 4.1.3.7 - Ensure unsuccessful file access attempts are collected
  shell: "sh {{ role_path }}/files/4.1.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_7
  failed_when: "results_4_1_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.7 - Ensure unsuccessful file access attempts are collected
  debug: msg="rc={{ results_4_1_3_7.rc }} :- results={{ results_4_1_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.7,Ensure unsuccessful file access attempts are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.8 - Ensure events that modify user/group information are collected
#  Profile :  Level 2 - Server
#  Description :  Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.
# - `/etc/group` - system groups
# - `/etc/passwd` - system users
# - `/etc/gshadow` - encrypted password for each group
# - `/etc/shadow` - system user passwords
# - `/etc/security/opasswd` - storage of old passwords if the relevant PAM module is in use
# 
# The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier "identity" in the audit log file.
#  Rationale Statement :  Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.


- name: AUDIT - 4.1.3.8 - Ensure events that modify user/group information are collected
  shell: "sh {{ role_path }}/files/4.1.3.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_8
  failed_when: "results_4_1_3_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.8 - Ensure events that modify user/group information are collected
  debug: msg="rc={{ results_4_1_3_8.rc }} :- results={{ results_4_1_3_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.8,Ensure events that modify user/group information are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.8 - Ensure events that modify user/group information are collected
#  Profile :  Level 2 - Workstation
#  Description :  Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.
# - `/etc/group` - system groups
# - `/etc/passwd` - system users
# - `/etc/gshadow` - encrypted password for each group
# - `/etc/shadow` - system user passwords
# - `/etc/security/opasswd` - storage of old passwords if the relevant PAM module is in use
# 
# The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier "identity" in the audit log file.
#  Rationale Statement :  Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.


- name: AUDIT - 4.1.3.8 - Ensure events that modify user/group information are collected
  shell: "sh {{ role_path }}/files/4.1.3.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_8
  failed_when: "results_4_1_3_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.8 - Ensure events that modify user/group information are collected
  debug: msg="rc={{ results_4_1_3_8.rc }} :- results={{ results_4_1_3_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.8,Ensure events that modify user/group information are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.9 - Ensure discretionary access control permission modification events are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.
# - `chmod`
# - `fchmod`
# - `fchmodat`
# - `chown`
# - `fchown`
# - `fchownat`
# - `lchown`
# - `setxattr`
# - `lsetxattr`
# - `fsetxattr`
# - `removexattr`
# - `lremovexattr`
# - `fremovexattr`
# 
# In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier "perm_mod."
#  Rationale Statement :  Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.


- name: AUDIT - 4.1.3.9 - Ensure discretionary access control permission modification events are collected
  shell: "sh {{ role_path }}/files/4.1.3.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_9
  failed_when: "results_4_1_3_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.9 - Ensure discretionary access control permission modification events are collected
  debug: msg="rc={{ results_4_1_3_9.rc }} :- results={{ results_4_1_3_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.9,Ensure discretionary access control permission modification events are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.9 - Ensure discretionary access control permission modification events are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.
# - `chmod`
# - `fchmod`
# - `fchmodat`
# - `chown`
# - `fchown`
# - `fchownat`
# - `lchown`
# - `setxattr`
# - `lsetxattr`
# - `fsetxattr`
# - `removexattr`
# - `lremovexattr`
# - `fremovexattr`
# 
# In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier "perm_mod."
#  Rationale Statement :  Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.


- name: AUDIT - 4.1.3.9 - Ensure discretionary access control permission modification events are collected
  shell: "sh {{ role_path }}/files/4.1.3.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_9
  failed_when: "results_4_1_3_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.9 - Ensure discretionary access control permission modification events are collected
  debug: msg="rc={{ results_4_1_3_9.rc }} :- results={{ results_4_1_3_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.9,Ensure discretionary access control permission modification events are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.10 - Ensure successful file system mounts are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor the use of the `mount` system call. The `mount` (and `umount` ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
#  Rationale Statement :  It is highly unusual for a non privileged user to `mount` file systems to the system. While tracking `mount` commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful `open`, `creat` and `truncate` system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.


- name: AUDIT - 4.1.3.10 - Ensure successful file system mounts are collected
  shell: "sh {{ role_path }}/files/4.1.3.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_10
  failed_when: "results_4_1_3_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.10 - Ensure successful file system mounts are collected
  debug: msg="rc={{ results_4_1_3_10.rc }} :- results={{ results_4_1_3_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.10,Ensure successful file system mounts are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.10 - Ensure successful file system mounts are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor the use of the `mount` system call. The `mount` (and `umount` ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user
#  Rationale Statement :  It is highly unusual for a non privileged user to `mount` file systems to the system. While tracking `mount` commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful `open`, `creat` and `truncate` system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.


- name: AUDIT - 4.1.3.10 - Ensure successful file system mounts are collected
  shell: "sh {{ role_path }}/files/4.1.3.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_10
  failed_when: "results_4_1_3_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.10 - Ensure successful file system mounts are collected
  debug: msg="rc={{ results_4_1_3_10.rc }} :- results={{ results_4_1_3_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.10,Ensure successful file system mounts are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.11 - Ensure session initiation information is collected
#  Profile :  Level 2 - Server
#  Description :  Monitor session initiation events. The parameters in this section track changes to the files associated with session events.
# - `/var/run/utmp` - tracks all currently logged in users.
# - `/var/log/wtmp` - file tracks logins, logouts, shutdown, and reboot events.
# - `/var/log/btmp` - keeps track of failed login attempts and can be read by entering the command `/usr/bin/last -f /var/log/btmp`.
# 
# All audit records will be tagged with the identifier "session."
#  Rationale Statement :  Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).


- name: AUDIT - 4.1.3.11 - Ensure session initiation information is collected
  shell: "sh {{ role_path }}/files/4.1.3.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_11
  failed_when: "results_4_1_3_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.11 - Ensure session initiation information is collected
  debug: msg="rc={{ results_4_1_3_11.rc }} :- results={{ results_4_1_3_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.11,Ensure session initiation information is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.11 - Ensure session initiation information is collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor session initiation events. The parameters in this section track changes to the files associated with session events.
# - `/var/run/utmp` - tracks all currently logged in users.
# - `/var/log/wtmp` - file tracks logins, logouts, shutdown, and reboot events.
# - `/var/log/btmp` - keeps track of failed login attempts and can be read by entering the command `/usr/bin/last -f /var/log/btmp`.
# 
# All audit records will be tagged with the identifier "session."
#  Rationale Statement :  Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).


- name: AUDIT - 4.1.3.11 - Ensure session initiation information is collected
  shell: "sh {{ role_path }}/files/4.1.3.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_11
  failed_when: "results_4_1_3_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.11 - Ensure session initiation information is collected
  debug: msg="rc={{ results_4_1_3_11.rc }} :- results={{ results_4_1_3_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.11,Ensure session initiation information is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.12 - Ensure login and logout events are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor login and logout events. The parameters below track changes to files associated with login/logout events.
# - `/var/log/lastlog` - maintain records of the last time a user successfully logged in. 
# - `/var/run/faillock` - directory maintains records of login failures via the `pam_faillock` module.
#  Rationale Statement :  Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.


- name: AUDIT - 4.1.3.12 - Ensure login and logout events are collected
  shell: "sh {{ role_path }}/files/4.1.3.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_12
  failed_when: "results_4_1_3_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.12 - Ensure login and logout events are collected
  debug: msg="rc={{ results_4_1_3_12.rc }} :- results={{ results_4_1_3_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.12,Ensure login and logout events are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.12 - Ensure login and logout events are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor login and logout events. The parameters below track changes to files associated with login/logout events.
# - `/var/log/lastlog` - maintain records of the last time a user successfully logged in. 
# - `/var/run/faillock` - directory maintains records of login failures via the `pam_faillock` module.
#  Rationale Statement :  Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.


- name: AUDIT - 4.1.3.12 - Ensure login and logout events are collected
  shell: "sh {{ role_path }}/files/4.1.3.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_12
  failed_when: "results_4_1_3_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.12 - Ensure login and logout events are collected
  debug: msg="rc={{ results_4_1_3_12.rc }} :- results={{ results_4_1_3_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.12,Ensure login and logout events are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.13 - Ensure file deletion events by users are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:
# - `unlink` - remove a file
# - `unlinkat` - remove a file attribute
# - `rename` - rename a file
# - `renameat` rename a file attribute
# system calls and tags them with the identifier "delete".
#  Rationale Statement :  Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.


- name: AUDIT - 4.1.3.13 - Ensure file deletion events by users are collected
  shell: "sh {{ role_path }}/files/4.1.3.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_13
  failed_when: "results_4_1_3_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.13 - Ensure file deletion events by users are collected
  debug: msg="rc={{ results_4_1_3_13.rc }} :- results={{ results_4_1_3_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.13,Ensure file deletion events by users are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.13 - Ensure file deletion events by users are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:
# - `unlink` - remove a file
# - `unlinkat` - remove a file attribute
# - `rename` - rename a file
# - `renameat` rename a file attribute
# system calls and tags them with the identifier "delete".
#  Rationale Statement :  Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.


- name: AUDIT - 4.1.3.13 - Ensure file deletion events by users are collected
  shell: "sh {{ role_path }}/files/4.1.3.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_13
  failed_when: "results_4_1_3_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.13 - Ensure file deletion events by users are collected
  debug: msg="rc={{ results_4_1_3_13.rc }} :- results={{ results_4_1_3_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.13,Ensure file deletion events by users are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
#  Profile :  Level 2 - Server
#  Description :  Monitor SELinux, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the `/etc/selinux/` and `/usr/share/selinux/` directories.
# 
# **Note:** If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.
#  Rationale Statement :  Changes to files in the `/etc/selinux/` and `/usr/share/selinux/` directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.


- name: AUDIT - 4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
  shell: "sh {{ role_path }}/files/4.1.3.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_14
  failed_when: "results_4_1_3_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
  debug: msg="rc={{ results_4_1_3_14.rc }} :- results={{ results_4_1_3_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.14,Ensure events that modify the system's Mandatory Access Controls are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor SELinux, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the `/etc/selinux/` and `/usr/share/selinux/` directories.
# 
# **Note:** If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.
#  Rationale Statement :  Changes to files in the `/etc/selinux/` and `/usr/share/selinux/` directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.


- name: AUDIT - 4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
  shell: "sh {{ role_path }}/files/4.1.3.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_14
  failed_when: "results_4_1_3_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.14 - Ensure events that modify the system's Mandatory Access Controls are collected
  debug: msg="rc={{ results_4_1_3_14.rc }} :- results={{ results_4_1_3_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.14,Ensure events that modify the system's Mandatory Access Controls are collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
#  Profile :  Level 2 - Server
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `chcon` command.
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_15
  failed_when: "results_4_1_3_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
  debug: msg="rc={{ results_4_1_3_15.rc }} :- results={{ results_4_1_3_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.15,Ensure successful and unsuccessful attempts to use the chcon command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
#  Profile :  Level 2 - Workstation
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `chcon` command.
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_15
  failed_when: "results_4_1_3_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.15 - Ensure successful and unsuccessful attempts to use the chcon command are recorded
  debug: msg="rc={{ results_4_1_3_15.rc }} :- results={{ results_4_1_3_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.15,Ensure successful and unsuccessful attempts to use the chcon command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
#  Profile :  Level 2 - Server
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `setfacl` command
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_16
  failed_when: "results_4_1_3_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
  debug: msg="rc={{ results_4_1_3_16.rc }} :- results={{ results_4_1_3_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.16,Ensure successful and unsuccessful attempts to use the setfacl command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
#  Profile :  Level 2 - Workstation
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `setfacl` command
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_16
  failed_when: "results_4_1_3_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.16 - Ensure successful and unsuccessful attempts to use the setfacl command are recorded
  debug: msg="rc={{ results_4_1_3_16.rc }} :- results={{ results_4_1_3_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.16,Ensure successful and unsuccessful attempts to use the setfacl command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
#  Profile :  Level 2 - Server
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `chacl` command
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_17
  failed_when: "results_4_1_3_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
  debug: msg="rc={{ results_4_1_3_17.rc }} :- results={{ results_4_1_3_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.17,Ensure successful and unsuccessful attempts to use the chacl command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
#  Profile :  Level 2 - Workstation
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `chacl` command
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_17
  failed_when: "results_4_1_3_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.17 - Ensure successful and unsuccessful attempts to use the chacl command are recorded
  debug: msg="rc={{ results_4_1_3_17.rc }} :- results={{ results_4_1_3_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.17,Ensure successful and unsuccessful attempts to use the chacl command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
#  Profile :  Level 2 - Server
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `usermod` command.
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_18
  failed_when: "results_4_1_3_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
  debug: msg="rc={{ results_4_1_3_18.rc }} :- results={{ results_4_1_3_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.18,Ensure successful and unsuccessful attempts to use the usermod command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
#  Profile :  Level 2 - Workstation
#  Description :  The operating system must generate audit records for successful/unsuccessful uses of the `usermod` command.
#  Rationale Statement :  Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 
# 
# Audit records can be generated from various components within the information system (e.g., module or policy filter).


- name: AUDIT - 4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
  shell: "sh {{ role_path }}/files/4.1.3.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_18
  failed_when: "results_4_1_3_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.18 - Ensure successful and unsuccessful attempts to use the usermod command are recorded
  debug: msg="rc={{ results_4_1_3_18.rc }} :- results={{ results_4_1_3_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.18,Ensure successful and unsuccessful attempts to use the usermod command are recorded,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.19 - Ensure kernel module loading unloading and modification is collected
#  Profile :  Level 2 - Server
#  Description :  Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by `kmod` via symbolic links.
# 
# The following system calls control loading and unloading of modules:
# - `init_module` - load a module
# - `finit_module` - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
# - `delete_module` - delete a module
# - `create_module` - create a loadable module entry
# - `query_module` - query the kernel for various bits pertaining to modules
# 
# Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of `modules`.
#  Rationale Statement :  Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.


- name: AUDIT - 4.1.3.19 - Ensure kernel module loading unloading and modification is collected
  shell: "sh {{ role_path }}/files/4.1.3.19_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_19
  failed_when: "results_4_1_3_19.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_19.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.19 - Ensure kernel module loading unloading and modification is collected
  debug: msg="rc={{ results_4_1_3_19.rc }} :- results={{ results_4_1_3_19.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.19,Ensure kernel module loading unloading and modification is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.19 - Ensure kernel module loading unloading and modification is collected
#  Profile :  Level 2 - Workstation
#  Description :  Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by `kmod` via symbolic links.
# 
# The following system calls control loading and unloading of modules:
# - `init_module` - load a module
# - `finit_module` - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
# - `delete_module` - delete a module
# - `create_module` - create a loadable module entry
# - `query_module` - query the kernel for various bits pertaining to modules
# 
# Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of `modules`.
#  Rationale Statement :  Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.


- name: AUDIT - 4.1.3.19 - Ensure kernel module loading unloading and modification is collected
  shell: "sh {{ role_path }}/files/4.1.3.19_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_19
  failed_when: "results_4_1_3_19.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_19.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.19 - Ensure kernel module loading unloading and modification is collected
  debug: msg="rc={{ results_4_1_3_19.rc }} :- results={{ results_4_1_3_19.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.19,Ensure kernel module loading unloading and modification is collected,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.20 - Ensure the audit configuration is immutable
#  Profile :  Level 2 - Server
#  Description :  Set system audit so that audit rules cannot be modified with `auditctl` . Setting the flag "-e 2" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.
# 
# **Note:** This setting will require the system to be rebooted to update the active `auditd` configuration settings.
#  Rationale Statement :  In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.


- name: AUDIT - 4.1.3.20 - Ensure the audit configuration is immutable
  shell: "sh {{ role_path }}/files/4.1.3.20_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_20
  failed_when: "results_4_1_3_20.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_20.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.20 - Ensure the audit configuration is immutable
  debug: msg="rc={{ results_4_1_3_20.rc }} :- results={{ results_4_1_3_20.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.20,Ensure the audit configuration is immutable,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.20 - Ensure the audit configuration is immutable
#  Profile :  Level 2 - Workstation
#  Description :  Set system audit so that audit rules cannot be modified with `auditctl` . Setting the flag "-e 2" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.
# 
# **Note:** This setting will require the system to be rebooted to update the active `auditd` configuration settings.
#  Rationale Statement :  In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.


- name: AUDIT - 4.1.3.20 - Ensure the audit configuration is immutable
  shell: "sh {{ role_path }}/files/4.1.3.20_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_20
  failed_when: "results_4_1_3_20.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_20.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.20 - Ensure the audit configuration is immutable
  debug: msg="rc={{ results_4_1_3_20.rc }} :- results={{ results_4_1_3_20.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.20,Ensure the audit configuration is immutable,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.3.21 - Ensure the running and on disk configuration is the same
#  Profile :  Level 2 - Server
#  Description :  The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.
# 
# **Note:** Due to the limitations of `augenrules` and `auditctl`, it is not absolutely guaranteed that loading the rule sets via `augenrules --load` will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.
#  Rationale Statement :  Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.


- name: AUDIT - 4.1.3.21 - Ensure the running and on disk configuration is the same
  shell: "sh {{ role_path }}/files/4.1.3.21_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_21
  failed_when: "results_4_1_3_21.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_21.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.3.21 - Ensure the running and on disk configuration is the same
  debug: msg="rc={{ results_4_1_3_21.rc }} :- results={{ results_4_1_3_21.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.21,Ensure the running and on disk configuration is the same,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-server
    - section4


####################################################
#  Title  -  4.1.3.21 - Ensure the running and on disk configuration is the same
#  Profile :  Level 2 - Workstation
#  Description :  The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.
# 
# **Note:** Due to the limitations of `augenrules` and `auditctl`, it is not absolutely guaranteed that loading the rule sets via `augenrules --load` will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.
#  Rationale Statement :  Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.


- name: AUDIT - 4.1.3.21 - Ensure the running and on disk configuration is the same
  shell: "sh {{ role_path }}/files/4.1.3.21_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_3_21
  failed_when: "results_4_1_3_21.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_3_21.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.3.21 - Ensure the running and on disk configuration is the same
  debug: msg="rc={{ results_4_1_3_21.rc }} :- results={{ results_4_1_3_21.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.3.21,Ensure the running and on disk configuration is the same,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
#  Profile :  Level 2 - Server
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
  shell: "sh {{ role_path }}/files/4.1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_1
  failed_when: "results_4_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
  debug: msg="rc={{ results_4_1_4_1.rc }} :- results={{ results_4_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.1,Ensure audit log files are mode 0640 or less permissive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
#  Profile :  Level 2 - Workstation
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
  shell: "sh {{ role_path }}/files/4.1.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_1
  failed_when: "results_4_1_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.1 - Ensure audit log files are mode 0640 or less permissive
  debug: msg="rc={{ results_4_1_4_1.rc }} :- results={{ results_4_1_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.1,Ensure audit log files are mode 0640 or less permissive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.2 - Ensure only authorized users own audit log files
#  Profile :  Level 2 - Server
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.2 - Ensure only authorized users own audit log files
  shell: "sh {{ role_path }}/files/4.1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_2
  failed_when: "results_4_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.2 - Ensure only authorized users own audit log files
  debug: msg="rc={{ results_4_1_4_2.rc }} :- results={{ results_4_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.2,Ensure only authorized users own audit log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.2 - Ensure only authorized users own audit log files
#  Profile :  Level 2 - Workstation
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.2 - Ensure only authorized users own audit log files
  shell: "sh {{ role_path }}/files/4.1.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_2
  failed_when: "results_4_1_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.2 - Ensure only authorized users own audit log files
  debug: msg="rc={{ results_4_1_4_2.rc }} :- results={{ results_4_1_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.2,Ensure only authorized users own audit log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
#  Profile :  Level 2 - Server
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
  shell: "sh {{ role_path }}/files/4.1.4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_3
  failed_when: "results_4_1_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
  debug: msg="rc={{ results_4_1_4_3.rc }} :- results={{ results_4_1_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.3,Ensure only authorized groups are assigned ownership of audit log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
#  Profile :  Level 2 - Workstation
#  Description :  Audit log files contain information about the system and system activity.
#  Rationale Statement :  Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.


- name: AUDIT - 4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
  shell: "sh {{ role_path }}/files/4.1.4.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_3
  failed_when: "results_4_1_4_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.3 - Ensure only authorized groups are assigned ownership of audit log files
  debug: msg="rc={{ results_4_1_4_3.rc }} :- results={{ results_4_1_4_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.3,Ensure only authorized groups are assigned ownership of audit log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
#  Profile :  Level 2 - Server
#  Description :  The audit log directory contains audit log files.
#  Rationale Statement :  Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.


- name: AUDIT - 4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_4
  failed_when: "results_4_1_4_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
  debug: msg="rc={{ results_4_1_4_4.rc }} :- results={{ results_4_1_4_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.4,Ensure the audit log directory is 0750 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
#  Profile :  Level 2 - Workstation
#  Description :  The audit log directory contains audit log files.
#  Rationale Statement :  Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.


- name: AUDIT - 4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_4
  failed_when: "results_4_1_4_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.4 - Ensure the audit log directory is 0750 or more restrictive
  debug: msg="rc={{ results_4_1_4_4.rc }} :- results={{ results_4_1_4_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.4,Ensure the audit log directory is 0750 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
#  Profile :  Level 2 - Server
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_5
  failed_when: "results_4_1_4_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
  debug: msg="rc={{ results_4_1_4_5.rc }} :- results={{ results_4_1_4_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.5,Ensure audit configuration files are 640 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
#  Profile :  Level 2 - Workstation
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_5
  failed_when: "results_4_1_4_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.5 - Ensure audit configuration files are 640 or more restrictive
  debug: msg="rc={{ results_4_1_4_5.rc }} :- results={{ results_4_1_4_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.5,Ensure audit configuration files are 640 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.6 - Ensure audit configuration files are owned by root
#  Profile :  Level 2 - Server
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.6 - Ensure audit configuration files are owned by root
  shell: "sh {{ role_path }}/files/4.1.4.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_6
  failed_when: "results_4_1_4_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.6 - Ensure audit configuration files are owned by root
  debug: msg="rc={{ results_4_1_4_6.rc }} :- results={{ results_4_1_4_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.6,Ensure audit configuration files are owned by root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.6 - Ensure audit configuration files are owned by root
#  Profile :  Level 2 - Workstation
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.6 - Ensure audit configuration files are owned by root
  shell: "sh {{ role_path }}/files/4.1.4.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_6
  failed_when: "results_4_1_4_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.6 - Ensure audit configuration files are owned by root
  debug: msg="rc={{ results_4_1_4_6.rc }} :- results={{ results_4_1_4_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.6,Ensure audit configuration files are owned by root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.7 - Ensure audit configuration files belong to group root
#  Profile :  Level 2 - Server
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.7 - Ensure audit configuration files belong to group root
  shell: "sh {{ role_path }}/files/4.1.4.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_7
  failed_when: "results_4_1_4_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.7 - Ensure audit configuration files belong to group root
  debug: msg="rc={{ results_4_1_4_7.rc }} :- results={{ results_4_1_4_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.7,Ensure audit configuration files belong to group root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.7 - Ensure audit configuration files belong to group root
#  Profile :  Level 2 - Workstation
#  Description :  Audit configuration files control auditd and what events are audited.
#  Rationale Statement :  Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 
# 
# Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.


- name: AUDIT - 4.1.4.7 - Ensure audit configuration files belong to group root
  shell: "sh {{ role_path }}/files/4.1.4.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_7
  failed_when: "results_4_1_4_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.7 - Ensure audit configuration files belong to group root
  debug: msg="rc={{ results_4_1_4_7.rc }} :- results={{ results_4_1_4_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.7,Ensure audit configuration files belong to group root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.8 - Ensure audit tools are 755 or more restrictive
#  Profile :  Level 2 - Server
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.8 - Ensure audit tools are 755 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_8
  failed_when: "results_4_1_4_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.8 - Ensure audit tools are 755 or more restrictive
  debug: msg="rc={{ results_4_1_4_8.rc }} :- results={{ results_4_1_4_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.8,Ensure audit tools are 755 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.8 - Ensure audit tools are 755 or more restrictive
#  Profile :  Level 2 - Workstation
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.8 - Ensure audit tools are 755 or more restrictive
  shell: "sh {{ role_path }}/files/4.1.4.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_8
  failed_when: "results_4_1_4_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.8 - Ensure audit tools are 755 or more restrictive
  debug: msg="rc={{ results_4_1_4_8.rc }} :- results={{ results_4_1_4_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.8,Ensure audit tools are 755 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.9 - Ensure audit tools are owned by root
#  Profile :  Level 2 - Server
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.9 - Ensure audit tools are owned by root
  shell: "sh {{ role_path }}/files/4.1.4.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_9
  failed_when: "results_4_1_4_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.9 - Ensure audit tools are owned by root
  debug: msg="rc={{ results_4_1_4_9.rc }} :- results={{ results_4_1_4_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.9,Ensure audit tools are owned by root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.9 - Ensure audit tools are owned by root
#  Profile :  Level 2 - Workstation
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.9 - Ensure audit tools are owned by root
  shell: "sh {{ role_path }}/files/4.1.4.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_9
  failed_when: "results_4_1_4_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.9 - Ensure audit tools are owned by root
  debug: msg="rc={{ results_4_1_4_9.rc }} :- results={{ results_4_1_4_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.9,Ensure audit tools are owned by root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.1.4.10 - Ensure audit tools belong to group root
#  Profile :  Level 2 - Server
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.10 - Ensure audit tools belong to group root
  shell: "sh {{ role_path }}/files/4.1.4.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_10
  failed_when: "results_4_1_4_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - RESULTS - 4.1.4.10 - Ensure audit tools belong to group root
  debug: msg="rc={{ results_4_1_4_10.rc }} :- results={{ results_4_1_4_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.10,Ensure audit tools belong to group root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section4


####################################################
#  Title  -  4.1.4.10 - Ensure audit tools belong to group root
#  Profile :  Level 2 - Workstation
#  Description :  Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.
#  Rationale Statement :  Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.


- name: AUDIT - 4.1.4.10 - Ensure audit tools belong to group root
  shell: "sh {{ role_path }}/files/4.1.4.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_1_4_10
  failed_when: "results_4_1_4_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_1_4_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - RESULTS - 4.1.4.10 - Ensure audit tools belong to group root
  debug: msg="rc={{ results_4_1_4_10.rc }} :- results={{ results_4_1_4_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.1.4.10,Ensure audit tools belong to group root,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section4


####################################################
#  Title  -  4.2.3 - Ensure all logfiles have appropriate permissions and ownership
#  Profile :  Level 1 - Server
#  Description :  Log files contain information from many services on the local system, or in the event of a centralized log server, others system’s logs as well. In general log files are found in `/var/log/`, although application can be configured to store logs elsewhere. Should your application store its logs in another location, ensure to run the same test on that location.
#  Rationale Statement :  It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.


- name: AUDIT - 4.2.3 - Ensure all logfiles have appropriate permissions and ownership
  shell: "sh {{ role_path }}/files/4.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_3
  failed_when: "results_4_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.3 - Ensure all logfiles have appropriate permissions and ownership
  debug: msg="rc={{ results_4_2_3.rc }} :- results={{ results_4_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.3,Ensure all logfiles have appropriate permissions and ownership,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.3 - Ensure all logfiles have appropriate permissions and ownership
#  Profile :  Level 1 - Workstation
#  Description :  Log files contain information from many services on the local system, or in the event of a centralized log server, others system’s logs as well. In general log files are found in `/var/log/`, although application can be configured to store logs elsewhere. Should your application store its logs in another location, ensure to run the same test on that location.
#  Rationale Statement :  It is important that log files have the correct permissions to ensure that sensitive data is protected and that only the appropriate users / groups have access to them.


- name: AUDIT - 4.2.3 - Ensure all logfiles have appropriate permissions and ownership
  shell: "sh {{ role_path }}/files/4.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_3
  failed_when: "results_4_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.3 - Ensure all logfiles have appropriate permissions and ownership
  debug: msg="rc={{ results_4_2_3.rc }} :- results={{ results_4_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.3,Ensure all logfiles have appropriate permissions and ownership,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.1 - Ensure rsyslog is installed
#  Profile :  Level 1 - Server
#  Description :  The `rsyslog` software is recommended in environments where `journald` does not meet operation requirements.
#  Rationale Statement :  The security enhancements of `rsyslog` such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.


- name: AUDIT - 4.2.1.1 - Ensure rsyslog is installed
  shell: "sh {{ role_path }}/files/4.2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_1
  failed_when: "results_4_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.1 - Ensure rsyslog is installed
  debug: msg="rc={{ results_4_2_1_1.rc }} :- results={{ results_4_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.1,Ensure rsyslog is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.1 - Ensure rsyslog is installed
#  Profile :  Level 1 - Workstation
#  Description :  The `rsyslog` software is recommended in environments where `journald` does not meet operation requirements.
#  Rationale Statement :  The security enhancements of `rsyslog` such as connection-oriented (i.e. TCP) transmission of logs, the option to log to database formats, and the encryption of log data en route to a central logging server) justify installing and configuring the package.


- name: AUDIT - 4.2.1.1 - Ensure rsyslog is installed
  shell: "sh {{ role_path }}/files/4.2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_1
  failed_when: "results_4_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.1 - Ensure rsyslog is installed
  debug: msg="rc={{ results_4_2_1_1.rc }} :- results={{ results_4_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.1,Ensure rsyslog is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.2 - Ensure rsyslog service is enabled
#  Profile :  Level 1 - Server
#  Description :  Once the `rsyslog` package is installed, ensure that the service is enabled.
#  Rationale Statement :  If the `rsyslog` service is not enabled to start on boot, the system will not capture logging events.


- name: AUDIT - 4.2.1.2 - Ensure rsyslog service is enabled
  shell: "sh {{ role_path }}/files/4.2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_2
  failed_when: "results_4_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.2 - Ensure rsyslog service is enabled
  debug: msg="rc={{ results_4_2_1_2.rc }} :- results={{ results_4_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.2,Ensure rsyslog service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.2 - Ensure rsyslog service is enabled
#  Profile :  Level 1 - Workstation
#  Description :  Once the `rsyslog` package is installed, ensure that the service is enabled.
#  Rationale Statement :  If the `rsyslog` service is not enabled to start on boot, the system will not capture logging events.


- name: AUDIT - 4.2.1.2 - Ensure rsyslog service is enabled
  shell: "sh {{ role_path }}/files/4.2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_2
  failed_when: "results_4_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.2 - Ensure rsyslog service is enabled
  debug: msg="rc={{ results_4_2_1_2.rc }} :- results={{ results_4_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.2,Ensure rsyslog service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.3 - Ensure journald is configured to send logs to rsyslog
#  Profile :  Level 1 - Server
#  Description :  Data from `journald` may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of `journald` logs, however, use of the RSyslog service provides a consistent means of log collection and export.
#  Rationale Statement :  **IF** RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing.
# 
# **Note:** This recommendation only applies if rsyslog is the chosen method for client side logging. Do not apply this recommendation if journald is used.


- name: AUDIT - 4.2.1.3 - Ensure journald is configured to send logs to rsyslog
  shell: "sh {{ role_path }}/files/4.2.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_3
  failed_when: "results_4_2_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.3 - Ensure journald is configured to send logs to rsyslog
  debug: msg="rc={{ results_4_2_1_3.rc }} :- results={{ results_4_2_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.3,Ensure journald is configured to send logs to rsyslog,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.3 - Ensure journald is configured to send logs to rsyslog
#  Profile :  Level 1 - Workstation
#  Description :  Data from `journald` may be stored in volatile memory or persisted locally on the server. Utilities exist to accept remote export of `journald` logs, however, use of the RSyslog service provides a consistent means of log collection and export.
#  Rationale Statement :  **IF** RSyslog is the preferred method for capturing logs, all logs of the system should be sent to it for further processing.
# 
# **Note:** This recommendation only applies if rsyslog is the chosen method for client side logging. Do not apply this recommendation if journald is used.


- name: AUDIT - 4.2.1.3 - Ensure journald is configured to send logs to rsyslog
  shell: "sh {{ role_path }}/files/4.2.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_3
  failed_when: "results_4_2_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.3 - Ensure journald is configured to send logs to rsyslog
  debug: msg="rc={{ results_4_2_1_3.rc }} :- results={{ results_4_2_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.3,Ensure journald is configured to send logs to rsyslog,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.4 - Ensure rsyslog default file permissions are configured
#  Profile :  Level 1 - Server
#  Description :  RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.
#  Rationale Statement :  It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.


- name: AUDIT - 4.2.1.4 - Ensure rsyslog default file permissions are configured
  shell: "sh {{ role_path }}/files/4.2.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_4
  failed_when: "results_4_2_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.4 - Ensure rsyslog default file permissions are configured
  debug: msg="rc={{ results_4_2_1_4.rc }} :- results={{ results_4_2_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.4,Ensure rsyslog default file permissions are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.4 - Ensure rsyslog default file permissions are configured
#  Profile :  Level 1 - Workstation
#  Description :  RSyslog will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.
#  Rationale Statement :  It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.


- name: AUDIT - 4.2.1.4 - Ensure rsyslog default file permissions are configured
  shell: "sh {{ role_path }}/files/4.2.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_4
  failed_when: "results_4_2_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.4 - Ensure rsyslog default file permissions are configured
  debug: msg="rc={{ results_4_2_1_4.rc }} :- results={{ results_4_2_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.4,Ensure rsyslog default file permissions are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.5 - Ensure logging is configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/rsyslog.conf` and `/etc/rsyslog.d/*.conf` files specifies rules for logging and which files are to be used to log certain classes of messages.
#  Rationale Statement :  A great deal of important security-related information is sent via `rsyslog` (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).


- name: AUDIT - 4.2.1.5 - Ensure logging is configured
  shell: "sh {{ role_path }}/files/4.2.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_5
  failed_when: "results_4_2_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.5 - Ensure logging is configured
  debug: msg="rc={{ results_4_2_1_5.rc }} :- results={{ results_4_2_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.5,Ensure logging is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.5 - Ensure logging is configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/rsyslog.conf` and `/etc/rsyslog.d/*.conf` files specifies rules for logging and which files are to be used to log certain classes of messages.
#  Rationale Statement :  A great deal of important security-related information is sent via `rsyslog` (e.g., successful and failed su attempts, failed login attempts, root login attempts, etc.).


- name: AUDIT - 4.2.1.5 - Ensure logging is configured
  shell: "sh {{ role_path }}/files/4.2.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_5
  failed_when: "results_4_2_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.5 - Ensure logging is configured
  debug: msg="rc={{ results_4_2_1_5.rc }} :- results={{ results_4_2_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.5,Ensure logging is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
#  Profile :  Level 1 - Server
#  Description :  RSyslog supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
  shell: "sh {{ role_path }}/files/4.2.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_6
  failed_when: "results_4_2_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
  debug: msg="rc={{ results_4_2_1_6.rc }} :- results={{ results_4_2_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.6,Ensure rsyslog is configured to send logs to a remote log host,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
#  Profile :  Level 1 - Workstation
#  Description :  RSyslog supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
  shell: "sh {{ role_path }}/files/4.2.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_6
  failed_when: "results_4_2_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.6 - Ensure rsyslog is configured to send logs to a remote log host
  debug: msg="rc={{ results_4_2_1_6.rc }} :- results={{ results_4_2_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.6,Ensure rsyslog is configured to send logs to a remote log host,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
#  Profile :  Level 1 - Server
#  Description :  RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.
#  Rationale Statement :  If a client is configured to also receive data, thus turning it into a server, the client system is acting outside its operational boundary.


- name: AUDIT - 4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
  shell: "sh {{ role_path }}/files/4.2.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_7
  failed_when: "results_4_2_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
  debug: msg="rc={{ results_4_2_1_7.rc }} :- results={{ results_4_2_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.7,Ensure rsyslog is not configured to receive logs from a remote client,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
#  Profile :  Level 1 - Workstation
#  Description :  RSyslog supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.
#  Rationale Statement :  If a client is configured to also receive data, thus turning it into a server, the client system is acting outside its operational boundary.


- name: AUDIT - 4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
  shell: "sh {{ role_path }}/files/4.2.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_1_7
  failed_when: "results_4_2_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.1.7 - Ensure rsyslog is not configured to receive logs from a remote client
  debug: msg="rc={{ results_4_2_1_7.rc }} :- results={{ results_4_2_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.1.7,Ensure rsyslog is not configured to receive logs from a remote client,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.2 - Ensure journald service is enabled
#  Profile :  Level 1 - Server
#  Description :  Ensure that the `systemd-journald` service is enabled to allow capturing of logging events.
#  Rationale Statement :  If the `systemd-journald` service is not enabled to start on boot, the system will not capture logging events.


- name: AUDIT - 4.2.2.2 - Ensure journald service is enabled
  shell: "sh {{ role_path }}/files/4.2.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_2
  failed_when: "results_4_2_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.2 - Ensure journald service is enabled
  debug: msg="rc={{ results_4_2_2_2.rc }} :- results={{ results_4_2_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.2,Ensure journald service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.2 - Ensure journald service is enabled
#  Profile :  Level 1 - Workstation
#  Description :  Ensure that the `systemd-journald` service is enabled to allow capturing of logging events.
#  Rationale Statement :  If the `systemd-journald` service is not enabled to start on boot, the system will not capture logging events.


- name: AUDIT - 4.2.2.2 - Ensure journald service is enabled
  shell: "sh {{ role_path }}/files/4.2.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_2
  failed_when: "results_4_2_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.2 - Ensure journald service is enabled
  debug: msg="rc={{ results_4_2_2_2.rc }} :- results={{ results_4_2_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.2,Ensure journald service is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.3 - Ensure journald is configured to compress large log files
#  Profile :  Level 1 - Server
#  Description :  The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.
#  Rationale Statement :  Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.


- name: AUDIT - 4.2.2.3 - Ensure journald is configured to compress large log files
  shell: "sh {{ role_path }}/files/4.2.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_3
  failed_when: "results_4_2_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.3 - Ensure journald is configured to compress large log files
  debug: msg="rc={{ results_4_2_2_3.rc }} :- results={{ results_4_2_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.3,Ensure journald is configured to compress large log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.3 - Ensure journald is configured to compress large log files
#  Profile :  Level 1 - Workstation
#  Description :  The journald system includes the capability of compressing overly large files to avoid filling up the system with logs or making the logs unmanageably large.
#  Rationale Statement :  Uncompressed large files may unexpectedly fill a filesystem leading to resource unavailability. Compressing logs prior to write can prevent sudden, unexpected filesystem impacts.


- name: AUDIT - 4.2.2.3 - Ensure journald is configured to compress large log files
  shell: "sh {{ role_path }}/files/4.2.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_3
  failed_when: "results_4_2_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.3 - Ensure journald is configured to compress large log files
  debug: msg="rc={{ results_4_2_2_3.rc }} :- results={{ results_4_2_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.3,Ensure journald is configured to compress large log files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
#  Profile :  Level 1 - Server
#  Description :  Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.
#  Rationale Statement :  Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.


- name: AUDIT - 4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
  shell: "sh {{ role_path }}/files/4.2.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_4
  failed_when: "results_4_2_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
  debug: msg="rc={{ results_4_2_2_4.rc }} :- results={{ results_4_2_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.4,Ensure journald is configured to write logfiles to persistent disk,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
#  Profile :  Level 1 - Workstation
#  Description :  Data from journald may be stored in volatile memory or persisted locally on the server. Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the server they are protected from loss due to a reboot.
#  Rationale Statement :  Writing log data to disk will provide the ability to forensically reconstruct events which may have impacted the operations or security of a system even after a system crash or reboot.


- name: AUDIT - 4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
  shell: "sh {{ role_path }}/files/4.2.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_4
  failed_when: "results_4_2_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.4 - Ensure journald is configured to write logfiles to persistent disk
  debug: msg="rc={{ results_4_2_2_4.rc }} :- results={{ results_4_2_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.4,Ensure journald is configured to write logfiles to persistent disk,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
#  Profile :  Level 1 - Server
#  Description :  Data from `journald` should be kept in the confines of the service and not forwarded on to other services.
#  Rationale Statement :  **IF** journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms.
# 
# **Note:** This recommendation only applies if journald is the chosen method for client side logging. Do not apply this recommendation if rsyslog is used.


- name: AUDIT - 4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
  shell: "sh {{ role_path }}/files/4.2.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_5
  failed_when: "results_4_2_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
  debug: msg="rc={{ results_4_2_2_5.rc }} :- results={{ results_4_2_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.5,Ensure journald is not configured to send logs to rsyslog,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
#  Profile :  Level 1 - Workstation
#  Description :  Data from `journald` should be kept in the confines of the service and not forwarded on to other services.
#  Rationale Statement :  **IF** journald is the method for capturing logs, all logs of the system should be handled by journald and not forwarded to other logging mechanisms.
# 
# **Note:** This recommendation only applies if journald is the chosen method for client side logging. Do not apply this recommendation if rsyslog is used.


- name: AUDIT - 4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
  shell: "sh {{ role_path }}/files/4.2.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_5
  failed_when: "results_4_2_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.5 - Ensure journald is not configured to send logs to rsyslog
  debug: msg="rc={{ results_4_2_2_5.rc }} :- results={{ results_4_2_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.5,Ensure journald is not configured to send logs to rsyslog,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.6 - Ensure journald log rotation is configured per site policy
#  Profile :  Level 1 - Server
#  Description :  Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file `/etc/systemd/journald.conf` is the configuration file used to specify how logs generated by Journald should be rotated.
#  Rationale Statement :  By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.


- name: AUDIT - 4.2.2.6 - Ensure journald log rotation is configured per site policy
  shell: "sh {{ role_path }}/files/4.2.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_6
  failed_when: "results_4_2_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.6 - Ensure journald log rotation is configured per site policy
  debug: msg="rc={{ results_4_2_2_6.rc }} :- results={{ results_4_2_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.6,Ensure journald log rotation is configured per site policy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.6 - Ensure journald log rotation is configured per site policy
#  Profile :  Level 1 - Workstation
#  Description :  Journald includes the capability of rotating log files regularly to avoid filling up the system with logs or making the logs unmanageably large. The file `/etc/systemd/journald.conf` is the configuration file used to specify how logs generated by Journald should be rotated.
#  Rationale Statement :  By keeping the log files smaller and more manageable, a system administrator can easily archive these files to another system and spend less time looking through inordinately large log files.


- name: AUDIT - 4.2.2.6 - Ensure journald log rotation is configured per site policy
  shell: "sh {{ role_path }}/files/4.2.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_6
  failed_when: "results_4_2_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.6 - Ensure journald log rotation is configured per site policy
  debug: msg="rc={{ results_4_2_2_6.rc }} :- results={{ results_4_2_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.6,Ensure journald log rotation is configured per site policy,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.7 - Ensure journald default file permissions configured
#  Profile :  Level 1 - Server
#  Description :  Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.
#  Rationale Statement :  It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.


- name: AUDIT - 4.2.2.7 - Ensure journald default file permissions configured
  shell: "sh {{ role_path }}/files/4.2.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_7
  failed_when: "results_4_2_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.7 - Ensure journald default file permissions configured
  debug: msg="rc={{ results_4_2_2_7.rc }} :- results={{ results_4_2_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.7,Ensure journald default file permissions configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.7 - Ensure journald default file permissions configured
#  Profile :  Level 1 - Workstation
#  Description :  Journald will create logfiles that do not already exist on the system. This setting controls what permissions will be applied to these newly created files.
#  Rationale Statement :  It is important to ensure that log files have the correct permissions to ensure that sensitive data is archived and protected.


- name: AUDIT - 4.2.2.7 - Ensure journald default file permissions configured
  shell: "sh {{ role_path }}/files/4.2.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_7
  failed_when: "results_4_2_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.7 - Ensure journald default file permissions configured
  debug: msg="rc={{ results_4_2_2_7.rc }} :- results={{ results_4_2_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.7,Ensure journald default file permissions configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.1.1 - Ensure systemd-journal-remote is installed
#  Profile :  Level 1 - Server
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.1 - Ensure systemd-journal-remote is installed
  shell: "sh {{ role_path }}/files/4.2.2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_1
  failed_when: "results_4_2_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.1 - Ensure systemd-journal-remote is installed
  debug: msg="rc={{ results_4_2_2_1_1.rc }} :- results={{ results_4_2_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.1,Ensure systemd-journal-remote is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.1.1 - Ensure systemd-journal-remote is installed
#  Profile :  Level 1 - Workstation
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.1 - Ensure systemd-journal-remote is installed
  shell: "sh {{ role_path }}/files/4.2.2.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_1
  failed_when: "results_4_2_2_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.1 - Ensure systemd-journal-remote is installed
  debug: msg="rc={{ results_4_2_2_1_1.rc }} :- results={{ results_4_2_2_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.1,Ensure systemd-journal-remote is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.1.2 - Ensure systemd-journal-remote is configured
#  Profile :  Level 1 - Server
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.2 - Ensure systemd-journal-remote is configured
  shell: "sh {{ role_path }}/files/4.2.2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_2
  failed_when: "results_4_2_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.2 - Ensure systemd-journal-remote is configured
  debug: msg="rc={{ results_4_2_2_1_2.rc }} :- results={{ results_4_2_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.2,Ensure systemd-journal-remote is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.1.2 - Ensure systemd-journal-remote is configured
#  Profile :  Level 1 - Workstation
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.2 - Ensure systemd-journal-remote is configured
  shell: "sh {{ role_path }}/files/4.2.2.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_2
  failed_when: "results_4_2_2_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.2 - Ensure systemd-journal-remote is configured
  debug: msg="rc={{ results_4_2_2_1_2.rc }} :- results={{ results_4_2_2_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.2,Ensure systemd-journal-remote is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.1.3 - Ensure systemd-journal-remote is enabled
#  Profile :  Level 1 - Server
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.3 - Ensure systemd-journal-remote is enabled
  shell: "sh {{ role_path }}/files/4.2.2.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_3
  failed_when: "results_4_2_2_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.3 - Ensure systemd-journal-remote is enabled
  debug: msg="rc={{ results_4_2_2_1_3.rc }} :- results={{ results_4_2_2_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.3,Ensure systemd-journal-remote is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.1.3 - Ensure systemd-journal-remote is enabled
#  Profile :  Level 1 - Workstation
#  Description :  Journald (via `systemd-journal-remote`) supports the ability to send log events it gathers to a remote log host or to receive messages from remote hosts, thus enabling centralized log management.
#  Rationale Statement :  Storing log data on a remote host protects log integrity from local attacks. If an attacker gains root access on the local system, they could tamper with or remove log data that is stored on the local system.


- name: AUDIT - 4.2.2.1.3 - Ensure systemd-journal-remote is enabled
  shell: "sh {{ role_path }}/files/4.2.2.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_3
  failed_when: "results_4_2_2_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.3 - Ensure systemd-journal-remote is enabled
  debug: msg="rc={{ results_4_2_2_1_3.rc }} :- results={{ results_4_2_2_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.3,Ensure systemd-journal-remote is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section4


####################################################
#  Title  -  4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
#  Profile :  Level 1 - Server
#  Description :  Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.
# 
# **NOTE:** 
# - The same package, `systemd-journal-remote`, is used for both sending logs to remote hosts and receiving incoming logs.
# - With regards to receiving logs, there are two services; `systemd-journal-remote.socket` and `systemd-journal-remote.service`.
#  Rationale Statement :  If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.


- name: AUDIT - 4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
  shell: "sh {{ role_path }}/files/4.2.2.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_4
  failed_when: "results_4_2_2_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
  debug: msg="rc={{ results_4_2_2_1_4.rc }} :- results={{ results_4_2_2_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.4,Ensure journald is not configured to receive logs from a remote client,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section4


####################################################
#  Title  -  4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
#  Profile :  Level 1 - Workstation
#  Description :  Journald supports the ability to receive messages from remote hosts, thus acting as a log server. Clients should not receive data from other hosts.
# 
# **NOTE:** 
# - The same package, `systemd-journal-remote`, is used for both sending logs to remote hosts and receiving incoming logs.
# - With regards to receiving logs, there are two services; `systemd-journal-remote.socket` and `systemd-journal-remote.service`.
#  Rationale Statement :  If a client is configured to also receive data, thus turning it into a server, the client system is acting outside it's operational boundary.


- name: AUDIT - 4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
  shell: "sh {{ role_path }}/files/4.2.2.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_4_2_2_1_4
  failed_when: "results_4_2_2_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- set_fact:
    compliant_status: "{% if results_4_2_2_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - RESULTS - 4.2.2.1.4 - Ensure journald is not configured to receive logs from a remote client
  debug: msg="rc={{ results_4_2_2_1_4.rc }} :- results={{ results_4_2_2_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section4


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "4.2.2.1.4,Ensure journald is not configured to receive logs from a remote client,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section4


####################################################
#  Title  -  5.1.1 - Ensure cron daemon is enabled
#  Profile :  Level 1 - Server
#  Description :  The `cron` daemon is used to execute batch jobs on the system.
#  Rationale Statement :  While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and `cron` is used to execute them.


- name: AUDIT - 5.1.1 - Ensure cron daemon is enabled
  shell: "sh {{ role_path }}/files/5.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_1
  failed_when: "results_5_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.1 - Ensure cron daemon is enabled
  debug: msg="rc={{ results_5_1_1.rc }} :- results={{ results_5_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.1,Ensure cron daemon is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.1 - Ensure cron daemon is enabled
#  Profile :  Level 1 - Workstation
#  Description :  The `cron` daemon is used to execute batch jobs on the system.
#  Rationale Statement :  While there may not be user jobs that need to be run on the system, the system does have maintenance jobs that may include security monitoring that have to run, and `cron` is used to execute them.


- name: AUDIT - 5.1.1 - Ensure cron daemon is enabled
  shell: "sh {{ role_path }}/files/5.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_1
  failed_when: "results_5_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.1 - Ensure cron daemon is enabled
  debug: msg="rc={{ results_5_1_1.rc }} :- results={{ results_5_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.1,Ensure cron daemon is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.2 - Ensure permissions on /etc/crontab are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/crontab` file is used by `cron` to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.
#  Rationale Statement :  This file contains information on what system jobs are run by cron. Write access to this file could provide unprivileged users with the ability to elevate their privileges. Read access to this file could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.


- name: AUDIT - 5.1.2 - Ensure permissions on /etc/crontab are configured
  shell: "sh {{ role_path }}/files/5.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_2
  failed_when: "results_5_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.2 - Ensure permissions on /etc/crontab are configured
  debug: msg="rc={{ results_5_1_2.rc }} :- results={{ results_5_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.2,Ensure permissions on /etc/crontab are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.2 - Ensure permissions on /etc/crontab are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/crontab` file is used by `cron` to control its own jobs. The commands in this item make sure that root is the user and group owner of the file and that only the owner can access the file.
#  Rationale Statement :  This file contains information on what system jobs are run by cron. Write access to this file could provide unprivileged users with the ability to elevate their privileges. Read access to this file could provide users with the ability to gain insight on system jobs that run on the system and could provide them a way to gain unauthorized privileged access.


- name: AUDIT - 5.1.2 - Ensure permissions on /etc/crontab are configured
  shell: "sh {{ role_path }}/files/5.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_2
  failed_when: "results_5_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.2 - Ensure permissions on /etc/crontab are configured
  debug: msg="rc={{ results_5_1_2.rc }} :- results={{ results_5_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.2,Ensure permissions on /etc/crontab are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.3 - Ensure permissions on /etc/cron.hourly are configured
#  Profile :  Level 1 - Server
#  Description :  This directory contains system `cron` jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.3 - Ensure permissions on /etc/cron.hourly are configured
  shell: "sh {{ role_path }}/files/5.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_3
  failed_when: "results_5_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.3 - Ensure permissions on /etc/cron.hourly are configured
  debug: msg="rc={{ results_5_1_3.rc }} :- results={{ results_5_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.3,Ensure permissions on /etc/cron.hourly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.3 - Ensure permissions on /etc/cron.hourly are configured
#  Profile :  Level 1 - Workstation
#  Description :  This directory contains system `cron` jobs that need to run on an hourly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.3 - Ensure permissions on /etc/cron.hourly are configured
  shell: "sh {{ role_path }}/files/5.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_3
  failed_when: "results_5_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.3 - Ensure permissions on /etc/cron.hourly are configured
  debug: msg="rc={{ results_5_1_3.rc }} :- results={{ results_5_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.3,Ensure permissions on /etc/cron.hourly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.4 - Ensure permissions on /etc/cron.daily are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/cron.daily` directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.4 - Ensure permissions on /etc/cron.daily are configured
  shell: "sh {{ role_path }}/files/5.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_4
  failed_when: "results_5_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.4 - Ensure permissions on /etc/cron.daily are configured
  debug: msg="rc={{ results_5_1_4.rc }} :- results={{ results_5_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.4,Ensure permissions on /etc/cron.daily are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.4 - Ensure permissions on /etc/cron.daily are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/cron.daily` directory contains system cron jobs that need to run on a daily basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.4 - Ensure permissions on /etc/cron.daily are configured
  shell: "sh {{ role_path }}/files/5.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_4
  failed_when: "results_5_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.4 - Ensure permissions on /etc/cron.daily are configured
  debug: msg="rc={{ results_5_1_4.rc }} :- results={{ results_5_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.4,Ensure permissions on /etc/cron.daily are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.5 - Ensure permissions on /etc/cron.weekly are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/cron.weekly` directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.5 - Ensure permissions on /etc/cron.weekly are configured
  shell: "sh {{ role_path }}/files/5.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_5
  failed_when: "results_5_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.5 - Ensure permissions on /etc/cron.weekly are configured
  debug: msg="rc={{ results_5_1_5.rc }} :- results={{ results_5_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.5,Ensure permissions on /etc/cron.weekly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.5 - Ensure permissions on /etc/cron.weekly are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/cron.weekly` directory contains system cron jobs that need to run on a weekly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.5 - Ensure permissions on /etc/cron.weekly are configured
  shell: "sh {{ role_path }}/files/5.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_5
  failed_when: "results_5_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.5 - Ensure permissions on /etc/cron.weekly are configured
  debug: msg="rc={{ results_5_1_5.rc }} :- results={{ results_5_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.5,Ensure permissions on /etc/cron.weekly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.6 - Ensure permissions on /etc/cron.monthly are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/cron.monthly` directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.6 - Ensure permissions on /etc/cron.monthly are configured
  shell: "sh {{ role_path }}/files/5.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_6
  failed_when: "results_5_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.6 - Ensure permissions on /etc/cron.monthly are configured
  debug: msg="rc={{ results_5_1_6.rc }} :- results={{ results_5_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.6,Ensure permissions on /etc/cron.monthly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.6 - Ensure permissions on /etc/cron.monthly are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/cron.monthly` directory contains system cron jobs that need to run on a monthly basis. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.6 - Ensure permissions on /etc/cron.monthly are configured
  shell: "sh {{ role_path }}/files/5.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_6
  failed_when: "results_5_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.6 - Ensure permissions on /etc/cron.monthly are configured
  debug: msg="rc={{ results_5_1_6.rc }} :- results={{ results_5_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.6,Ensure permissions on /etc/cron.monthly are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.7 - Ensure permissions on /etc/cron.d are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/cron.d` directory contains system `cron` jobs that need to run in a similar manner to the hourly, daily, weekly and monthly jobs from `/etc/crontab` , but require more granular control as to when they run. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.7 - Ensure permissions on /etc/cron.d are configured
  shell: "sh {{ role_path }}/files/5.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_7
  failed_when: "results_5_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.7 - Ensure permissions on /etc/cron.d are configured
  debug: msg="rc={{ results_5_1_7.rc }} :- results={{ results_5_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.7,Ensure permissions on /etc/cron.d are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.7 - Ensure permissions on /etc/cron.d are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/cron.d` directory contains system `cron` jobs that need to run in a similar manner to the hourly, daily, weekly and monthly jobs from `/etc/crontab` , but require more granular control as to when they run. The files in this directory cannot be manipulated by the `crontab` command, but are instead edited by system administrators using a text editor. The commands below restrict read/write and search access to user and group root, preventing regular users from accessing this directory.
#  Rationale Statement :  Granting write access to this directory for non-privileged users could provide them the means for gaining unauthorized elevated privileges. Granting read access to this directory could give an unprivileged user insight in how to gain elevated privileges or circumvent auditing controls.


- name: AUDIT - 5.1.7 - Ensure permissions on /etc/cron.d are configured
  shell: "sh {{ role_path }}/files/5.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_7
  failed_when: "results_5_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.7 - Ensure permissions on /etc/cron.d are configured
  debug: msg="rc={{ results_5_1_7.rc }} :- results={{ results_5_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.7,Ensure permissions on /etc/cron.d are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.8 - Ensure cron is restricted to authorized users
#  Profile :  Level 1 - Server
#  Description :  If `cron` is installed in the system, configure `/etc/cron.allow` to allow specific users to use these services. If `/etc/cron.allow` does not exist, then `/etc/cron.deny` is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in `/etc/cron.allow` are allowed to use cron. 
# 
# _Note: Even though a given user is not listed in `cron.allow`, cron jobs can still be run as that user. The `cron.allow` file only controls administrative access to the crontab command for scheduling and modifying cron jobs._
#  Rationale Statement :  On many systems, only the system administrator is authorized to schedule `cron` jobs. Using the `cron.allow` file to control who can run `cron` jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.


- name: AUDIT - 5.1.8 - Ensure cron is restricted to authorized users
  shell: "sh {{ role_path }}/files/5.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_8
  failed_when: "results_5_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.8 - Ensure cron is restricted to authorized users
  debug: msg="rc={{ results_5_1_8.rc }} :- results={{ results_5_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.8,Ensure cron is restricted to authorized users,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.8 - Ensure cron is restricted to authorized users
#  Profile :  Level 1 - Workstation
#  Description :  If `cron` is installed in the system, configure `/etc/cron.allow` to allow specific users to use these services. If `/etc/cron.allow` does not exist, then `/etc/cron.deny` is checked. Any user not specifically defined in those files is allowed to use cron. By removing the file, only users in `/etc/cron.allow` are allowed to use cron. 
# 
# _Note: Even though a given user is not listed in `cron.allow`, cron jobs can still be run as that user. The `cron.allow` file only controls administrative access to the crontab command for scheduling and modifying cron jobs._
#  Rationale Statement :  On many systems, only the system administrator is authorized to schedule `cron` jobs. Using the `cron.allow` file to control who can run `cron` jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.


- name: AUDIT - 5.1.8 - Ensure cron is restricted to authorized users
  shell: "sh {{ role_path }}/files/5.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_8
  failed_when: "results_5_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.8 - Ensure cron is restricted to authorized users
  debug: msg="rc={{ results_5_1_8.rc }} :- results={{ results_5_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.8,Ensure cron is restricted to authorized users,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.1.9 - Ensure at is restricted to authorized users
#  Profile :  Level 1 - Server
#  Description :  If `at` is installed in the system, configure `/etc/at.allow` to allow specific users to use these services. If `/etc/at.allow` does not exist, then `/etc/at.deny` is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in `/etc/at.allow` are allowed to use at. 
# 
# **Note:** Even though a given user is not listed in `at.allow`, at jobs can still be run as that user. The `at.allow` file only controls administrative access to the at command for scheduling and modifying at jobs.
#  Rationale Statement :  On many systems, only the system administrator is authorized to schedule `at` jobs. Using the `at.allow` file to control who can run `at` jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.


- name: AUDIT - 5.1.9 - Ensure at is restricted to authorized users
  shell: "sh {{ role_path }}/files/5.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_9
  failed_when: "results_5_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.1.9 - Ensure at is restricted to authorized users
  debug: msg="rc={{ results_5_1_9.rc }} :- results={{ results_5_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.9,Ensure at is restricted to authorized users,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.1.9 - Ensure at is restricted to authorized users
#  Profile :  Level 1 - Workstation
#  Description :  If `at` is installed in the system, configure `/etc/at.allow` to allow specific users to use these services. If `/etc/at.allow` does not exist, then `/etc/at.deny` is checked. Any user not specifically defined in those files is allowed to use at. By removing the file, only users in `/etc/at.allow` are allowed to use at. 
# 
# **Note:** Even though a given user is not listed in `at.allow`, at jobs can still be run as that user. The `at.allow` file only controls administrative access to the at command for scheduling and modifying at jobs.
#  Rationale Statement :  On many systems, only the system administrator is authorized to schedule `at` jobs. Using the `at.allow` file to control who can run `at` jobs enforces this policy. It is easier to manage an allow list than a deny list. In a deny list, you could potentially add a user ID to the system and forget to add it to the deny files.


- name: AUDIT - 5.1.9 - Ensure at is restricted to authorized users
  shell: "sh {{ role_path }}/files/5.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_1_9
  failed_when: "results_5_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.1.9 - Ensure at is restricted to authorized users
  debug: msg="rc={{ results_5_1_9.rc }} :- results={{ results_5_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.1.9,Ensure at is restricted to authorized users,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/ssh/sshd_config` file contains configuration specifications for `sshd`. The command below sets the owner and group of the file to root.
#  Rationale Statement :  The `/etc/ssh/sshd_config` file needs to be protected from unauthorized changes by non-privileged users.


- name: AUDIT - 5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
  shell: "sh {{ role_path }}/files/5.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_1
  failed_when: "results_5_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
  debug: msg="rc={{ results_5_2_1.rc }} :- results={{ results_5_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.1,Ensure permissions on /etc/ssh/sshd_config are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/ssh/sshd_config` file contains configuration specifications for `sshd`. The command below sets the owner and group of the file to root.
#  Rationale Statement :  The `/etc/ssh/sshd_config` file needs to be protected from unauthorized changes by non-privileged users.


- name: AUDIT - 5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
  shell: "sh {{ role_path }}/files/5.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_1
  failed_when: "results_5_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.1 - Ensure permissions on /etc/ssh/sshd_config are configured
  debug: msg="rc={{ results_5_2_1.rc }} :- results={{ results_5_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.1,Ensure permissions on /etc/ssh/sshd_config are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.2 - Ensure permissions on SSH private host key files are configured
#  Profile :  Level 1 - Server
#  Description :  An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.
#  Rationale Statement :  If an unauthorized user obtains the private SSH host key file, the host could be impersonated


- name: AUDIT - 5.2.2 - Ensure permissions on SSH private host key files are configured
  shell: "sh {{ role_path }}/files/5.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_2
  failed_when: "results_5_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.2 - Ensure permissions on SSH private host key files are configured
  debug: msg="rc={{ results_5_2_2.rc }} :- results={{ results_5_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.2,Ensure permissions on SSH private host key files are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.2 - Ensure permissions on SSH private host key files are configured
#  Profile :  Level 1 - Workstation
#  Description :  An SSH private key is one of two files used in SSH public key authentication. In this authentication method, the possession of the private key is proof of identity. Only a private key that corresponds to a public key will be able to authenticate successfully. The private keys need to be stored and handled carefully, and no copies of the private key should be distributed.
#  Rationale Statement :  If an unauthorized user obtains the private SSH host key file, the host could be impersonated


- name: AUDIT - 5.2.2 - Ensure permissions on SSH private host key files are configured
  shell: "sh {{ role_path }}/files/5.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_2
  failed_when: "results_5_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.2 - Ensure permissions on SSH private host key files are configured
  debug: msg="rc={{ results_5_2_2.rc }} :- results={{ results_5_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.2,Ensure permissions on SSH private host key files are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.3 - Ensure permissions on SSH public host key files are configured
#  Profile :  Level 1 - Server
#  Description :  An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.
#  Rationale Statement :  If a public host key file is modified by an unauthorized user, the SSH service may be compromised.


- name: AUDIT - 5.2.3 - Ensure permissions on SSH public host key files are configured
  shell: "sh {{ role_path }}/files/5.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_3
  failed_when: "results_5_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.3 - Ensure permissions on SSH public host key files are configured
  debug: msg="rc={{ results_5_2_3.rc }} :- results={{ results_5_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.3,Ensure permissions on SSH public host key files are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.3 - Ensure permissions on SSH public host key files are configured
#  Profile :  Level 1 - Workstation
#  Description :  An SSH public key is one of two files used in SSH public key authentication. In this authentication method, a public key is a key that can be used for verifying digital signatures generated using a corresponding private key. Only a public key that corresponds to a private key will be able to authenticate successfully.
#  Rationale Statement :  If a public host key file is modified by an unauthorized user, the SSH service may be compromised.


- name: AUDIT - 5.2.3 - Ensure permissions on SSH public host key files are configured
  shell: "sh {{ role_path }}/files/5.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_3
  failed_when: "results_5_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.3 - Ensure permissions on SSH public host key files are configured
  debug: msg="rc={{ results_5_2_3.rc }} :- results={{ results_5_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.3,Ensure permissions on SSH public host key files are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.4 - Ensure SSH access is limited
#  Profile :  Level 1 - Server
#  Description :  There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:
# 
# - `AllowUsers`:
#  - The `AllowUsers` variable gives the system administrator the option of allowing specific users to `ssh` into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.
# - `AllowGroups`:
#  - The `AllowGroups` variable gives the system administrator the option of allowing specific groups of users to `ssh` into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.
# - `DenyUsers`:
#  - The `DenyUsers` variable gives the system administrator the option of denying specific users to `ssh` into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.
# - `DenyGroups`:
#  - The `DenyGroups` variable gives the system administrator the option of denying specific groups of users to `ssh` into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.
#  Rationale Statement :  Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.


- name: AUDIT - 5.2.4 - Ensure SSH access is limited
  shell: "sh {{ role_path }}/files/5.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_4
  failed_when: "results_5_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.4 - Ensure SSH access is limited
  debug: msg="rc={{ results_5_2_4.rc }} :- results={{ results_5_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.4,Ensure SSH access is limited,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.4 - Ensure SSH access is limited
#  Profile :  Level 1 - Workstation
#  Description :  There are several options available to limit which users and group can access the system via SSH. It is recommended that at least one of the following options be leveraged:
# 
# - `AllowUsers`:
#  - The `AllowUsers` variable gives the system administrator the option of allowing specific users to `ssh` into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by only allowing the allowed users to log in from a particular host, the entry can be specified in the form of user@host.
# - `AllowGroups`:
#  - The `AllowGroups` variable gives the system administrator the option of allowing specific groups of users to `ssh` into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.
# - `DenyUsers`:
#  - The `DenyUsers` variable gives the system administrator the option of denying specific users to `ssh` into the system. The list consists of space separated user names. Numeric user IDs are not recognized with this variable. If a system administrator wants to restrict user access further by specifically denying a user's access from a particular host, the entry can be specified in the form of user@host.
# - `DenyGroups`:
#  - The `DenyGroups` variable gives the system administrator the option of denying specific groups of users to `ssh` into the system. The list consists of space separated group names. Numeric group IDs are not recognized with this variable.
#  Rationale Statement :  Restricting which users can remotely access the system via SSH will help ensure that only authorized users access the system.


- name: AUDIT - 5.2.4 - Ensure SSH access is limited
  shell: "sh {{ role_path }}/files/5.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_4
  failed_when: "results_5_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.4 - Ensure SSH access is limited
  debug: msg="rc={{ results_5_2_4.rc }} :- results={{ results_5_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.4,Ensure SSH access is limited,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.5 - Ensure SSH LogLevel is appropriate
#  Profile :  Level 1 - Server
#  Description :  `INFO` level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.
# 
# `VERBOSE` level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.
#  Rationale Statement :  SSH provides several logging levels with varying amounts of verbosity. `DEBUG` is specifically **not** recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.


- name: AUDIT - 5.2.5 - Ensure SSH LogLevel is appropriate
  shell: "sh {{ role_path }}/files/5.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_5
  failed_when: "results_5_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.5 - Ensure SSH LogLevel is appropriate
  debug: msg="rc={{ results_5_2_5.rc }} :- results={{ results_5_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.5,Ensure SSH LogLevel is appropriate,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.5 - Ensure SSH LogLevel is appropriate
#  Profile :  Level 1 - Workstation
#  Description :  `INFO` level is the basic level that only records login activity of SSH users. In many situations, such as Incident Response, it is important to determine when a particular user was active on a system. The logout record can eliminate those users who disconnected, which helps narrow the field.
# 
# `VERBOSE` level specifies that login and logout activity as well as the key fingerprint for any SSH key used for login will be logged. This information is important for SSH key management, especially in legacy environments.
#  Rationale Statement :  SSH provides several logging levels with varying amounts of verbosity. `DEBUG` is specifically **not** recommended other than strictly for debugging SSH communications since it provides so much data that it is difficult to identify important security information.


- name: AUDIT - 5.2.5 - Ensure SSH LogLevel is appropriate
  shell: "sh {{ role_path }}/files/5.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_5
  failed_when: "results_5_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.5 - Ensure SSH LogLevel is appropriate
  debug: msg="rc={{ results_5_2_5.rc }} :- results={{ results_5_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.5,Ensure SSH LogLevel is appropriate,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.6 - Ensure SSH PAM is enabled
#  Profile :  Level 1 - Server
#  Description :  UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types
#  Rationale Statement :  When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server


- name: AUDIT - 5.2.6 - Ensure SSH PAM is enabled
  shell: "sh {{ role_path }}/files/5.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_6
  failed_when: "results_5_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.6 - Ensure SSH PAM is enabled
  debug: msg="rc={{ results_5_2_6.rc }} :- results={{ results_5_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.6,Ensure SSH PAM is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.6 - Ensure SSH PAM is enabled
#  Profile :  Level 1 - Workstation
#  Description :  UsePAM Enables the Pluggable Authentication Module interface. If set to “yes” this will enable PAM authentication using ChallengeResponseAuthentication and PasswordAuthentication in addition to PAM account and session module processing for all authentication types
#  Rationale Statement :  When usePAM is set to yes, PAM runs through account and session types properly. This is important if you want to restrict access to services based off of IP, time or other factors of the account. Additionally, you can make sure users inherit certain environment variables on login or disallow access to the server


- name: AUDIT - 5.2.6 - Ensure SSH PAM is enabled
  shell: "sh {{ role_path }}/files/5.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_6
  failed_when: "results_5_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.6 - Ensure SSH PAM is enabled
  debug: msg="rc={{ results_5_2_6.rc }} :- results={{ results_5_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.6,Ensure SSH PAM is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.7 - Ensure SSH root login is disabled
#  Profile :  Level 1 - Server
#  Description :  The `PermitRootLogin` parameter specifies if the root user can log in using ssh. The default is no.
#  Rationale Statement :  Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via `sudo` or `su`. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident


- name: AUDIT - 5.2.7 - Ensure SSH root login is disabled
  shell: "sh {{ role_path }}/files/5.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_7
  failed_when: "results_5_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.7 - Ensure SSH root login is disabled
  debug: msg="rc={{ results_5_2_7.rc }} :- results={{ results_5_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.7,Ensure SSH root login is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.7 - Ensure SSH root login is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `PermitRootLogin` parameter specifies if the root user can log in using ssh. The default is no.
#  Rationale Statement :  Disallowing root logins over SSH requires system admins to authenticate using their own individual account, then escalating to root via `sudo` or `su`. This in turn limits opportunity for non-repudiation and provides a clear audit trail in the event of a security incident


- name: AUDIT - 5.2.7 - Ensure SSH root login is disabled
  shell: "sh {{ role_path }}/files/5.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_7
  failed_when: "results_5_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.7 - Ensure SSH root login is disabled
  debug: msg="rc={{ results_5_2_7.rc }} :- results={{ results_5_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.7,Ensure SSH root login is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.8 - Ensure SSH HostbasedAuthentication is disabled
#  Profile :  Level 1 - Server
#  Description :  The `HostbasedAuthentication` parameter specifies if authentication is allowed through trusted hosts via the user of `.rhosts`, or `/etc/hosts.equiv`, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.
#  Rationale Statement :  Even though the `.rhosts` files are ineffective if support is disabled in `/etc/pam.conf`, disabling the ability to use `.rhosts` files in SSH provides an additional layer of protection.


- name: AUDIT - 5.2.8 - Ensure SSH HostbasedAuthentication is disabled
  shell: "sh {{ role_path }}/files/5.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_8
  failed_when: "results_5_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.8 - Ensure SSH HostbasedAuthentication is disabled
  debug: msg="rc={{ results_5_2_8.rc }} :- results={{ results_5_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.8,Ensure SSH HostbasedAuthentication is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.8 - Ensure SSH HostbasedAuthentication is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `HostbasedAuthentication` parameter specifies if authentication is allowed through trusted hosts via the user of `.rhosts`, or `/etc/hosts.equiv`, along with successful public key client host authentication. This option only applies to SSH Protocol Version 2.
#  Rationale Statement :  Even though the `.rhosts` files are ineffective if support is disabled in `/etc/pam.conf`, disabling the ability to use `.rhosts` files in SSH provides an additional layer of protection.


- name: AUDIT - 5.2.8 - Ensure SSH HostbasedAuthentication is disabled
  shell: "sh {{ role_path }}/files/5.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_8
  failed_when: "results_5_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.8 - Ensure SSH HostbasedAuthentication is disabled
  debug: msg="rc={{ results_5_2_8.rc }} :- results={{ results_5_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.8,Ensure SSH HostbasedAuthentication is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
#  Profile :  Level 1 - Server
#  Description :  The `PermitEmptyPasswords` parameter specifies if the SSH server allows login to accounts with empty password strings.
#  Rationale Statement :  Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system


- name: AUDIT - 5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
  shell: "sh {{ role_path }}/files/5.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_9
  failed_when: "results_5_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
  debug: msg="rc={{ results_5_2_9.rc }} :- results={{ results_5_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.9,Ensure SSH PermitEmptyPasswords is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `PermitEmptyPasswords` parameter specifies if the SSH server allows login to accounts with empty password strings.
#  Rationale Statement :  Disallowing remote shell access to accounts that have an empty password reduces the probability of unauthorized access to the system


- name: AUDIT - 5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
  shell: "sh {{ role_path }}/files/5.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_9
  failed_when: "results_5_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.9 - Ensure SSH PermitEmptyPasswords is disabled
  debug: msg="rc={{ results_5_2_9.rc }} :- results={{ results_5_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.9,Ensure SSH PermitEmptyPasswords is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.10 - Ensure SSH PermitUserEnvironment is disabled
#  Profile :  Level 1 - Server
#  Description :  The `PermitUserEnvironment` option allows users to present environment options to the `ssh` daemon.
#  Rationale Statement :  Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has `ssh` executing trojan'd programs)


- name: AUDIT - 5.2.10 - Ensure SSH PermitUserEnvironment is disabled
  shell: "sh {{ role_path }}/files/5.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_10
  failed_when: "results_5_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.10 - Ensure SSH PermitUserEnvironment is disabled
  debug: msg="rc={{ results_5_2_10.rc }} :- results={{ results_5_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.10,Ensure SSH PermitUserEnvironment is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.10 - Ensure SSH PermitUserEnvironment is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `PermitUserEnvironment` option allows users to present environment options to the `ssh` daemon.
#  Rationale Statement :  Permitting users the ability to set environment variables through the SSH daemon could potentially allow users to bypass security controls (e.g. setting an execution path that has `ssh` executing trojan'd programs)


- name: AUDIT - 5.2.10 - Ensure SSH PermitUserEnvironment is disabled
  shell: "sh {{ role_path }}/files/5.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_10
  failed_when: "results_5_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.10 - Ensure SSH PermitUserEnvironment is disabled
  debug: msg="rc={{ results_5_2_10.rc }} :- results={{ results_5_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.10,Ensure SSH PermitUserEnvironment is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.11 - Ensure SSH IgnoreRhosts is enabled
#  Profile :  Level 1 - Server
#  Description :  The `IgnoreRhosts` parameter specifies that `.rhosts` and `.shosts` files will not be used in `RhostsRSAAuthentication` or `HostbasedAuthentication`.
#  Rationale Statement :  Setting this parameter forces users to enter a password when authenticating with ssh.


- name: AUDIT - 5.2.11 - Ensure SSH IgnoreRhosts is enabled
  shell: "sh {{ role_path }}/files/5.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_11
  failed_when: "results_5_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.11 - Ensure SSH IgnoreRhosts is enabled
  debug: msg="rc={{ results_5_2_11.rc }} :- results={{ results_5_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.11,Ensure SSH IgnoreRhosts is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.11 - Ensure SSH IgnoreRhosts is enabled
#  Profile :  Level 1 - Workstation
#  Description :  The `IgnoreRhosts` parameter specifies that `.rhosts` and `.shosts` files will not be used in `RhostsRSAAuthentication` or `HostbasedAuthentication`.
#  Rationale Statement :  Setting this parameter forces users to enter a password when authenticating with ssh.


- name: AUDIT - 5.2.11 - Ensure SSH IgnoreRhosts is enabled
  shell: "sh {{ role_path }}/files/5.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_11
  failed_when: "results_5_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.11 - Ensure SSH IgnoreRhosts is enabled
  debug: msg="rc={{ results_5_2_11.rc }} :- results={{ results_5_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.11,Ensure SSH IgnoreRhosts is enabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.12 - Ensure SSH X11 forwarding is disabled
#  Profile :  Level 1 - Workstation
#  Description :  The `X11Forwarding` parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
#  Rationale Statement :  Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.


- name: AUDIT - 5.2.12 - Ensure SSH X11 forwarding is disabled
  shell: "sh {{ role_path }}/files/5.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_12
  failed_when: "results_5_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.12 - Ensure SSH X11 forwarding is disabled
  debug: msg="rc={{ results_5_2_12.rc }} :- results={{ results_5_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.12,Ensure SSH X11 forwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.12 - Ensure SSH X11 forwarding is disabled
#  Profile :  Level 2 - Server
#  Description :  The `X11Forwarding` parameter provides the ability to tunnel X11 traffic through the connection to enable remote graphic connections.
#  Rationale Statement :  Disable X11 forwarding unless there is an operational requirement to use X11 applications directly. There is a small risk that the remote X11 servers of users who are logged in via SSH with X11 forwarding could be compromised by other users on the X11 server. Note that even if X11 forwarding is disabled, users can always install their own forwarders.


- name: AUDIT - 5.2.12 - Ensure SSH X11 forwarding is disabled
  shell: "sh {{ role_path }}/files/5.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_12
  failed_when: "results_5_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - RESULTS - 5.2.12 - Ensure SSH X11 forwarding is disabled
  debug: msg="rc={{ results_5_2_12.rc }} :- results={{ results_5_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.12,Ensure SSH X11 forwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section5


####################################################
#  Title  -  5.2.13 - Ensure SSH AllowTcpForwarding is disabled
#  Profile :  Level 2 - Server
#  Description :  SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines
#  Rationale Statement :  Leaving port forwarding enabled can expose the organization to security risks and back-doors. 
# 
# SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network


- name: AUDIT - 5.2.13 - Ensure SSH AllowTcpForwarding is disabled
  shell: "sh {{ role_path }}/files/5.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_13
  failed_when: "results_5_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - RESULTS - 5.2.13 - Ensure SSH AllowTcpForwarding is disabled
  debug: msg="rc={{ results_5_2_13.rc }} :- results={{ results_5_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.13,Ensure SSH AllowTcpForwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section5


####################################################
#  Title  -  5.2.13 - Ensure SSH AllowTcpForwarding is disabled
#  Profile :  Level 2 - Workstation
#  Description :  SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines
#  Rationale Statement :  Leaving port forwarding enabled can expose the organization to security risks and back-doors. 
# 
# SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network


- name: AUDIT - 5.2.13 - Ensure SSH AllowTcpForwarding is disabled
  shell: "sh {{ role_path }}/files/5.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_13
  failed_when: "results_5_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.13 - Ensure SSH AllowTcpForwarding is disabled
  debug: msg="rc={{ results_5_2_13.rc }} :- results={{ results_5_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.13,Ensure SSH AllowTcpForwarding is disabled,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section5


####################################################
#  Title  -  5.2.14 - Ensure system-wide crypto policy is not over-ridden
#  Profile :  Level 1 - Server
#  Description :  System-wide Crypto policy can be over-ridden or opted out of for openSSH
#  Rationale Statement :  Over-riding or opting out of the system-wide crypto policy could allow for the use of less secure Ciphers, MACs, KexAlgorithms and GSSAPIKexAlgorithm


- name: AUDIT - 5.2.14 - Ensure system-wide crypto policy is not over-ridden
  shell: "sh {{ role_path }}/files/5.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_14
  failed_when: "results_5_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.14 - Ensure system-wide crypto policy is not over-ridden
  debug: msg="rc={{ results_5_2_14.rc }} :- results={{ results_5_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.14,Ensure system-wide crypto policy is not over-ridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.14 - Ensure system-wide crypto policy is not over-ridden
#  Profile :  Level 1 - Workstation
#  Description :  System-wide Crypto policy can be over-ridden or opted out of for openSSH
#  Rationale Statement :  Over-riding or opting out of the system-wide crypto policy could allow for the use of less secure Ciphers, MACs, KexAlgorithms and GSSAPIKexAlgorithm


- name: AUDIT - 5.2.14 - Ensure system-wide crypto policy is not over-ridden
  shell: "sh {{ role_path }}/files/5.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_14
  failed_when: "results_5_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.14 - Ensure system-wide crypto policy is not over-ridden
  debug: msg="rc={{ results_5_2_14.rc }} :- results={{ results_5_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.14,Ensure system-wide crypto policy is not over-ridden,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.15 - Ensure SSH warning banner is configured
#  Profile :  Level 1 - Server
#  Description :  The `Banner` parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.
#  Rationale Statement :  Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.


- name: AUDIT - 5.2.15 - Ensure SSH warning banner is configured
  shell: "sh {{ role_path }}/files/5.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_15
  failed_when: "results_5_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.15 - Ensure SSH warning banner is configured
  debug: msg="rc={{ results_5_2_15.rc }} :- results={{ results_5_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.15,Ensure SSH warning banner is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.15 - Ensure SSH warning banner is configured
#  Profile :  Level 1 - Workstation
#  Description :  The `Banner` parameter specifies a file whose contents must be sent to the remote user before authentication is permitted. By default, no banner is displayed.
#  Rationale Statement :  Banners are used to warn connecting users of the particular site's policy regarding connection. Presenting a warning message prior to the normal user login may assist the prosecution of trespassers on the computer system.


- name: AUDIT - 5.2.15 - Ensure SSH warning banner is configured
  shell: "sh {{ role_path }}/files/5.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_15
  failed_when: "results_5_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.15 - Ensure SSH warning banner is configured
  debug: msg="rc={{ results_5_2_15.rc }} :- results={{ results_5_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.15,Ensure SSH warning banner is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
#  Profile :  Level 1 - Server
#  Description :  The `MaxAuthTries` parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the `syslog` file detailing the login failure.
#  Rationale Statement :  Setting the `MaxAuthTries` parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.


- name: AUDIT - 5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
  shell: "sh {{ role_path }}/files/5.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_16
  failed_when: "results_5_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
  debug: msg="rc={{ results_5_2_16.rc }} :- results={{ results_5_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.16,Ensure SSH MaxAuthTries is set to 4 or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
#  Profile :  Level 1 - Workstation
#  Description :  The `MaxAuthTries` parameter specifies the maximum number of authentication attempts permitted per connection. When the login failure count reaches half the number, error messages will be written to the `syslog` file detailing the login failure.
#  Rationale Statement :  Setting the `MaxAuthTries` parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. While the recommended setting is 4, set the number based on site policy.


- name: AUDIT - 5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
  shell: "sh {{ role_path }}/files/5.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_16
  failed_when: "results_5_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.16 - Ensure SSH MaxAuthTries is set to 4 or less
  debug: msg="rc={{ results_5_2_16.rc }} :- results={{ results_5_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.16,Ensure SSH MaxAuthTries is set to 4 or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.17 - Ensure SSH MaxStartups is configured
#  Profile :  Level 1 - Server
#  Description :  The `MaxStartups` parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.
#  Rationale Statement :  To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.


- name: AUDIT - 5.2.17 - Ensure SSH MaxStartups is configured
  shell: "sh {{ role_path }}/files/5.2.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_17
  failed_when: "results_5_2_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.17 - Ensure SSH MaxStartups is configured
  debug: msg="rc={{ results_5_2_17.rc }} :- results={{ results_5_2_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.17,Ensure SSH MaxStartups is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.17 - Ensure SSH MaxStartups is configured
#  Profile :  Level 1 - Workstation
#  Description :  The `MaxStartups` parameter specifies the maximum number of concurrent unauthenticated connections to the SSH daemon.
#  Rationale Statement :  To protect a system from denial of service due to a large number of pending authentication connection attempts, use the rate limiting function of MaxStartups to protect availability of sshd logins and prevent overwhelming the daemon.


- name: AUDIT - 5.2.17 - Ensure SSH MaxStartups is configured
  shell: "sh {{ role_path }}/files/5.2.17_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_17
  failed_when: "results_5_2_17.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_17.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.17 - Ensure SSH MaxStartups is configured
  debug: msg="rc={{ results_5_2_17.rc }} :- results={{ results_5_2_17.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.17,Ensure SSH MaxStartups is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.18 - Ensure SSH MaxSessions is set to 10 or less
#  Profile :  Level 1 - Server
#  Description :  The `MaxSessions` parameter specifies the maximum number of open sessions permitted from a given connection.
#  Rationale Statement :  To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.


- name: AUDIT - 5.2.18 - Ensure SSH MaxSessions is set to 10 or less
  shell: "sh {{ role_path }}/files/5.2.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_18
  failed_when: "results_5_2_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.18 - Ensure SSH MaxSessions is set to 10 or less
  debug: msg="rc={{ results_5_2_18.rc }} :- results={{ results_5_2_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.18,Ensure SSH MaxSessions is set to 10 or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.18 - Ensure SSH MaxSessions is set to 10 or less
#  Profile :  Level 1 - Workstation
#  Description :  The `MaxSessions` parameter specifies the maximum number of open sessions permitted from a given connection.
#  Rationale Statement :  To protect a system from denial of service due to a large number of concurrent sessions, use the rate limiting function of MaxSessions to protect availability of sshd logins and prevent overwhelming the daemon.


- name: AUDIT - 5.2.18 - Ensure SSH MaxSessions is set to 10 or less
  shell: "sh {{ role_path }}/files/5.2.18_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_18
  failed_when: "results_5_2_18.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_18.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.18 - Ensure SSH MaxSessions is set to 10 or less
  debug: msg="rc={{ results_5_2_18.rc }} :- results={{ results_5_2_18.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.18,Ensure SSH MaxSessions is set to 10 or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
#  Profile :  Level 1 - Server
#  Description :  The `LoginGraceTime` parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.
#  Rationale Statement :  Setting the `LoginGraceTime` parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.


- name: AUDIT - 5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
  shell: "sh {{ role_path }}/files/5.2.19_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_19
  failed_when: "results_5_2_19.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_19.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
  debug: msg="rc={{ results_5_2_19.rc }} :- results={{ results_5_2_19.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.19,Ensure SSH LoginGraceTime is set to one minute or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
#  Profile :  Level 1 - Workstation
#  Description :  The `LoginGraceTime` parameter specifies the time allowed for successful authentication to the SSH server. The longer the Grace period is the more open unauthenticated connections can exist. Like other session controls in this session the Grace Period should be limited to appropriate organizational limits to ensure the service is available for needed access.
#  Rationale Statement :  Setting the `LoginGraceTime` parameter to a low number will minimize the risk of successful brute force attacks to the SSH server. It will also limit the number of concurrent unauthenticated connections While the recommended setting is 60 seconds (1 Minute), set the number based on site policy.


- name: AUDIT - 5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
  shell: "sh {{ role_path }}/files/5.2.19_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_19
  failed_when: "results_5_2_19.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_19.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.19 - Ensure SSH LoginGraceTime is set to one minute or less
  debug: msg="rc={{ results_5_2_19.rc }} :- results={{ results_5_2_19.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.19,Ensure SSH LoginGraceTime is set to one minute or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.2.20 - Ensure SSH Idle Timeout Interval is configured
#  Profile :  Level 1 - Server
#  Description :  **NOTE:** To clarify, the two settings described below are only meant for idle connections from a protocol perspective and not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not, and never had, intentionally the capability to drop idle users. In SSH versions before `8.2p1` there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in `8.2p1` and thus may no longer be abused disconnect idle users.
# 
# The two options `ClientAliveInterval` and `ClientAliveCountMax` control the timeout of SSH sessions. Taken directly from `man 5 sshd_config`:
# 
# - `ClientAliveInterval` Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.
# 
# - `ClientAliveCountMax` Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en‐abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive.
# The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.
#  Rationale Statement :  In order to prevent resource exhaustion, appropriate values should be set for both `ClientAliveInterval` and `ClientAliveCountMax`. Specifically, looking at the source code, `ClientAliveCountMax` must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinitely, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.
# 
# The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.


- name: AUDIT - 5.2.20 - Ensure SSH Idle Timeout Interval is configured
  shell: "sh {{ role_path }}/files/5.2.20_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_20
  failed_when: "results_5_2_20.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_20.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.2.20 - Ensure SSH Idle Timeout Interval is configured
  debug: msg="rc={{ results_5_2_20.rc }} :- results={{ results_5_2_20.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.20,Ensure SSH Idle Timeout Interval is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.2.20 - Ensure SSH Idle Timeout Interval is configured
#  Profile :  Level 1 - Workstation
#  Description :  **NOTE:** To clarify, the two settings described below are only meant for idle connections from a protocol perspective and not meant to check if the user is active or not. An idle user does not mean an idle connection. SSH does not, and never had, intentionally the capability to drop idle users. In SSH versions before `8.2p1` there was a bug that caused these values to behave in such a manner that they were abused to disconnect idle users. This bug has been resolved in `8.2p1` and thus may no longer be abused disconnect idle users.
# 
# The two options `ClientAliveInterval` and `ClientAliveCountMax` control the timeout of SSH sessions. Taken directly from `man 5 sshd_config`:
# 
# - `ClientAliveInterval` Sets a timeout interval in seconds after which if no data has been received from the client, sshd(8) will send a message through the encrypted channel to request a response from the client. The default is 0, indicating that these messages will not be sent to the client.
# 
# - `ClientAliveCountMax` Sets the number of client alive messages which may be sent without sshd(8) receiving any messages back from the client. If this threshold is reached while client alive messages are being sent, sshd will disconnect the client, terminating the session. It is important to note that the use of client alive messages is very different from TCPKeepAlive. The client alive messages are sent through the encrypted channel and therefore will not be spoofable. The TCP keepalive option en‐abled by TCPKeepAlive is spoofable. The client alive mechanism is valuable when the client or server depend on knowing when a connection has become unresponsive.
# The default value is 3. If ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default, unresponsive SSH clients will be disconnected after approximately 45 seconds. Setting a zero ClientAliveCountMax disables connection termination.
#  Rationale Statement :  In order to prevent resource exhaustion, appropriate values should be set for both `ClientAliveInterval` and `ClientAliveCountMax`. Specifically, looking at the source code, `ClientAliveCountMax` must be greater than zero in order to utilize the ability of SSH to drop idle connections. If connections are allowed to stay open indefinitely, this can potentially be used as a DDOS attack or simple resource exhaustion could occur over unreliable networks.
# 
# The example set here is a 45 second timeout. Consult your site policy for network timeouts and apply as appropriate.


- name: AUDIT - 5.2.20 - Ensure SSH Idle Timeout Interval is configured
  shell: "sh {{ role_path }}/files/5.2.20_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_2_20
  failed_when: "results_5_2_20.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_2_20.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.2.20 - Ensure SSH Idle Timeout Interval is configured
  debug: msg="rc={{ results_5_2_20.rc }} :- results={{ results_5_2_20.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.2.20,Ensure SSH Idle Timeout Interval is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.1 - Ensure sudo is installed
#  Profile :  Level 1 - Server
#  Description :  `sudo` allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.
#  Rationale Statement :  `sudo` supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the `sudo` front end. The default security policy is `sudoers`, which is configured via the file `/etc/sudoers` and any entries in `/etc/sudoers.d`.
# 
# The security policy determines what privileges, if any, a user has to run `sudo`. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, `sudo` will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.


- name: AUDIT - 5.3.1 - Ensure sudo is installed
  shell: "sh {{ role_path }}/files/5.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_1
  failed_when: "results_5_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.1 - Ensure sudo is installed
  debug: msg="rc={{ results_5_3_1.rc }} :- results={{ results_5_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.1,Ensure sudo is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.1 - Ensure sudo is installed
#  Profile :  Level 1 - Workstation
#  Description :  `sudo` allows a permitted user to execute a command as the superuser or another user, as specified by the security policy. The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.
#  Rationale Statement :  `sudo` supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the `sudo` front end. The default security policy is `sudoers`, which is configured via the file `/etc/sudoers` and any entries in `/etc/sudoers.d`.
# 
# The security policy determines what privileges, if any, a user has to run `sudo`. The policy may require that users authenticate themselves with a password or another authentication mechanism. If authentication is required, `sudo` will exit if the user's password is not entered within a configurable time limit. This limit is policy-specific.


- name: AUDIT - 5.3.1 - Ensure sudo is installed
  shell: "sh {{ role_path }}/files/5.3.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_1
  failed_when: "results_5_3_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.1 - Ensure sudo is installed
  debug: msg="rc={{ results_5_3_1.rc }} :- results={{ results_5_3_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.1,Ensure sudo is installed,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.2 - Ensure sudo commands use pty
#  Profile :  Level 1 - Server
#  Description :  `sudo` can be configured to run only from a pseudo terminal (`pseudo-pty`).
#  Rationale Statement :  Attackers can run a malicious program using `sudo` which would fork a background process that remains even when the main program has finished executing.


- name: AUDIT - 5.3.2 - Ensure sudo commands use pty
  shell: "sh {{ role_path }}/files/5.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_2
  failed_when: "results_5_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.2 - Ensure sudo commands use pty
  debug: msg="rc={{ results_5_3_2.rc }} :- results={{ results_5_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.2,Ensure sudo commands use pty,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.2 - Ensure sudo commands use pty
#  Profile :  Level 1 - Workstation
#  Description :  `sudo` can be configured to run only from a pseudo terminal (`pseudo-pty`).
#  Rationale Statement :  Attackers can run a malicious program using `sudo` which would fork a background process that remains even when the main program has finished executing.


- name: AUDIT - 5.3.2 - Ensure sudo commands use pty
  shell: "sh {{ role_path }}/files/5.3.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_2
  failed_when: "results_5_3_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.2 - Ensure sudo commands use pty
  debug: msg="rc={{ results_5_3_2.rc }} :- results={{ results_5_3_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.2,Ensure sudo commands use pty,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.3 - Ensure sudo log file exists
#  Profile :  Level 1 - Server
#  Description :  sudo can use a custom log file
#  Rationale Statement :  A sudo log file simplifies auditing of sudo commands


- name: AUDIT - 5.3.3 - Ensure sudo log file exists
  shell: "sh {{ role_path }}/files/5.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_3
  failed_when: "results_5_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.3 - Ensure sudo log file exists
  debug: msg="rc={{ results_5_3_3.rc }} :- results={{ results_5_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.3,Ensure sudo log file exists,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.3 - Ensure sudo log file exists
#  Profile :  Level 1 - Workstation
#  Description :  sudo can use a custom log file
#  Rationale Statement :  A sudo log file simplifies auditing of sudo commands


- name: AUDIT - 5.3.3 - Ensure sudo log file exists
  shell: "sh {{ role_path }}/files/5.3.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_3
  failed_when: "results_5_3_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.3 - Ensure sudo log file exists
  debug: msg="rc={{ results_5_3_3.rc }} :- results={{ results_5_3_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.3,Ensure sudo log file exists,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.4 - Ensure users must provide password for escalation
#  Profile :  Level 2 - Server
#  Description :  The operating system must be configured so that users must provide a password for privilege escalation.
#  Rationale Statement :  Without re-authentication, users may access resources or perform tasks for which they do not have authorization. 
# 
# When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.


- name: AUDIT - 5.3.4 - Ensure users must provide password for escalation
  shell: "sh {{ role_path }}/files/5.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_4
  failed_when: "results_5_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - RESULTS - 5.3.4 - Ensure users must provide password for escalation
  debug: msg="rc={{ results_5_3_4.rc }} :- results={{ results_5_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.4,Ensure users must provide password for escalation,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-server
    - section5


####################################################
#  Title  -  5.3.4 - Ensure users must provide password for escalation
#  Profile :  Level 2 - Workstation
#  Description :  The operating system must be configured so that users must provide a password for privilege escalation.
#  Rationale Statement :  Without re-authentication, users may access resources or perform tasks for which they do not have authorization. 
# 
# When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.


- name: AUDIT - 5.3.4 - Ensure users must provide password for escalation
  shell: "sh {{ role_path }}/files/5.3.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_4
  failed_when: "results_5_3_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.4 - Ensure users must provide password for escalation
  debug: msg="rc={{ results_5_3_4.rc }} :- results={{ results_5_3_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level2-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.4,Ensure users must provide password for escalation,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level2-workstation
    - section5


####################################################
#  Title  -  5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
#  Profile :  Level 1 - Server
#  Description :  The operating system must be configured so that users must re-authenticate for privilege escalation.
#  Rationale Statement :  Without re-authentication, users may access resources or perform tasks for which they do not have authorization. 
# 
# When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.


- name: AUDIT - 5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
  shell: "sh {{ role_path }}/files/5.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_5
  failed_when: "results_5_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
  debug: msg="rc={{ results_5_3_5.rc }} :- results={{ results_5_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.5,Ensure re-authentication for privilege escalation is not disabled globally,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
#  Profile :  Level 1 - Workstation
#  Description :  The operating system must be configured so that users must re-authenticate for privilege escalation.
#  Rationale Statement :  Without re-authentication, users may access resources or perform tasks for which they do not have authorization. 
# 
# When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.


- name: AUDIT - 5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
  shell: "sh {{ role_path }}/files/5.3.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_5
  failed_when: "results_5_3_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.5 - Ensure re-authentication for privilege escalation is not disabled globally
  debug: msg="rc={{ results_5_3_5.rc }} :- results={{ results_5_3_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.5,Ensure re-authentication for privilege escalation is not disabled globally,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.6 - Ensure sudo authentication timeout is configured correctly
#  Profile :  Level 1 - Server
#  Description :  `sudo` caches used credentials for a default of 5 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.
#  Rationale Statement :  Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.


- name: AUDIT - 5.3.6 - Ensure sudo authentication timeout is configured correctly
  shell: "sh {{ role_path }}/files/5.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_6
  failed_when: "results_5_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.6 - Ensure sudo authentication timeout is configured correctly
  debug: msg="rc={{ results_5_3_6.rc }} :- results={{ results_5_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.6,Ensure sudo authentication timeout is configured correctly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.6 - Ensure sudo authentication timeout is configured correctly
#  Profile :  Level 1 - Workstation
#  Description :  `sudo` caches used credentials for a default of 5 minutes. This is for ease of use when there are multiple administrative tasks to perform. The timeout can be modified to suit local security policies.
#  Rationale Statement :  Setting a timeout value reduces the window of opportunity for unauthorized privileged access to another user.


- name: AUDIT - 5.3.6 - Ensure sudo authentication timeout is configured correctly
  shell: "sh {{ role_path }}/files/5.3.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_6
  failed_when: "results_5_3_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.6 - Ensure sudo authentication timeout is configured correctly
  debug: msg="rc={{ results_5_3_6.rc }} :- results={{ results_5_3_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.6,Ensure sudo authentication timeout is configured correctly,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.3.7 - Ensure access to the su command is restricted
#  Profile :  Level 1 - Server
#  Description :  The `su` command allows a user to run a command or shell as another user. The program has been superseded by `sudo`, which allows for more granular control over privileged access. Normally, the `su` command can be executed by any user. By uncommenting the `pam_wheel.so` statement in `/etc/pam.d/su`, the `su` command will only allow users in a specific groups to execute `su`. This group should be empty to reinforce the use of `sudo` for privileged access.
#  Rationale Statement :  Restricting the use of `su` , and using `sudo` in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via `sudo` , whereas `su` can only record that a user executed the `su` program.


- name: AUDIT - 5.3.7 - Ensure access to the su command is restricted
  shell: "sh {{ role_path }}/files/5.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_7
  failed_when: "results_5_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.3.7 - Ensure access to the su command is restricted
  debug: msg="rc={{ results_5_3_7.rc }} :- results={{ results_5_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.7,Ensure access to the su command is restricted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.3.7 - Ensure access to the su command is restricted
#  Profile :  Level 1 - Workstation
#  Description :  The `su` command allows a user to run a command or shell as another user. The program has been superseded by `sudo`, which allows for more granular control over privileged access. Normally, the `su` command can be executed by any user. By uncommenting the `pam_wheel.so` statement in `/etc/pam.d/su`, the `su` command will only allow users in a specific groups to execute `su`. This group should be empty to reinforce the use of `sudo` for privileged access.
#  Rationale Statement :  Restricting the use of `su` , and using `sudo` in its place, provides system administrators better control of the escalation of user privileges to execute privileged commands. The sudo utility also provides a better logging and audit mechanism, as it can log each command executed via `sudo` , whereas `su` can only record that a user executed the `su` program.


- name: AUDIT - 5.3.7 - Ensure access to the su command is restricted
  shell: "sh {{ role_path }}/files/5.3.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_3_7
  failed_when: "results_5_3_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_3_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.3.7 - Ensure access to the su command is restricted
  debug: msg="rc={{ results_5_3_7.rc }} :- results={{ results_5_3_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.3.7,Ensure access to the su command is restricted,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.4.1 - Ensure custom authselect profile is used
#  Profile :  Level 1 - Server
#  Description :  A custom profile can be created by copying and customizing one of the default profiles. The default profiles include: sssd, winbind, or the nis. This profile can then be customized to follow site specific requirements.
# 
# You can select a profile for the authselect utility for a specific host. The profile will be applied to every user logging into the host.
#  Rationale Statement :  A custom profile is required to customize many of the pam options.
# 
# When you deploy a profile, the profile is applied to every user logging into the given host


- name: AUDIT - 5.4.1 - Ensure custom authselect profile is used
  shell: "sh {{ role_path }}/files/5.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_4_1
  failed_when: "results_5_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.4.1 - Ensure custom authselect profile is used
  debug: msg="rc={{ results_5_4_1.rc }} :- results={{ results_5_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.4.1,Ensure custom authselect profile is used,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section5


####################################################
#  Title  -  5.4.1 - Ensure custom authselect profile is used
#  Profile :  Level 1 - Workstation
#  Description :  A custom profile can be created by copying and customizing one of the default profiles. The default profiles include: sssd, winbind, or the nis. This profile can then be customized to follow site specific requirements.
# 
# You can select a profile for the authselect utility for a specific host. The profile will be applied to every user logging into the host.
#  Rationale Statement :  A custom profile is required to customize many of the pam options.
# 
# When you deploy a profile, the profile is applied to every user logging into the given host


- name: AUDIT - 5.4.1 - Ensure custom authselect profile is used
  shell: "sh {{ role_path }}/files/5.4.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_4_1
  failed_when: "results_5_4_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_4_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.4.1 - Ensure custom authselect profile is used
  debug: msg="rc={{ results_5_4_1.rc }} :- results={{ results_5_4_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.4.1,Ensure custom authselect profile is used,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section5


####################################################
#  Title  -  5.4.2 - Ensure authselect includes with-faillock
#  Profile :  Level 1 - Server
#  Description :  The `pam_faillock.so` module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than the configured number of consecutive failed authentications (this is defined by the `deny` parameter in the faillock configuration). It stores the failure records into per-user files in the tally directory.
#  Rationale Statement :  Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.


- name: AUDIT - 5.4.2 - Ensure authselect includes with-faillock
  shell: "sh {{ role_path }}/files/5.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_4_2
  failed_when: "results_5_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.4.2 - Ensure authselect includes with-faillock
  debug: msg="rc={{ results_5_4_2.rc }} :- results={{ results_5_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.4.2,Ensure authselect includes with-faillock,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.4.2 - Ensure authselect includes with-faillock
#  Profile :  Level 1 - Workstation
#  Description :  The `pam_faillock.so` module maintains a list of failed authentication attempts per user during a specified interval and locks the account in case there were more than the configured number of consecutive failed authentications (this is defined by the `deny` parameter in the faillock configuration). It stores the failure records into per-user files in the tally directory.
#  Rationale Statement :  Locking out user IDs after n unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.


- name: AUDIT - 5.4.2 - Ensure authselect includes with-faillock
  shell: "sh {{ role_path }}/files/5.4.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_4_2
  failed_when: "results_5_4_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_4_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.4.2 - Ensure authselect includes with-faillock
  debug: msg="rc={{ results_5_4_2.rc }} :- results={{ results_5_4_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.4.2,Ensure authselect includes with-faillock,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.5.1 - Ensure password creation requirements are configured
#  Profile :  Level 1 - Server
#  Description :  The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.
# 
# - `try_first_pass` - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.
# - `retry=3` - Allow 3 tries before sending back a failure.
# - `minlen=14` - password must be 14 characters or more
# 
#  **Either of the following can be used to enforce complex passwords:**
# 
# - `minclass=4` - provide at least four classes of characters for the new password
# 
# **OR**
# 
# - `dcredit=-1` - provide at least one digit
# - `ucredit=-1` - provide at least one uppercase character
# - `ocredit=-1` - provide at least one special character
# - `lcredit=-1` - provide at least one lowercase character
# 
# The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies
#  Rationale Statement :  Strong passwords protect systems from being hacked through brute force methods.


- name: AUDIT - 5.5.1 - Ensure password creation requirements are configured
  shell: "sh {{ role_path }}/files/5.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_1
  failed_when: "results_5_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.5.1 - Ensure password creation requirements are configured
  debug: msg="rc={{ results_5_5_1.rc }} :- results={{ results_5_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.1,Ensure password creation requirements are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.5.1 - Ensure password creation requirements are configured
#  Profile :  Level 1 - Workstation
#  Description :  The pam_pwquality.so module checks the strength of passwords. It performs checks such as making sure a password is not a dictionary word, it is a certain length, contains a mix of characters (e.g. alphabet, numeric, other) and more. The following are definitions of the pam_pwquality.so options.
# 
# - `try_first_pass` - retrieve the password from a previous stacked PAM module. If not available, then prompt the user for a password.
# - `retry=3` - Allow 3 tries before sending back a failure.
# - `minlen=14` - password must be 14 characters or more
# 
#  **Either of the following can be used to enforce complex passwords:**
# 
# - `minclass=4` - provide at least four classes of characters for the new password
# 
# **OR**
# 
# - `dcredit=-1` - provide at least one digit
# - `ucredit=-1` - provide at least one uppercase character
# - `ocredit=-1` - provide at least one special character
# - `lcredit=-1` - provide at least one lowercase character
# 
# The settings shown above are one possible policy. Alter these values to conform to your own organization's password policies
#  Rationale Statement :  Strong passwords protect systems from being hacked through brute force methods.


- name: AUDIT - 5.5.1 - Ensure password creation requirements are configured
  shell: "sh {{ role_path }}/files/5.5.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_1
  failed_when: "results_5_5_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.5.1 - Ensure password creation requirements are configured
  debug: msg="rc={{ results_5_5_1.rc }} :- results={{ results_5_5_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.1,Ensure password creation requirements are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.5.2 - Ensure lockout for failed password attempts is configured
#  Profile :  Level 1 - Server
#  Description :  Lock out users after _n_ unsuccessful consecutive login attempts. 
# - `deny=<n>` - Number of attempts before the account is locked
# - `unlock_time=<n>` - Time in seconds before the account is unlocked 
# 
# **Note:** The maximum configurable value for `unlock_time` is `604800`
#  Rationale Statement :  Locking out user IDs after _n_ unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.


- name: AUDIT - 5.5.2 - Ensure lockout for failed password attempts is configured
  shell: "sh {{ role_path }}/files/5.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_2
  failed_when: "results_5_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.5.2 - Ensure lockout for failed password attempts is configured
  debug: msg="rc={{ results_5_5_2.rc }} :- results={{ results_5_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.2,Ensure lockout for failed password attempts is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.5.2 - Ensure lockout for failed password attempts is configured
#  Profile :  Level 1 - Workstation
#  Description :  Lock out users after _n_ unsuccessful consecutive login attempts. 
# - `deny=<n>` - Number of attempts before the account is locked
# - `unlock_time=<n>` - Time in seconds before the account is unlocked 
# 
# **Note:** The maximum configurable value for `unlock_time` is `604800`
#  Rationale Statement :  Locking out user IDs after _n_ unsuccessful consecutive login attempts mitigates brute force password attacks against your systems.


- name: AUDIT - 5.5.2 - Ensure lockout for failed password attempts is configured
  shell: "sh {{ role_path }}/files/5.5.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_2
  failed_when: "results_5_5_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.5.2 - Ensure lockout for failed password attempts is configured
  debug: msg="rc={{ results_5_5_2.rc }} :- results={{ results_5_5_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.2,Ensure lockout for failed password attempts is configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.5.3 - Ensure password reuse is limited
#  Profile :  Level 1 - Server
#  Description :  The `/etc/security/opasswd` file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.
# 
# - remember=<5> - Number of old passwords to remember
#  Rationale Statement :  Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.
# 
# **Note:** These change only apply to accounts configured on the local system.


- name: AUDIT - 5.5.3 - Ensure password reuse is limited
  shell: "sh {{ role_path }}/files/5.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_3
  failed_when: "results_5_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.5.3 - Ensure password reuse is limited
  debug: msg="rc={{ results_5_5_3.rc }} :- results={{ results_5_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.3,Ensure password reuse is limited,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.5.3 - Ensure password reuse is limited
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/security/opasswd` file stores the users' old passwords and can be checked to ensure that users are not recycling recent passwords.
# 
# - remember=<5> - Number of old passwords to remember
#  Rationale Statement :  Forcing users not to reuse their past 5 passwords make it less likely that an attacker will be able to guess the password.
# 
# **Note:** These change only apply to accounts configured on the local system.


- name: AUDIT - 5.5.3 - Ensure password reuse is limited
  shell: "sh {{ role_path }}/files/5.5.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_3
  failed_when: "results_5_5_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.5.3 - Ensure password reuse is limited
  debug: msg="rc={{ results_5_5_3.rc }} :- results={{ results_5_5_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.3,Ensure password reuse is limited,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
#  Profile :  Level 1 - Server
#  Description :  A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.
#  Rationale Statement :  The SHA-512 algorithm provides stronger hashing than other hashing algorithms used for password hashing with Linux, providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.
# 
# **Note:** These changes only apply to accounts configured on the local system.


- name: AUDIT - 5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
  shell: "sh {{ role_path }}/files/5.5.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_4
  failed_when: "results_5_5_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
  debug: msg="rc={{ results_5_5_4.rc }} :- results={{ results_5_5_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.4,Ensure password hashing algorithm is SHA-512 or yescrypt,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
#  Profile :  Level 1 - Workstation
#  Description :  A cryptographic hash function converts an arbitrary-length input into a fixed length output. Password hashing performs a one-way transformation of a password, turning the password into another string, called the hashed password.
#  Rationale Statement :  The SHA-512 algorithm provides stronger hashing than other hashing algorithms used for password hashing with Linux, providing additional protection to the system by increasing the level of effort for an attacker to successfully determine passwords.
# 
# **Note:** These changes only apply to accounts configured on the local system.


- name: AUDIT - 5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
  shell: "sh {{ role_path }}/files/5.5.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_5_4
  failed_when: "results_5_5_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_5_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.5.4 - Ensure password hashing algorithm is SHA-512 or yescrypt
  debug: msg="rc={{ results_5_5_4.rc }} :- results={{ results_5_5_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.5.4,Ensure password hashing algorithm is SHA-512 or yescrypt,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.2 - Ensure system accounts are secured
#  Profile :  Level 1 - Server
#  Description :  There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.
#  Rationale Statement :  It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the `nologin` shell. This prevents the account from potentially being used to run any commands.


- name: AUDIT - 5.6.2 - Ensure system accounts are secured
  shell: "sh {{ role_path }}/files/5.6.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_2
  failed_when: "results_5_6_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.2 - Ensure system accounts are secured
  debug: msg="rc={{ results_5_6_2.rc }} :- results={{ results_5_6_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.2,Ensure system accounts are secured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.2 - Ensure system accounts are secured
#  Profile :  Level 1 - Workstation
#  Description :  There are a number of accounts provided with most distributions that are used to manage applications and are not intended to provide an interactive shell. Furthermore, a user may add special accounts that are not intended to provide an interactive shell.
#  Rationale Statement :  It is important to make sure that accounts that are not being used by regular users are prevented from being used to provide an interactive shell. By default, most distributions set the password field for these accounts to an invalid string, but it is also recommended that the shell field in the password file be set to the `nologin` shell. This prevents the account from potentially being used to run any commands.


- name: AUDIT - 5.6.2 - Ensure system accounts are secured
  shell: "sh {{ role_path }}/files/5.6.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_2
  failed_when: "results_5_6_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.2 - Ensure system accounts are secured
  debug: msg="rc={{ results_5_6_2.rc }} :- results={{ results_5_6_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.2,Ensure system accounts are secured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.3 - Ensure default user shell timeout is 900 seconds or less
#  Profile :  Level 1 - Server
#  Description :  `TMOUT` is an environmental setting that determines the timeout of a shell in seconds.
# - TMOUT=_n_ - Sets the shell timeout to _n_ seconds. A setting of `TMOUT=0` disables timeout.
# - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.
# - export TMOUT - exports the TMOUT variable 
# 
# **System Wide Shell Configuration Files:**
# - `/etc/profile` - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the `.bash_profile`, however this file is used to set an initial PATH or PS1 for all shell users of the system. **is only executed for interactive *login* shells, or shells executed with the --login parameter.** 
# - `/etc/profile.d` - `/etc/profile` will execute the scripts within `/etc/profile.d/*.sh`. It is recommended to place your configuration in a shell script within `/etc/profile.d` to set your own system wide environmental variables.
# - `/etc/bashrc` - System wide version of `.bashrc`. In Fedora derived distributions, `/etc/bashrc` also invokes /etc/profile.d/*.sh if *non-login* shell, but redirects output to `/dev/null` if *non-interactive.* **Is only executed for *interactive* shells or if `BASH_ENV` is set to `/etc/bashrc`.**
#  Rationale Statement :  Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.


- name: AUDIT - 5.6.3 - Ensure default user shell timeout is 900 seconds or less
  shell: "sh {{ role_path }}/files/5.6.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_3
  failed_when: "results_5_6_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.3 - Ensure default user shell timeout is 900 seconds or less
  debug: msg="rc={{ results_5_6_3.rc }} :- results={{ results_5_6_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.3,Ensure default user shell timeout is 900 seconds or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.3 - Ensure default user shell timeout is 900 seconds or less
#  Profile :  Level 1 - Workstation
#  Description :  `TMOUT` is an environmental setting that determines the timeout of a shell in seconds.
# - TMOUT=_n_ - Sets the shell timeout to _n_ seconds. A setting of `TMOUT=0` disables timeout.
# - readonly TMOUT- Sets the TMOUT environmental variable as readonly, preventing unwanted modification during run-time.
# - export TMOUT - exports the TMOUT variable 
# 
# **System Wide Shell Configuration Files:**
# - `/etc/profile` - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the `.bash_profile`, however this file is used to set an initial PATH or PS1 for all shell users of the system. **is only executed for interactive *login* shells, or shells executed with the --login parameter.** 
# - `/etc/profile.d` - `/etc/profile` will execute the scripts within `/etc/profile.d/*.sh`. It is recommended to place your configuration in a shell script within `/etc/profile.d` to set your own system wide environmental variables.
# - `/etc/bashrc` - System wide version of `.bashrc`. In Fedora derived distributions, `/etc/bashrc` also invokes /etc/profile.d/*.sh if *non-login* shell, but redirects output to `/dev/null` if *non-interactive.* **Is only executed for *interactive* shells or if `BASH_ENV` is set to `/etc/bashrc`.**
#  Rationale Statement :  Setting a timeout value reduces the window of opportunity for unauthorized user access to another user's shell session that has been left unattended. It also ends the inactive session and releases the resources associated with that session.


- name: AUDIT - 5.6.3 - Ensure default user shell timeout is 900 seconds or less
  shell: "sh {{ role_path }}/files/5.6.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_3
  failed_when: "results_5_6_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.3 - Ensure default user shell timeout is 900 seconds or less
  debug: msg="rc={{ results_5_6_3.rc }} :- results={{ results_5_6_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.3,Ensure default user shell timeout is 900 seconds or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.4 - Ensure default group for the root account is GID 0
#  Profile :  Level 1 - Server
#  Description :  The `usermod` command can be used to specify which group the `root` account belongs to. This affects permissions of files that are created by the `root` account.
#  Rationale Statement :  Using GID 0 for the `root` account helps prevent `root` -owned files from accidentally becoming accessible to non-privileged users.


- name: AUDIT - 5.6.4 - Ensure default group for the root account is GID 0
  shell: "sh {{ role_path }}/files/5.6.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_4
  failed_when: "results_5_6_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.4 - Ensure default group for the root account is GID 0
  debug: msg="rc={{ results_5_6_4.rc }} :- results={{ results_5_6_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.4,Ensure default group for the root account is GID 0,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.4 - Ensure default group for the root account is GID 0
#  Profile :  Level 1 - Workstation
#  Description :  The `usermod` command can be used to specify which group the `root` account belongs to. This affects permissions of files that are created by the `root` account.
#  Rationale Statement :  Using GID 0 for the `root` account helps prevent `root` -owned files from accidentally becoming accessible to non-privileged users.


- name: AUDIT - 5.6.4 - Ensure default group for the root account is GID 0
  shell: "sh {{ role_path }}/files/5.6.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_4
  failed_when: "results_5_6_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.4 - Ensure default group for the root account is GID 0
  debug: msg="rc={{ results_5_6_4.rc }} :- results={{ results_5_6_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.4,Ensure default group for the root account is GID 0,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.5 - Ensure default user umask is 027 or more restrictive
#  Profile :  Level 1 - Server
#  Description :  The user file-creation mode mask (`umask`) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (`rwxrwxrwx`), and for any newly created file it is 0666 (`rw-rw-rw-`). The `umask` modifies the default Linux permissions by restricting (masking) these permissions. The `umask` is not simply subtracted, but is processed bitwise. Bits set in the `umask` are cleared in the resulting file mode.
# 
# `umask` can be set with either `octal` or `Symbolic` values:
# - `Octal` (Numeric) Value - Represented by either three or four digits. ie `umask 0027` or `umask 027`. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
# - `Symbolic` Value - Represented by a comma separated list for User `u`, group `g`, and world/other `o`. The permissions listed are not masked by `umask`. ie a `umask` set by `umask u=rwx,g=rx,o=` is the `Symbolic` equivalent of the `Octal` `umask 027`. This `umask` would set a newly created directory with file mode `drwxr-x---` and a newly created file with file mode `rw-r-----`.
# 
# The default `umask` can be set to use the `pam_umask` module or in a `System Wide Shell Configuration File`. The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default `umask` by adding the `umask` command into a `User Shell Configuration File`, ( `.bash_profile` or `.bashrc`), in their home directory.
# 
# Setting the default umask:
# - pam_umask module:
#  - will set the umask according to the system default in `/etc/login.defs` and user settings, solving the problem of different `umask` settings with different shells, display managers, remote sessions etc.
#  - `umask=<mask>` value in the `/etc/login.defs` file is interpreted as Octal
#  - Setting `USERGROUPS_ENAB` to yes in `/etc/login.defs` (default):
#  - will enable setting of the `umask` group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the `uid` is the same as `gid`, and `username` is the same as the `<primary group name>`
#  - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user
# - `System Wide Shell Configuration File`:
#  - `/etc/profile` - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the `.bash_profile`, however this file is used to set an initial PATH or PS1 for all shell users of the system. **is only executed for interactive *login* shells, or shells executed with the --login parameter.** 
#  - `/etc/profile.d` - `/etc/profile` will execute the scripts within `/etc/profile.d/*.sh`. It is recommended to place your configuration in a shell script within `/etc/profile.d` to set your own system wide environmental variables.
#  - `/etc/bashrc` - System wide version of `.bashrc`. In Fedora derived distributions, `etc/bashrc` also invokes /etc/profile.d/*.sh if *non-login* shell, but redirects output to `/dev/null` if *non-interactive.* **Is only executed for *interactive* shells or if `BASH_ENV` is set to `/etc/bashrc`.**
# 
# User Shell Configuration Files:
# - `~/.bash_profile` - Is executed to configure your shell before the initial command prompt. **Is only read by login shells.**
# - `~/.bashrc` - Is executed for interactive shells. **only read by a shell that's both interactive and non-login**
#  Rationale Statement :  Setting a secure default value for `umask` ensures that users make a conscious choice about their file permissions. A permissive `umask` value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.


- name: AUDIT - 5.6.5 - Ensure default user umask is 027 or more restrictive
  shell: "sh {{ role_path }}/files/5.6.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_5
  failed_when: "results_5_6_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.5 - Ensure default user umask is 027 or more restrictive
  debug: msg="rc={{ results_5_6_5.rc }} :- results={{ results_5_6_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.5,Ensure default user umask is 027 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.5 - Ensure default user umask is 027 or more restrictive
#  Profile :  Level 1 - Workstation
#  Description :  The user file-creation mode mask (`umask`) is use to determine the file permission for newly created directories and files. In Linux, the default permissions for any newly created directory is 0777 (`rwxrwxrwx`), and for any newly created file it is 0666 (`rw-rw-rw-`). The `umask` modifies the default Linux permissions by restricting (masking) these permissions. The `umask` is not simply subtracted, but is processed bitwise. Bits set in the `umask` are cleared in the resulting file mode.
# 
# `umask` can be set with either `octal` or `Symbolic` values:
# - `Octal` (Numeric) Value - Represented by either three or four digits. ie `umask 0027` or `umask 027`. If a four digit umask is used, the first digit is ignored. The remaining three digits effect the resulting permissions for user, group, and world/other respectively.
# - `Symbolic` Value - Represented by a comma separated list for User `u`, group `g`, and world/other `o`. The permissions listed are not masked by `umask`. ie a `umask` set by `umask u=rwx,g=rx,o=` is the `Symbolic` equivalent of the `Octal` `umask 027`. This `umask` would set a newly created directory with file mode `drwxr-x---` and a newly created file with file mode `rw-r-----`.
# 
# The default `umask` can be set to use the `pam_umask` module or in a `System Wide Shell Configuration File`. The user creating the directories or files has the discretion of changing the permissions via the chmod command, or choosing a different default `umask` by adding the `umask` command into a `User Shell Configuration File`, ( `.bash_profile` or `.bashrc`), in their home directory.
# 
# Setting the default umask:
# - pam_umask module:
#  - will set the umask according to the system default in `/etc/login.defs` and user settings, solving the problem of different `umask` settings with different shells, display managers, remote sessions etc.
#  - `umask=<mask>` value in the `/etc/login.defs` file is interpreted as Octal
#  - Setting `USERGROUPS_ENAB` to yes in `/etc/login.defs` (default):
#  - will enable setting of the `umask` group bits to be the same as owner bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the `uid` is the same as `gid`, and `username` is the same as the `<primary group name>`
#  - userdel will remove the user's group if it contains no more members, and useradd will create by default a group with the name of the user
# - `System Wide Shell Configuration File`:
#  - `/etc/profile` - used to set system wide environmental variables on users shells. The variables are sometimes the same ones that are in the `.bash_profile`, however this file is used to set an initial PATH or PS1 for all shell users of the system. **is only executed for interactive *login* shells, or shells executed with the --login parameter.** 
#  - `/etc/profile.d` - `/etc/profile` will execute the scripts within `/etc/profile.d/*.sh`. It is recommended to place your configuration in a shell script within `/etc/profile.d` to set your own system wide environmental variables.
#  - `/etc/bashrc` - System wide version of `.bashrc`. In Fedora derived distributions, `etc/bashrc` also invokes /etc/profile.d/*.sh if *non-login* shell, but redirects output to `/dev/null` if *non-interactive.* **Is only executed for *interactive* shells or if `BASH_ENV` is set to `/etc/bashrc`.**
# 
# User Shell Configuration Files:
# - `~/.bash_profile` - Is executed to configure your shell before the initial command prompt. **Is only read by login shells.**
# - `~/.bashrc` - Is executed for interactive shells. **only read by a shell that's both interactive and non-login**
#  Rationale Statement :  Setting a secure default value for `umask` ensures that users make a conscious choice about their file permissions. A permissive `umask` value could result in directories or files with excessive permissions that can be read and/or written to by unauthorized users.


- name: AUDIT - 5.6.5 - Ensure default user umask is 027 or more restrictive
  shell: "sh {{ role_path }}/files/5.6.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_5
  failed_when: "results_5_6_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.5 - Ensure default user umask is 027 or more restrictive
  debug: msg="rc={{ results_5_6_5.rc }} :- results={{ results_5_6_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.5,Ensure default user umask is 027 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.6 - Ensure root password is set
#  Profile :  Level 1 - Server
#  Description :  There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.
#  Rationale Statement :  Access to `root` should be secured at all times.


- name: AUDIT - 5.6.6 - Ensure root password is set
  shell: "sh {{ role_path }}/files/5.6.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_6
  failed_when: "results_5_6_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.6 - Ensure root password is set
  debug: msg="rc={{ results_5_6_6.rc }} :- results={{ results_5_6_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.6,Ensure root password is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.6 - Ensure root password is set
#  Profile :  Level 1 - Workstation
#  Description :  There are a number of methods to access the root account directly. Without a password set any user would be able to gain access and thus control over the entire system.
#  Rationale Statement :  Access to `root` should be secured at all times.


- name: AUDIT - 5.6.6 - Ensure root password is set
  shell: "sh {{ role_path }}/files/5.6.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_6
  failed_when: "results_5_6_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.6 - Ensure root password is set
  debug: msg="rc={{ results_5_6_6.rc }} :- results={{ results_5_6_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.6,Ensure root password is set,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.1.1 - Ensure password expiration is 365 days or less
#  Profile :  Level 1 - Server
#  Description :  The `PASS_MAX_DAYS` parameter in `/etc/login.defs` allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the `PASS_MAX_DAYS` parameter be set to less than or equal to 365 days.
#  Rationale Statement :  The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.


- name: AUDIT - 5.6.1.1 - Ensure password expiration is 365 days or less
  shell: "sh {{ role_path }}/files/5.6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_1
  failed_when: "results_5_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.1.1 - Ensure password expiration is 365 days or less
  debug: msg="rc={{ results_5_6_1_1.rc }} :- results={{ results_5_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.1,Ensure password expiration is 365 days or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.1.1 - Ensure password expiration is 365 days or less
#  Profile :  Level 1 - Workstation
#  Description :  The `PASS_MAX_DAYS` parameter in `/etc/login.defs` allows an administrator to force passwords to expire once they reach a defined age. It is recommended that the `PASS_MAX_DAYS` parameter be set to less than or equal to 365 days.
#  Rationale Statement :  The window of opportunity for an attacker to leverage compromised credentials or successfully compromise credentials via an online brute force attack is limited by the age of the password. Therefore, reducing the maximum age of a password also reduces an attacker's window of opportunity.


- name: AUDIT - 5.6.1.1 - Ensure password expiration is 365 days or less
  shell: "sh {{ role_path }}/files/5.6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_1
  failed_when: "results_5_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.1.1 - Ensure password expiration is 365 days or less
  debug: msg="rc={{ results_5_6_1_1.rc }} :- results={{ results_5_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.1,Ensure password expiration is 365 days or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.1.2 - Ensure minimum days between password changes is  configured
#  Profile :  Level 1 - Server
#  Description :  The `PASS_MIN_DAYS` parameter in `/etc/login.defs` allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that `PASS_MIN_DAYS` parameter be set to 1 or more days.
#  Rationale Statement :  By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.


- name: AUDIT - 5.6.1.2 - Ensure minimum days between password changes is  configured
  shell: "sh {{ role_path }}/files/5.6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_2
  failed_when: "results_5_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.1.2 - Ensure minimum days between password changes is  configured
  debug: msg="rc={{ results_5_6_1_2.rc }} :- results={{ results_5_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.2,Ensure minimum days between password changes is  configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.1.2 - Ensure minimum days between password changes is  configured
#  Profile :  Level 1 - Workstation
#  Description :  The `PASS_MIN_DAYS` parameter in `/etc/login.defs` allows an administrator to prevent users from changing their password until a minimum number of days have passed since the last time the user changed their password. It is recommended that `PASS_MIN_DAYS` parameter be set to 1 or more days.
#  Rationale Statement :  By restricting the frequency of password changes, an administrator can prevent users from repeatedly changing their password in an attempt to circumvent password reuse controls.


- name: AUDIT - 5.6.1.2 - Ensure minimum days between password changes is  configured
  shell: "sh {{ role_path }}/files/5.6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_2
  failed_when: "results_5_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.1.2 - Ensure minimum days between password changes is  configured
  debug: msg="rc={{ results_5_6_1_2.rc }} :- results={{ results_5_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.2,Ensure minimum days between password changes is  configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.1.3 - Ensure password expiration warning days is 7 or more
#  Profile :  Level 1 - Server
#  Description :  The `PASS_WARN_AGE` parameter in `/etc/login.defs` allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the `PASS_WARN_AGE` parameter be set to 7 or more days.
#  Rationale Statement :  Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.


- name: AUDIT - 5.6.1.3 - Ensure password expiration warning days is 7 or more
  shell: "sh {{ role_path }}/files/5.6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_3
  failed_when: "results_5_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.1.3 - Ensure password expiration warning days is 7 or more
  debug: msg="rc={{ results_5_6_1_3.rc }} :- results={{ results_5_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.3,Ensure password expiration warning days is 7 or more,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.1.3 - Ensure password expiration warning days is 7 or more
#  Profile :  Level 1 - Workstation
#  Description :  The `PASS_WARN_AGE` parameter in `/etc/login.defs` allows an administrator to notify users that their password will expire in a defined number of days. It is recommended that the `PASS_WARN_AGE` parameter be set to 7 or more days.
#  Rationale Statement :  Providing an advance warning that a password will be expiring gives users time to think of a secure password. Users caught unaware may choose a simple password or write it down where it may be discovered.


- name: AUDIT - 5.6.1.3 - Ensure password expiration warning days is 7 or more
  shell: "sh {{ role_path }}/files/5.6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_3
  failed_when: "results_5_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.1.3 - Ensure password expiration warning days is 7 or more
  debug: msg="rc={{ results_5_6_1_3.rc }} :- results={{ results_5_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.3,Ensure password expiration warning days is 7 or more,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.1.4 - Ensure inactive password lock is 30 days or less
#  Profile :  Level 1 - Server
#  Description :  User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.
#  Rationale Statement :  Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.


- name: AUDIT - 5.6.1.4 - Ensure inactive password lock is 30 days or less
  shell: "sh {{ role_path }}/files/5.6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_4
  failed_when: "results_5_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.1.4 - Ensure inactive password lock is 30 days or less
  debug: msg="rc={{ results_5_6_1_4.rc }} :- results={{ results_5_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.4,Ensure inactive password lock is 30 days or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.1.4 - Ensure inactive password lock is 30 days or less
#  Profile :  Level 1 - Workstation
#  Description :  User accounts that have been inactive for over a given period of time can be automatically disabled. It is recommended that accounts that are inactive for 30 days after password expiration be disabled.
#  Rationale Statement :  Inactive accounts pose a threat to system security since the users are not logging in to notice failed login attempts or other anomalies.


- name: AUDIT - 5.6.1.4 - Ensure inactive password lock is 30 days or less
  shell: "sh {{ role_path }}/files/5.6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_4
  failed_when: "results_5_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.1.4 - Ensure inactive password lock is 30 days or less
  debug: msg="rc={{ results_5_6_1_4.rc }} :- results={{ results_5_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.4,Ensure inactive password lock is 30 days or less,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  5.6.1.5 - Ensure all users last password change date is in the past
#  Profile :  Level 1 - Server
#  Description :  All users should have a password change date in the past.
#  Rationale Statement :  If a user's recorded password change date is in the future, then they could bypass any set password expiration.


- name: AUDIT - 5.6.1.5 - Ensure all users last password change date is in the past
  shell: "sh {{ role_path }}/files/5.6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_5
  failed_when: "results_5_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - RESULTS - 5.6.1.5 - Ensure all users last password change date is in the past
  debug: msg="rc={{ results_5_6_1_5.rc }} :- results={{ results_5_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.5,Ensure all users last password change date is in the past,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section5


####################################################
#  Title  -  5.6.1.5 - Ensure all users last password change date is in the past
#  Profile :  Level 1 - Workstation
#  Description :  All users should have a password change date in the past.
#  Rationale Statement :  If a user's recorded password change date is in the future, then they could bypass any set password expiration.


- name: AUDIT - 5.6.1.5 - Ensure all users last password change date is in the past
  shell: "sh {{ role_path }}/files/5.6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_5_6_1_5
  failed_when: "results_5_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- set_fact:
    compliant_status: "{% if results_5_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - RESULTS - 5.6.1.5 - Ensure all users last password change date is in the past
  debug: msg="rc={{ results_5_6_1_5.rc }} :- results={{ results_5_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section5


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "5.6.1.5,Ensure all users last password change date is in the past,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section5


####################################################
#  Title  -  6.1.1 - Ensure permissions on /etc/passwd are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/passwd` file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.
#  Rationale Statement :  It is critical to ensure that the `/etc/passwd` file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.1 - Ensure permissions on /etc/passwd are configured
  shell: "sh {{ role_path }}/files/6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_1
  failed_when: "results_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.1 - Ensure permissions on /etc/passwd are configured
  debug: msg="rc={{ results_6_1_1.rc }} :- results={{ results_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.1,Ensure permissions on /etc/passwd are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.1 - Ensure permissions on /etc/passwd are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/passwd` file contains user account information that is used by many system utilities and therefore must be readable for these utilities to operate.
#  Rationale Statement :  It is critical to ensure that the `/etc/passwd` file is protected from unauthorized write access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.1 - Ensure permissions on /etc/passwd are configured
  shell: "sh {{ role_path }}/files/6.1.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_1
  failed_when: "results_6_1_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.1 - Ensure permissions on /etc/passwd are configured
  debug: msg="rc={{ results_6_1_1.rc }} :- results={{ results_6_1_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.1,Ensure permissions on /etc/passwd are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.2 - Ensure permissions on /etc/passwd- are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/passwd-` file contains backup user account information.
#  Rationale Statement :  It is critical to ensure that the `/etc/passwd-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.2 - Ensure permissions on /etc/passwd- are configured
  shell: "sh {{ role_path }}/files/6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_2
  failed_when: "results_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.2 - Ensure permissions on /etc/passwd- are configured
  debug: msg="rc={{ results_6_1_2.rc }} :- results={{ results_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.2,Ensure permissions on /etc/passwd- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.2 - Ensure permissions on /etc/passwd- are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/passwd-` file contains backup user account information.
#  Rationale Statement :  It is critical to ensure that the `/etc/passwd-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.2 - Ensure permissions on /etc/passwd- are configured
  shell: "sh {{ role_path }}/files/6.1.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_2
  failed_when: "results_6_1_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.2 - Ensure permissions on /etc/passwd- are configured
  debug: msg="rc={{ results_6_1_2.rc }} :- results={{ results_6_1_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.2,Ensure permissions on /etc/passwd- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.3 - Ensure permissions on /etc/group are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/group` file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.
#  Rationale Statement :  The `/etc/group` file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.


- name: AUDIT - 6.1.3 - Ensure permissions on /etc/group are configured
  shell: "sh {{ role_path }}/files/6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_3
  failed_when: "results_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.3 - Ensure permissions on /etc/group are configured
  debug: msg="rc={{ results_6_1_3.rc }} :- results={{ results_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.3,Ensure permissions on /etc/group are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.3 - Ensure permissions on /etc/group are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/group` file contains a list of all the valid groups defined in the system. The command below allows read/write access for root and read access for everyone else.
#  Rationale Statement :  The `/etc/group` file needs to be protected from unauthorized changes by non-privileged users, but needs to be readable as this information is used with many non-privileged programs.


- name: AUDIT - 6.1.3 - Ensure permissions on /etc/group are configured
  shell: "sh {{ role_path }}/files/6.1.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_3
  failed_when: "results_6_1_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.3 - Ensure permissions on /etc/group are configured
  debug: msg="rc={{ results_6_1_3.rc }} :- results={{ results_6_1_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.3,Ensure permissions on /etc/group are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.4 - Ensure permissions on /etc/group- are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/group-` file contains a backup list of all the valid groups defined in the system.
#  Rationale Statement :  It is critical to ensure that the `/etc/group-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.4 - Ensure permissions on /etc/group- are configured
  shell: "sh {{ role_path }}/files/6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_4
  failed_when: "results_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.4 - Ensure permissions on /etc/group- are configured
  debug: msg="rc={{ results_6_1_4.rc }} :- results={{ results_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.4,Ensure permissions on /etc/group- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.4 - Ensure permissions on /etc/group- are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/group-` file contains a backup list of all the valid groups defined in the system.
#  Rationale Statement :  It is critical to ensure that the `/etc/group-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.4 - Ensure permissions on /etc/group- are configured
  shell: "sh {{ role_path }}/files/6.1.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_4
  failed_when: "results_6_1_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.4 - Ensure permissions on /etc/group- are configured
  debug: msg="rc={{ results_6_1_4.rc }} :- results={{ results_6_1_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.4,Ensure permissions on /etc/group- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.5 - Ensure permissions on /etc/shadow are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/shadow` file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  If attackers can gain read access to the `/etc/shadow` file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the `/etc/shadow` file (such as expiration) could also be useful to subvert the user accounts.


- name: AUDIT - 6.1.5 - Ensure permissions on /etc/shadow are configured
  shell: "sh {{ role_path }}/files/6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_5
  failed_when: "results_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.5 - Ensure permissions on /etc/shadow are configured
  debug: msg="rc={{ results_6_1_5.rc }} :- results={{ results_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.5,Ensure permissions on /etc/shadow are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.5 - Ensure permissions on /etc/shadow are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/shadow` file is used to store the information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  If attackers can gain read access to the `/etc/shadow` file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the `/etc/shadow` file (such as expiration) could also be useful to subvert the user accounts.


- name: AUDIT - 6.1.5 - Ensure permissions on /etc/shadow are configured
  shell: "sh {{ role_path }}/files/6.1.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_5
  failed_when: "results_6_1_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.5 - Ensure permissions on /etc/shadow are configured
  debug: msg="rc={{ results_6_1_5.rc }} :- results={{ results_6_1_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.5,Ensure permissions on /etc/shadow are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.6 - Ensure permissions on /etc/shadow- are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/shadow-` file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  It is critical to ensure that the `/etc/shadow-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.6 - Ensure permissions on /etc/shadow- are configured
  shell: "sh {{ role_path }}/files/6.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_6
  failed_when: "results_6_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.6 - Ensure permissions on /etc/shadow- are configured
  debug: msg="rc={{ results_6_1_6.rc }} :- results={{ results_6_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.6,Ensure permissions on /etc/shadow- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.6 - Ensure permissions on /etc/shadow- are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/shadow-` file is used to store backup information about user accounts that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  It is critical to ensure that the `/etc/shadow-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.6 - Ensure permissions on /etc/shadow- are configured
  shell: "sh {{ role_path }}/files/6.1.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_6
  failed_when: "results_6_1_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.6 - Ensure permissions on /etc/shadow- are configured
  debug: msg="rc={{ results_6_1_6.rc }} :- results={{ results_6_1_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.6,Ensure permissions on /etc/shadow- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.7 - Ensure permissions on /etc/gshadow are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/gshadow` file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  If attackers can gain read access to the `/etc/gshadow` file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the `/etc/gshadow` file (such as group administrators) could also be useful to subvert the group.


- name: AUDIT - 6.1.7 - Ensure permissions on /etc/gshadow are configured
  shell: "sh {{ role_path }}/files/6.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_7
  failed_when: "results_6_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.7 - Ensure permissions on /etc/gshadow are configured
  debug: msg="rc={{ results_6_1_7.rc }} :- results={{ results_6_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.7,Ensure permissions on /etc/gshadow are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.7 - Ensure permissions on /etc/gshadow are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/gshadow` file is used to store the information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  If attackers can gain read access to the `/etc/gshadow` file, they can easily run a password cracking program against the hashed password to break it. Other security information that is stored in the `/etc/gshadow` file (such as group administrators) could also be useful to subvert the group.


- name: AUDIT - 6.1.7 - Ensure permissions on /etc/gshadow are configured
  shell: "sh {{ role_path }}/files/6.1.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_7
  failed_when: "results_6_1_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.7 - Ensure permissions on /etc/gshadow are configured
  debug: msg="rc={{ results_6_1_7.rc }} :- results={{ results_6_1_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.7,Ensure permissions on /etc/gshadow are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.8 - Ensure permissions on /etc/gshadow- are configured
#  Profile :  Level 1 - Server
#  Description :  The `/etc/gshadow-` file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  It is critical to ensure that the `/etc/gshadow-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.8 - Ensure permissions on /etc/gshadow- are configured
  shell: "sh {{ role_path }}/files/6.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_8
  failed_when: "results_6_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.8 - Ensure permissions on /etc/gshadow- are configured
  debug: msg="rc={{ results_6_1_8.rc }} :- results={{ results_6_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.8,Ensure permissions on /etc/gshadow- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.8 - Ensure permissions on /etc/gshadow- are configured
#  Profile :  Level 1 - Workstation
#  Description :  The `/etc/gshadow-` file is used to store backup information about groups that is critical to the security of those accounts, such as the hashed password and other security information.
#  Rationale Statement :  It is critical to ensure that the `/etc/gshadow-` file is protected from unauthorized access. Although it is protected by default, the file permissions could be changed either inadvertently or through malicious actions.


- name: AUDIT - 6.1.8 - Ensure permissions on /etc/gshadow- are configured
  shell: "sh {{ role_path }}/files/6.1.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_8
  failed_when: "results_6_1_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.8 - Ensure permissions on /etc/gshadow- are configured
  debug: msg="rc={{ results_6_1_8.rc }} :- results={{ results_6_1_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.8,Ensure permissions on /etc/gshadow- are configured,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.9 - Ensure no world writable files exist
#  Profile :  Level 1 - Server
#  Description :  Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the `chmod(2)` man page for more information.
#  Rationale Statement :  Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.


- name: AUDIT - 6.1.9 - Ensure no world writable files exist
  shell: "sh {{ role_path }}/files/6.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_9
  failed_when: "results_6_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.9 - Ensure no world writable files exist
  debug: msg="rc={{ results_6_1_9.rc }} :- results={{ results_6_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.9,Ensure no world writable files exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.9 - Ensure no world writable files exist
#  Profile :  Level 1 - Workstation
#  Description :  Unix-based systems support variable settings to control access to files. World writable files are the least secure. See the `chmod(2)` man page for more information.
#  Rationale Statement :  Data in world-writable files can be modified and compromised by any user on the system. World writable files may also indicate an incorrectly written script or program that could potentially be the cause of a larger compromise to the system's integrity.


- name: AUDIT - 6.1.9 - Ensure no world writable files exist
  shell: "sh {{ role_path }}/files/6.1.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_9
  failed_when: "results_6_1_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.9 - Ensure no world writable files exist
  debug: msg="rc={{ results_6_1_9.rc }} :- results={{ results_6_1_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.9,Ensure no world writable files exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.10 - Ensure no unowned files or directories exist
#  Profile :  Level 1 - Server
#  Description :  Sometimes when administrators delete users from the password file, they neglect to remove all files owned by those users from the system.
#  Rationale Statement :  A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.


- name: AUDIT - 6.1.10 - Ensure no unowned files or directories exist
  shell: "sh {{ role_path }}/files/6.1.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_10
  failed_when: "results_6_1_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.10 - Ensure no unowned files or directories exist
  debug: msg="rc={{ results_6_1_10.rc }} :- results={{ results_6_1_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.10,Ensure no unowned files or directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.10 - Ensure no unowned files or directories exist
#  Profile :  Level 1 - Workstation
#  Description :  Sometimes when administrators delete users from the password file, they neglect to remove all files owned by those users from the system.
#  Rationale Statement :  A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.


- name: AUDIT - 6.1.10 - Ensure no unowned files or directories exist
  shell: "sh {{ role_path }}/files/6.1.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_10
  failed_when: "results_6_1_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.10 - Ensure no unowned files or directories exist
  debug: msg="rc={{ results_6_1_10.rc }} :- results={{ results_6_1_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.10,Ensure no unowned files or directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.11 - Ensure no ungrouped files or directories exist
#  Profile :  Level 1 - Server
#  Description :  Sometimes when administrators delete users or groups from the system, they neglect to remove all files owned by those users or groups.
#  Rationale Statement :  A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.


- name: AUDIT - 6.1.11 - Ensure no ungrouped files or directories exist
  shell: "sh {{ role_path }}/files/6.1.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_11
  failed_when: "results_6_1_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.11 - Ensure no ungrouped files or directories exist
  debug: msg="rc={{ results_6_1_11.rc }} :- results={{ results_6_1_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.11,Ensure no ungrouped files or directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.11 - Ensure no ungrouped files or directories exist
#  Profile :  Level 1 - Workstation
#  Description :  Sometimes when administrators delete users or groups from the system, they neglect to remove all files owned by those users or groups.
#  Rationale Statement :  A new user who is assigned the deleted user's user ID or group ID may then end up "owning" these files, and thus have more access on the system than was intended.


- name: AUDIT - 6.1.11 - Ensure no ungrouped files or directories exist
  shell: "sh {{ role_path }}/files/6.1.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_11
  failed_when: "results_6_1_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.11 - Ensure no ungrouped files or directories exist
  debug: msg="rc={{ results_6_1_11.rc }} :- results={{ results_6_1_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.11,Ensure no ungrouped files or directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.12 - Ensure sticky bit is set on all world-writable directories
#  Profile :  Level 1 - Server
#  Description :  Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.
#  Rationale Statement :  This feature prevents the ability to delete or rename files in world writable directories (such as `/tmp` ) that are owned by another user.


- name: AUDIT - 6.1.12 - Ensure sticky bit is set on all world-writable directories
  shell: "sh {{ role_path }}/files/6.1.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_12
  failed_when: "results_6_1_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.12 - Ensure sticky bit is set on all world-writable directories
  debug: msg="rc={{ results_6_1_12.rc }} :- results={{ results_6_1_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.12,Ensure sticky bit is set on all world-writable directories,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.1.12 - Ensure sticky bit is set on all world-writable directories
#  Profile :  Level 1 - Workstation
#  Description :  Setting the sticky bit on world writable directories prevents users from deleting or renaming files in that directory that are not owned by them.
#  Rationale Statement :  This feature prevents the ability to delete or rename files in world writable directories (such as `/tmp` ) that are owned by another user.


- name: AUDIT - 6.1.12 - Ensure sticky bit is set on all world-writable directories
  shell: "sh {{ role_path }}/files/6.1.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_12
  failed_when: "results_6_1_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.12 - Ensure sticky bit is set on all world-writable directories
  debug: msg="rc={{ results_6_1_12.rc }} :- results={{ results_6_1_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.12,Ensure sticky bit is set on all world-writable directories,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.13 - Audit SUID executables
#  Profile :  Level 1 - Server
#  Description :  The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.
#  Rationale Statement :  There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.


- name: AUDIT - 6.1.13 - Audit SUID executables
  shell: "sh {{ role_path }}/files/6.1.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_13
  failed_when: "results_6_1_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.13 - Audit SUID executables
  debug: msg="rc={{ results_6_1_13.rc }} :- results={{ results_6_1_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.13,Audit SUID executables,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section6


####################################################
#  Title  -  6.1.13 - Audit SUID executables
#  Profile :  Level 1 - Workstation
#  Description :  The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SUID program is to enable users to perform functions (such as changing their password) that require root privileges.
#  Rationale Statement :  There are valid reasons for SUID programs, but it is important to identify and review such programs to ensure they are legitimate.


- name: AUDIT - 6.1.13 - Audit SUID executables
  shell: "sh {{ role_path }}/files/6.1.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_13
  failed_when: "results_6_1_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.13 - Audit SUID executables
  debug: msg="rc={{ results_6_1_13.rc }} :- results={{ results_6_1_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.13,Audit SUID executables,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.14 - Audit SGID executables
#  Profile :  Level 1 - Server
#  Description :  The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.
#  Rationale Statement :  There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.


- name: AUDIT - 6.1.14 - Audit SGID executables
  shell: "sh {{ role_path }}/files/6.1.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_14
  failed_when: "results_6_1_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.1.14 - Audit SGID executables
  debug: msg="rc={{ results_6_1_14.rc }} :- results={{ results_6_1_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.14,Audit SGID executables,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-server
    - section6


####################################################
#  Title  -  6.1.14 - Audit SGID executables
#  Profile :  Level 1 - Workstation
#  Description :  The owner of a file can set the file's permissions to run with the owner's or group's permissions, even if the user running the program is not the owner or a member of the group. The most common reason for a SGID program is to enable users to perform functions (such as changing their password) that require root privileges.
#  Rationale Statement :  There are valid reasons for SGID programs, but it is important to identify and review such programs to ensure they are legitimate. Review the files returned by the action in the audit section and check to see if system binaries have a different md5 checksum than what from the package. This is an indication that the binary may have been replaced.


- name: AUDIT - 6.1.14 - Audit SGID executables
  shell: "sh {{ role_path }}/files/6.1.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_14
  failed_when: "results_6_1_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.14 - Audit SGID executables
  debug: msg="rc={{ results_6_1_14.rc }} :- results={{ results_6_1_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.14,Audit SGID executables,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level1-workstation
    - section6


####################################################
#  Title  -  6.1.15 - Audit system file permissions
#  Profile :  Level 2 - Server
#  Description :  The RPM package manager has a number of useful options. One of these, the `-V` for RPM option, can be used to verify that system packages are correctly installed. The `-V` option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:
# ```
# Code Meaning
# S File size differs.
# M File mode differs (includes permissions and file type).
# 5 The MD5 checksum differs.
# D The major and minor version numbers differ on a device file.
# L A mismatch occurs in a link.
# U The file ownership differs.
# G The file group owner differs.
# T The file time (mtime) differs.
# ```
# The `rpm -qf` command can be used to determine which package a particular file belongs to. For example, the following commands determines which package the `/bin/bash` file belongs to:
# 
# ```
# # rpm -qf /bin/bash
# bash-4.1.2-29.el6.x86_64
# # rpm -S /bin/bash
# bash: /bin/bash
# ```
# To verify the settings for the package that controls the `/bin/bash` file, run the following:
# ```
# # rpm -V bash-4.1.2-29.el6.x86_64
# .M....... /bin/bash
# # rpm --verify bash
# ??5?????? c /etc/bash.bashrc
# ```
# Note that you can feed the output of the `rpm -qf` command to the `rpm -V` command:
# ```
# # rpm -V `rpm -qf /etc/passwd` 
# .M...... c /etc/passwd
# S.5....T c /etc/printcap
# ```
#  Rationale Statement :  It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.


- name: AUDIT - 6.1.15 - Audit system file permissions
  shell: "sh {{ role_path }}/files/6.1.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_15
  failed_when: "results_6_1_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-server
    - section6


- name: AUDIT - RESULTS - 6.1.15 - Audit system file permissions
  debug: msg="rc={{ results_6_1_15.rc }} :- results={{ results_6_1_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.15,Audit system file permissions,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-server
    - section6


####################################################
#  Title  -  6.1.15 - Audit system file permissions
#  Profile :  Level 2 - Workstation
#  Description :  The RPM package manager has a number of useful options. One of these, the `-V` for RPM option, can be used to verify that system packages are correctly installed. The `-V` option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:
# ```
# Code Meaning
# S File size differs.
# M File mode differs (includes permissions and file type).
# 5 The MD5 checksum differs.
# D The major and minor version numbers differ on a device file.
# L A mismatch occurs in a link.
# U The file ownership differs.
# G The file group owner differs.
# T The file time (mtime) differs.
# ```
# The `rpm -qf` command can be used to determine which package a particular file belongs to. For example, the following commands determines which package the `/bin/bash` file belongs to:
# 
# ```
# # rpm -qf /bin/bash
# bash-4.1.2-29.el6.x86_64
# # rpm -S /bin/bash
# bash: /bin/bash
# ```
# To verify the settings for the package that controls the `/bin/bash` file, run the following:
# ```
# # rpm -V bash-4.1.2-29.el6.x86_64
# .M....... /bin/bash
# # rpm --verify bash
# ??5?????? c /etc/bash.bashrc
# ```
# Note that you can feed the output of the `rpm -qf` command to the `rpm -V` command:
# ```
# # rpm -V `rpm -qf /etc/passwd` 
# .M...... c /etc/passwd
# S.5....T c /etc/printcap
# ```
#  Rationale Statement :  It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.


- name: AUDIT - 6.1.15 - Audit system file permissions
  shell: "sh {{ role_path }}/files/6.1.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_1_15
  failed_when: "results_6_1_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - manual
    - level2-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_1_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - manual
    - level2-workstation
    - section6


- name: AUDIT - RESULTS - 6.1.15 - Audit system file permissions
  debug: msg="rc={{ results_6_1_15.rc }} :- results={{ results_6_1_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - manual
    - level2-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.1.15,Audit system file permissions,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - manual
    - level2-workstation
    - section6


####################################################
#  Title  -  6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
#  Profile :  Level 1 - Server
#  Description :  Local accounts can use shadowed passwords. With shadowed passwords, the passwords are saved in shadow password file, `/etc/shadow`, encrypted by a salted one-way hash. Accounts with a shadowed password have an `x` in the second field in `/etc/passwd`.
#  Rationale Statement :  The `/etc/passwd` file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the `/etc/passwd` file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the `/etc/passwd` file. This can be mitigated by using shadowed passwords, thus moving the passwords in the `/etc/passwd` file to `/etc/shadow`. The `/etc/shadow` file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack. 
# 
# **Note:**
# - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
# - A user account with an empty second field in `/etc/passwd` allows the account to be logged into by providing only the username.


- name: AUDIT - 6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
  shell: "sh {{ role_path }}/files/6.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_1
  failed_when: "results_6_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
  debug: msg="rc={{ results_6_2_1.rc }} :- results={{ results_6_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.1,Ensure accounts in /etc/passwd use shadowed passwords,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
#  Profile :  Level 1 - Workstation
#  Description :  Local accounts can use shadowed passwords. With shadowed passwords, the passwords are saved in shadow password file, `/etc/shadow`, encrypted by a salted one-way hash. Accounts with a shadowed password have an `x` in the second field in `/etc/passwd`.
#  Rationale Statement :  The `/etc/passwd` file also contains information like user ID's and group ID's that are used by many system programs. Therefore, the `/etc/passwd` file must remain world readable. In spite of encoding the password with a randomly-generated one-way hash function, an attacker could still break the system if they got access to the `/etc/passwd` file. This can be mitigated by using shadowed passwords, thus moving the passwords in the `/etc/passwd` file to `/etc/shadow`. The `/etc/shadow` file is set so only root will be able to read and write. This helps mitigate the risk of an attacker gaining access to the encoded passwords with which to perform a dictionary attack. 
# 
# **Note:**
# - All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.
# - A user account with an empty second field in `/etc/passwd` allows the account to be logged into by providing only the username.


- name: AUDIT - 6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
  shell: "sh {{ role_path }}/files/6.2.1_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_1
  failed_when: "results_6_2_1.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_1.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.1 - Ensure accounts in /etc/passwd use shadowed passwords
  debug: msg="rc={{ results_6_2_1.rc }} :- results={{ results_6_2_1.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.1,Ensure accounts in /etc/passwd use shadowed passwords,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.2 - Ensure /etc/shadow password fields are not empty
#  Profile :  Level 1 - Server
#  Description :  An account with an empty password field means that anybody may log in as that user without providing a password.
#  Rationale Statement :  All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.


- name: AUDIT - 6.2.2 - Ensure /etc/shadow password fields are not empty
  shell: "sh {{ role_path }}/files/6.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_2
  failed_when: "results_6_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.2 - Ensure /etc/shadow password fields are not empty
  debug: msg="rc={{ results_6_2_2.rc }} :- results={{ results_6_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.2,Ensure /etc/shadow password fields are not empty,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.2 - Ensure /etc/shadow password fields are not empty
#  Profile :  Level 1 - Workstation
#  Description :  An account with an empty password field means that anybody may log in as that user without providing a password.
#  Rationale Statement :  All accounts must have passwords or be locked to prevent the account from being used by an unauthorized user.


- name: AUDIT - 6.2.2 - Ensure /etc/shadow password fields are not empty
  shell: "sh {{ role_path }}/files/6.2.2_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_2
  failed_when: "results_6_2_2.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_2.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.2 - Ensure /etc/shadow password fields are not empty
  debug: msg="rc={{ results_6_2_2.rc }} :- results={{ results_6_2_2.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.2,Ensure /etc/shadow password fields are not empty,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
#  Profile :  Level 1 - Server
#  Description :  Over time, system administration errors and changes can lead to groups being defined in `/etc/passwd` but not in `/etc/group` .
#  Rationale Statement :  Groups defined in the `/etc/passwd` file but not in the `/etc/group` file pose a threat to system security since group permissions are not properly managed.


- name: AUDIT - 6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
  shell: "sh {{ role_path }}/files/6.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_3
  failed_when: "results_6_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
  debug: msg="rc={{ results_6_2_3.rc }} :- results={{ results_6_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.3,Ensure all groups in /etc/passwd exist in /etc/group,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
#  Profile :  Level 1 - Workstation
#  Description :  Over time, system administration errors and changes can lead to groups being defined in `/etc/passwd` but not in `/etc/group` .
#  Rationale Statement :  Groups defined in the `/etc/passwd` file but not in the `/etc/group` file pose a threat to system security since group permissions are not properly managed.


- name: AUDIT - 6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
  shell: "sh {{ role_path }}/files/6.2.3_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_3
  failed_when: "results_6_2_3.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_3.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.3 - Ensure all groups in /etc/passwd exist in /etc/group
  debug: msg="rc={{ results_6_2_3.rc }} :- results={{ results_6_2_3.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.3,Ensure all groups in /etc/passwd exist in /etc/group,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.4 - Ensure no duplicate UIDs exist
#  Profile :  Level 1 - Server
#  Description :  Although the `useradd` program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the `/etc/passwd` file and change the UID field.
#  Rationale Statement :  Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.


- name: AUDIT - 6.2.4 - Ensure no duplicate UIDs exist
  shell: "sh {{ role_path }}/files/6.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_4
  failed_when: "results_6_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.4 - Ensure no duplicate UIDs exist
  debug: msg="rc={{ results_6_2_4.rc }} :- results={{ results_6_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.4,Ensure no duplicate UIDs exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.4 - Ensure no duplicate UIDs exist
#  Profile :  Level 1 - Workstation
#  Description :  Although the `useradd` program will not let you create a duplicate User ID (UID), it is possible for an administrator to manually edit the `/etc/passwd` file and change the UID field.
#  Rationale Statement :  Users must be assigned unique UIDs for accountability and to ensure appropriate access protections.


- name: AUDIT - 6.2.4 - Ensure no duplicate UIDs exist
  shell: "sh {{ role_path }}/files/6.2.4_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_4
  failed_when: "results_6_2_4.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_4.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.4 - Ensure no duplicate UIDs exist
  debug: msg="rc={{ results_6_2_4.rc }} :- results={{ results_6_2_4.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.4,Ensure no duplicate UIDs exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.5 - Ensure no duplicate GIDs exist
#  Profile :  Level 1 - Server
#  Description :  Although the `groupadd` program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the `/etc/group` file and change the GID field.
#  Rationale Statement :  User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.


- name: AUDIT - 6.2.5 - Ensure no duplicate GIDs exist
  shell: "sh {{ role_path }}/files/6.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_5
  failed_when: "results_6_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.5 - Ensure no duplicate GIDs exist
  debug: msg="rc={{ results_6_2_5.rc }} :- results={{ results_6_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.5,Ensure no duplicate GIDs exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.5 - Ensure no duplicate GIDs exist
#  Profile :  Level 1 - Workstation
#  Description :  Although the `groupadd` program will not let you create a duplicate Group ID (GID), it is possible for an administrator to manually edit the `/etc/group` file and change the GID field.
#  Rationale Statement :  User groups must be assigned unique GIDs for accountability and to ensure appropriate access protections.


- name: AUDIT - 6.2.5 - Ensure no duplicate GIDs exist
  shell: "sh {{ role_path }}/files/6.2.5_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_5
  failed_when: "results_6_2_5.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_5.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.5 - Ensure no duplicate GIDs exist
  debug: msg="rc={{ results_6_2_5.rc }} :- results={{ results_6_2_5.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.5,Ensure no duplicate GIDs exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.6 - Ensure no duplicate user names exist
#  Profile :  Level 1 - Server
#  Description :  Although the `useradd` program will not let you create a duplicate user name, it is possible for an administrator to manually edit the `/etc/passwd` file and change the username.
#  Rationale Statement :  If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in `/etc/passwd` . For example, if "test4" has a UID of 1000 and a subsequent "test4" entry has a UID of 2000, logging in as "test4" will use UID 1000. Effectively, the UID is shared, which is a security problem.


- name: AUDIT - 6.2.6 - Ensure no duplicate user names exist
  shell: "sh {{ role_path }}/files/6.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_6
  failed_when: "results_6_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.6 - Ensure no duplicate user names exist
  debug: msg="rc={{ results_6_2_6.rc }} :- results={{ results_6_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.6,Ensure no duplicate user names exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.6 - Ensure no duplicate user names exist
#  Profile :  Level 1 - Workstation
#  Description :  Although the `useradd` program will not let you create a duplicate user name, it is possible for an administrator to manually edit the `/etc/passwd` file and change the username.
#  Rationale Statement :  If a user is assigned a duplicate user name, it will create and have access to files with the first UID for that username in `/etc/passwd` . For example, if "test4" has a UID of 1000 and a subsequent "test4" entry has a UID of 2000, logging in as "test4" will use UID 1000. Effectively, the UID is shared, which is a security problem.


- name: AUDIT - 6.2.6 - Ensure no duplicate user names exist
  shell: "sh {{ role_path }}/files/6.2.6_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_6
  failed_when: "results_6_2_6.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_6.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.6 - Ensure no duplicate user names exist
  debug: msg="rc={{ results_6_2_6.rc }} :- results={{ results_6_2_6.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.6,Ensure no duplicate user names exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.7 - Ensure no duplicate group names exist
#  Profile :  Level 1 - Server
#  Description :  Although the `groupadd` program will not let you create a duplicate group name, it is possible for an administrator to manually edit the `/etc/group` file and change the group name.
#  Rationale Statement :  If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in `/etc/group` . Effectively, the GID is shared, which is a security problem.


- name: AUDIT - 6.2.7 - Ensure no duplicate group names exist
  shell: "sh {{ role_path }}/files/6.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_7
  failed_when: "results_6_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.7 - Ensure no duplicate group names exist
  debug: msg="rc={{ results_6_2_7.rc }} :- results={{ results_6_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.7,Ensure no duplicate group names exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.7 - Ensure no duplicate group names exist
#  Profile :  Level 1 - Workstation
#  Description :  Although the `groupadd` program will not let you create a duplicate group name, it is possible for an administrator to manually edit the `/etc/group` file and change the group name.
#  Rationale Statement :  If a group is assigned a duplicate group name, it will create and have access to files with the first GID for that group in `/etc/group` . Effectively, the GID is shared, which is a security problem.


- name: AUDIT - 6.2.7 - Ensure no duplicate group names exist
  shell: "sh {{ role_path }}/files/6.2.7_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_7
  failed_when: "results_6_2_7.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_7.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.7 - Ensure no duplicate group names exist
  debug: msg="rc={{ results_6_2_7.rc }} :- results={{ results_6_2_7.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.7,Ensure no duplicate group names exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.8 - Ensure root PATH Integrity
#  Profile :  Level 1 - Server
#  Description :  The `root` user can execute any command on the system and could be fooled into executing programs unintentionally if the `PATH` is not set correctly.
#  Rationale Statement :  Including the current working directory (.) or other writable directory in `root`'s executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as `root` to execute a Trojan horse program.


- name: AUDIT - 6.2.8 - Ensure root PATH Integrity
  shell: "sh {{ role_path }}/files/6.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_8
  failed_when: "results_6_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.8 - Ensure root PATH Integrity
  debug: msg="rc={{ results_6_2_8.rc }} :- results={{ results_6_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.8,Ensure root PATH Integrity,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.8 - Ensure root PATH Integrity
#  Profile :  Level 1 - Workstation
#  Description :  The `root` user can execute any command on the system and could be fooled into executing programs unintentionally if the `PATH` is not set correctly.
#  Rationale Statement :  Including the current working directory (.) or other writable directory in `root`'s executable path makes it likely that an attacker can gain superuser access by forcing an administrator operating as `root` to execute a Trojan horse program.


- name: AUDIT - 6.2.8 - Ensure root PATH Integrity
  shell: "sh {{ role_path }}/files/6.2.8_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_8
  failed_when: "results_6_2_8.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_8.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.8 - Ensure root PATH Integrity
  debug: msg="rc={{ results_6_2_8.rc }} :- results={{ results_6_2_8.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.8,Ensure root PATH Integrity,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.9 - Ensure root is the only UID 0 account
#  Profile :  Level 1 - Server
#  Description :  Any account with UID 0 has superuser privileges on the system.
#  Rationale Statement :  This access must be limited to only the default `root` account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.


- name: AUDIT - 6.2.9 - Ensure root is the only UID 0 account
  shell: "sh {{ role_path }}/files/6.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_9
  failed_when: "results_6_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.9 - Ensure root is the only UID 0 account
  debug: msg="rc={{ results_6_2_9.rc }} :- results={{ results_6_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.9,Ensure root is the only UID 0 account,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.9 - Ensure root is the only UID 0 account
#  Profile :  Level 1 - Workstation
#  Description :  Any account with UID 0 has superuser privileges on the system.
#  Rationale Statement :  This access must be limited to only the default `root` account and only from the system console. Administrative access must be through an unprivileged account using an approved mechanism as noted in Item 5.6 Ensure access to the su command is restricted.


- name: AUDIT - 6.2.9 - Ensure root is the only UID 0 account
  shell: "sh {{ role_path }}/files/6.2.9_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_9
  failed_when: "results_6_2_9.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_9.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.9 - Ensure root is the only UID 0 account
  debug: msg="rc={{ results_6_2_9.rc }} :- results={{ results_6_2_9.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.9,Ensure root is the only UID 0 account,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.10 - Ensure local interactive user home directories exist
#  Profile :  Level 1 - Server
#  Description :  Users can be defined in `/etc/passwd` without a home directory or with a home directory that does not actually exist.
#  Rationale Statement :  If the user's home directory does not exist or is unassigned, the user will be placed in "/" and will not be able to write any files or have local environment variables set.


- name: AUDIT - 6.2.10 - Ensure local interactive user home directories exist
  shell: "sh {{ role_path }}/files/6.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_10
  failed_when: "results_6_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.10 - Ensure local interactive user home directories exist
  debug: msg="rc={{ results_6_2_10.rc }} :- results={{ results_6_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.10,Ensure local interactive user home directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.10 - Ensure local interactive user home directories exist
#  Profile :  Level 1 - Workstation
#  Description :  Users can be defined in `/etc/passwd` without a home directory or with a home directory that does not actually exist.
#  Rationale Statement :  If the user's home directory does not exist or is unassigned, the user will be placed in "/" and will not be able to write any files or have local environment variables set.


- name: AUDIT - 6.2.10 - Ensure local interactive user home directories exist
  shell: "sh {{ role_path }}/files/6.2.10_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_10
  failed_when: "results_6_2_10.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_10.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.10 - Ensure local interactive user home directories exist
  debug: msg="rc={{ results_6_2_10.rc }} :- results={{ results_6_2_10.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.10,Ensure local interactive user home directories exist,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.11 - Ensure local interactive users own their home directories
#  Profile :  Level 1 - Server
#  Description :  The user home directory is space defined for the particular user to set local environment variables and to store personal files.
#  Rationale Statement :  Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.


- name: AUDIT - 6.2.11 - Ensure local interactive users own their home directories
  shell: "sh {{ role_path }}/files/6.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_11
  failed_when: "results_6_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.11 - Ensure local interactive users own their home directories
  debug: msg="rc={{ results_6_2_11.rc }} :- results={{ results_6_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.11,Ensure local interactive users own their home directories,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.11 - Ensure local interactive users own their home directories
#  Profile :  Level 1 - Workstation
#  Description :  The user home directory is space defined for the particular user to set local environment variables and to store personal files.
#  Rationale Statement :  Since the user is accountable for files stored in the user home directory, the user must be the owner of the directory.


- name: AUDIT - 6.2.11 - Ensure local interactive users own their home directories
  shell: "sh {{ role_path }}/files/6.2.11_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_11
  failed_when: "results_6_2_11.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_11.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.11 - Ensure local interactive users own their home directories
  debug: msg="rc={{ results_6_2_11.rc }} :- results={{ results_6_2_11.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.11,Ensure local interactive users own their home directories,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
#  Profile :  Level 1 - Server
#  Description :  While the system administrator can establish secure permissions for users' home directories, the users can easily override these.
#  Rationale Statement :  Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.


- name: AUDIT - 6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
  shell: "sh {{ role_path }}/files/6.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_12
  failed_when: "results_6_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
  debug: msg="rc={{ results_6_2_12.rc }} :- results={{ results_6_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.12,Ensure local interactive user home directories are mode 750 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
#  Profile :  Level 1 - Workstation
#  Description :  While the system administrator can establish secure permissions for users' home directories, the users can easily override these.
#  Rationale Statement :  Group or world-writable user home directories may enable malicious users to steal or modify other users' data or to gain another user's system privileges.


- name: AUDIT - 6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
  shell: "sh {{ role_path }}/files/6.2.12_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_12
  failed_when: "results_6_2_12.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_12.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.12 - Ensure local interactive user home directories are mode 750 or more restrictive
  debug: msg="rc={{ results_6_2_12.rc }} :- results={{ results_6_2_12.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.12,Ensure local interactive user home directories are mode 750 or more restrictive,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.13 - Ensure no local interactive user has .netrc files
#  Profile :  Level 1 - Server
#  Description :  The `.netrc` file contains data for logging into a remote host for file transfers via FTP.
# 
# While the system administrator can establish secure permissions for users' `.netrc` files, the users can easily override these.
#  Rationale Statement :  The `.netrc` file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over `.netrc` files from other systems which could pose a risk to those systems.
# 
# If a `.netrc` file is required, and follows local site policy, it should have permissions of `600` or more restrictive.


- name: AUDIT - 6.2.13 - Ensure no local interactive user has .netrc files
  shell: "sh {{ role_path }}/files/6.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_13
  failed_when: "results_6_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.13 - Ensure no local interactive user has .netrc files
  debug: msg="rc={{ results_6_2_13.rc }} :- results={{ results_6_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.13,Ensure no local interactive user has .netrc files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.13 - Ensure no local interactive user has .netrc files
#  Profile :  Level 1 - Workstation
#  Description :  The `.netrc` file contains data for logging into a remote host for file transfers via FTP.
# 
# While the system administrator can establish secure permissions for users' `.netrc` files, the users can easily override these.
#  Rationale Statement :  The `.netrc` file presents a significant security risk since it stores passwords in unencrypted form. Even if FTP is disabled, user accounts may have brought over `.netrc` files from other systems which could pose a risk to those systems.
# 
# If a `.netrc` file is required, and follows local site policy, it should have permissions of `600` or more restrictive.


- name: AUDIT - 6.2.13 - Ensure no local interactive user has .netrc files
  shell: "sh {{ role_path }}/files/6.2.13_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_13
  failed_when: "results_6_2_13.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_13.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.13 - Ensure no local interactive user has .netrc files
  debug: msg="rc={{ results_6_2_13.rc }} :- results={{ results_6_2_13.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.13,Ensure no local interactive user has .netrc files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.14 - Ensure no local interactive user has .forward files
#  Profile :  Level 1 - Server
#  Description :  The `.forward` file specifies an email address to forward the user's mail to.
#  Rationale Statement :  Use of the `.forward` file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The `.forward` file also poses a risk as it can be used to execute commands that may perform unintended actions.


- name: AUDIT - 6.2.14 - Ensure no local interactive user has .forward files
  shell: "sh {{ role_path }}/files/6.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_14
  failed_when: "results_6_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.14 - Ensure no local interactive user has .forward files
  debug: msg="rc={{ results_6_2_14.rc }} :- results={{ results_6_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.14,Ensure no local interactive user has .forward files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.14 - Ensure no local interactive user has .forward files
#  Profile :  Level 1 - Workstation
#  Description :  The `.forward` file specifies an email address to forward the user's mail to.
#  Rationale Statement :  Use of the `.forward` file poses a security risk in that sensitive data may be inadvertently transferred outside the organization. The `.forward` file also poses a risk as it can be used to execute commands that may perform unintended actions.


- name: AUDIT - 6.2.14 - Ensure no local interactive user has .forward files
  shell: "sh {{ role_path }}/files/6.2.14_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_14
  failed_when: "results_6_2_14.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_14.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.14 - Ensure no local interactive user has .forward files
  debug: msg="rc={{ results_6_2_14.rc }} :- results={{ results_6_2_14.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.14,Ensure no local interactive user has .forward files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.15 - Ensure no local interactive user has .rhosts files
#  Profile :  Level 1 - Server
#  Description :  While no `.rhosts` files are shipped by default, users can easily create them.
#  Rationale Statement :  This action is only meaningful if `.rhosts` support is permitted in the file `/etc/pam.conf` . Even though the `.rhosts` files are ineffective if support is disabled in `/etc/pam.conf`, they may have been brought over from other systems and could contain information useful to an attacker for those other systems.


- name: AUDIT - 6.2.15 - Ensure no local interactive user has .rhosts files
  shell: "sh {{ role_path }}/files/6.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_15
  failed_when: "results_6_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.15 - Ensure no local interactive user has .rhosts files
  debug: msg="rc={{ results_6_2_15.rc }} :- results={{ results_6_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.15,Ensure no local interactive user has .rhosts files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.15 - Ensure no local interactive user has .rhosts files
#  Profile :  Level 1 - Workstation
#  Description :  While no `.rhosts` files are shipped by default, users can easily create them.
#  Rationale Statement :  This action is only meaningful if `.rhosts` support is permitted in the file `/etc/pam.conf` . Even though the `.rhosts` files are ineffective if support is disabled in `/etc/pam.conf`, they may have been brought over from other systems and could contain information useful to an attacker for those other systems.


- name: AUDIT - 6.2.15 - Ensure no local interactive user has .rhosts files
  shell: "sh {{ role_path }}/files/6.2.15_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_15
  failed_when: "results_6_2_15.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_15.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.15 - Ensure no local interactive user has .rhosts files
  debug: msg="rc={{ results_6_2_15.rc }} :- results={{ results_6_2_15.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.15,Ensure no local interactive user has .rhosts files,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6


####################################################
#  Title  -  6.2.16 - Ensure local interactive user dot files are not group or world writable
#  Profile :  Level 1 - Server
#  Description :  While the system administrator can establish secure permissions for users' "dot" files, the users can easily override these.
#  Rationale Statement :  Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.


- name: AUDIT - 6.2.16 - Ensure local interactive user dot files are not group or world writable
  shell: "sh {{ role_path }}/files/6.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_16
  failed_when: "results_6_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-server
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - RESULTS - 6.2.16 - Ensure local interactive user dot files are not group or world writable
  debug: msg="rc={{ results_6_2_16.rc }} :- results={{ results_6_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-server
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.16,Ensure local interactive user dot files are not group or world writable,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-server
    - section6


####################################################
#  Title  -  6.2.16 - Ensure local interactive user dot files are not group or world writable
#  Profile :  Level 1 - Workstation
#  Description :  While the system administrator can establish secure permissions for users' "dot" files, the users can easily override these.
#  Rationale Statement :  Group or world-writable user configuration files may enable malicious users to steal or modify other users' data or to gain another user's system privileges.


- name: AUDIT - 6.2.16 - Ensure local interactive user dot files are not group or world writable
  shell: "sh {{ role_path }}/files/6.2.16_command.sh | tr \\\\n \\|"
  become: true
  register: results_6_2_16
  failed_when: "results_6_2_16.rc not in [ 0, 1 ]"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- set_fact:
    compliant_status: "{% if results_6_2_16.stdout | replace(' |','|') in 'Audit Expected Result PLACEHOLDER|' %}COMPLIANT{% else %}NON_COMPLIANT{% endif %}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - RESULTS - 6.2.16 - Ensure local interactive user dot files are not group or world writable
  debug: msg="rc={{ results_6_2_16.rc }} :- results={{ results_6_2_16.stdout | replace(' |','|') }} :- expected_results='Audit Expected Result PLACEHOLDER|' :- compliant_status={{ compliant_status }}"
  tags:
    - all
    - automated
    - level1-workstation
    - section6


- name: AUDIT - OUTPUT TO FILE
  become: true
  lineinfile:
    line: "6.2.16,Ensure local interactive user dot files are not group or world writable,{{ compliant_status }}"
    dest: ./audit_result.csv
  tags:
    - all
    - automated
    - level1-workstation
    - section6




- name: AUDIT - READ AUDIT RESULT
  become: true
  read_csv:
    path: "./audit_result.csv"
  register: audit_results
  tags:
    - all
    - default


- name: AUDIT - READ AUDIT RESULT
  become: true
  vars:
    audit_result_items: []
  set_fact:
    audit_result_items: "{{ audit_result_items + [{ 'Id': item.id , 'Title': item.title, 'Status': item.compliant_status, 'Severity': 'CRITICAL' }]}}"
  loop: "{{ audit_results.list }}"
  tags:
    - all
    - default


- name: AUDIT - READ AUDIT RESULT
  become: true
  debug:
    msg: "{{ audit_result_items }}"
  tags:
    - all
    - default
- name: AUDIT - OUTPUT TO FILE
  become: true
  copy:
    content: "{{ audit_result_items }}"
    dest: ./audit_result.json
  tags:
    - all
    - default


- name: AUDIT - UPDATE TO COMPLIANCE
  become: true
  shell: "aws ssm put-compliance-items --resource-id {{ instance_id.stdout_lines[0] | default(instance_details.json.instanceId) }} --resource-type ManagedInstance --compliance-type \"Custom:CISAudit\" --execution-summary ExecutionTime=\"{{ ansible_date_time.date }} {{ ansible_date_time.time }}\",ExecutionType=Command --items file://./audit_result.json --region={{ instance_region.stdout_lines[0] | default(instance_details.json.region) }}"
  tags:
    - all
    - upload_compliance_cloud
    - upload_compliance_hybrid
