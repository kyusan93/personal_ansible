---

- name: Creates deployment apps {{ base.company_name }}_hf_outputs directory
  become: true
  become_user: "{{ splunk.nix.user }}"
  file:
    path: "{{ splunk.home }}/etc/deployment-apps/{{ base.company_name }}_hf_outputs/"
    state: directory
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    mode: 0700
    recurse: yes

- name: Creates deployment apps {{ base.company_name }}_hf_outputs local directory
  become: true
  become_user: "{{ splunk.nix.user }}"
  file:
    path: "{{ splunk.home }}/etc/deployment-apps/{{ base.company_name }}_hf_outputs/local"
    state: directory
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    mode: 0700
    recurse: yes

- name: Create deployment app in deployment server - install
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/deployment-apps/{{ base.company_name }}_hf_outputs/default/app.conf"
    section: "install"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
  with_items:
    - {key: "state", value: "enabled"}
  register: deploymentapp_install

- name: Create deployment app in deployment server - ui
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/deployment-apps/{{ base.company_name }}_hf_outputs/default/app.conf"
    section: "ui"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
  with_items:
    - {key: "is_visible", value: "false"}
    - {key: "label", value: "deployment app"}
  register: deploymentapp_ui

- name: Configure SSL outputs.conf
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/deployment-apps/{{ base.company_name }}_hf_outputs/local/outputs.conf"
    section: "{{ item.section }}"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
  with_items:
    - {section: "indexer_discovery:cluster_master", key: "pass4SymmKey", value: "{{ splunk.pass4SymmKey }}"}
    - {section: "indexer_discovery:cluster_master", key: "master_uri", value: "https://{{ splunk.cluster.master_url }}:{{ splunk.ports.mgmt }}"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "indexerDiscovery", value: "cluster_master"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "clientCert", value: "$SPLUNK_HOME/etc/auth/{{ base.company_name }}/forwarder_app_cert.pem"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "sslPassword", value: "{{ splunk.ssl.sslPassword }}"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "useClientSSLCompression", value: "true"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "sslVersions", value: "tls1.2"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "cipherSuite", value: "{{ splunk.ssl.cipherSuite }}"}
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "ecdhCurves", value: "{{ splunk.ssl.ecdhCurves }}"}
    - {section: "tcpout", key: "indexAndForward", value: "false"}
    - {section: "tcpout", key: "forwardedindex.filter.disable", value: "true"}
    - {section: "tcpout", key: "defaultGroup", value: "{{ base.company_name }}_indexers"}
    - {section: "indexAndForward", key: "index", value: "false"}

- name: Configure SSL outputs.conf - update to use indexer vip
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/apps/{{ base.company_name }}_hf_outputs/local/outputs.conf"
    section: "{{ item.section }}"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
  with_items:
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "server", value: "{{ splunk.indexer.vip }}:{{ splunk.ports.indexer_receiving }} "}
  when: (splunk.indexer.vip is defined) and (splunk.indexer.vip|length > 0)

- name: Configure SSL outputs.conf - remove indexerdiscovery
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/apps/{{ base.company_name }}_hf_outputs/local/outputs.conf"
    section: "{{ item.section }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    state: absent
  with_items:
    - {section: "indexer_discovery:cluster_master", key: "pass4SymmKey", value: "{{ splunk.pass4SymmKey }}"}
  when: (splunk.indexer.vip is defined) and (splunk.indexer.vip|length > 0)

- name: Configure SSL outputs.conf - remove indexerdiscovery
  become: true
  become_user: "{{ splunk.nix.user }}"
  ini_file:
    path: "{{ splunk.home }}/etc/apps/{{ base.company_name }}_hf_outputs/local/outputs.conf"
    section: "{{ item.section }}"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    state: absent
  with_items:
    - {section: "tcpout:{{ base.company_name }}_indexers", key: "indexerDiscovery", value: "cluster_master"}
  when: (splunk.indexer.vip is defined) and (splunk.indexer.vip|length > 0)

# Restart only when Splunk is running and when any of the above have changed
- include_tasks: "{{ playbook_dir }}/roles/common/tasks/reload_deploy_server.yml"
  when: deploymentapp_install is changed or deploymentapp_ui is changed
