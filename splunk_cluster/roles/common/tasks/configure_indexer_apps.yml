---

- name: Set the path
  set_fact:
    apps_path: "{{ splunk.home }}/etc/{% if ansible_host in groups['cluster_master'] and groups['cluster_master'] | length>0 %}manager-apps{% else %}apps{% endif %}"

- name: Copy tar rpm file to server
  copy:
    src: "{{ playbook_dir }}/roles/common/files/installer/tar.rpm"
    dest: /tmp/tar.rpm

- name: Install tar
  become: true
  yum:
    name: /tmp/tar.rpm
    state: present
  ignore_errors: True

- name: Copy apps
  become: true
  become_user: "{{ splunk.nix.user }}"
  copy:
    src: "{{playbook_dir}}/roles/common/files/apps_indexer/apps/"
    dest: "{{ apps_path }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    mode: 0700
    force: yes
  register: deploy_apps

- name: Find .tgz
  find:
    paths: "{{ apps_path }}"
    patterns: "*.tgz"
  register: tgz_results

- name: Extract .tgz
  become: true
  become_user: "{{ splunk.nix.user }}"
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ apps_path }}"
    owner: "{{ splunk.nix.user }}"
    group: "{{ splunk.nix.group }}"
    remote_src: true
  loop: "{{ tgz_results.files }}"
  register: deploy_apps_extracted

- name: Delete .tgz
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ tgz_results.files }}"

- name: Apply cluster bundle
  command: "{{ splunk.home }}/bin/splunk apply cluster-bundle -auth {{ splunk.admin.username }}:{{ splunk.admin.password }} --answer-yes"
  become: true
  become_user: "{{ splunk.nix.user }}"
  when:
    - deploy_apps is changed or deploy_apps_extracted is changed
    - "'manager' in apps_path"

- include_tasks: "{{ playbook_dir }}/roles/common/tasks/restart_splunk.yml"
  when:
    - deploy_apps is changed or deploy_apps_extracted is changed
    - "'manager' not in apps_path"

