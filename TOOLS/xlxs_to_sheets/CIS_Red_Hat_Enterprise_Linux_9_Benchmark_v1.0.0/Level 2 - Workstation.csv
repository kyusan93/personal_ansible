Section #,Recommendation #,Title,Assessment Status,Description,Rationale Statement,Impact Statement,Remediation Procedure,Audit Procedure,Additional Information,CIS Controls,CIS Safeguards 1 (v8),CIS Safeguards 2 (v8),CIS Safeguards 3 (v8),v8 IG1,v8 IG2,v8 IG3,CIS Safeguards 1 (v7),CIS Safeguards 2 (v7),CIS Safeguards 3 (v7),v7 IG1,v7 IG2,v7 IG3,References
1,,Initial Setup,,"Items in this section are advised for all systems, but may be difficult or require extensive preparation after the initial setup of the system.",,,,,,,,,,,,,,,,,,,
1.1,,Filesystem Configuration,,"Directories that are used for system-wide functions can be further protected by placing them on separate partitions. This provides protection for resource exhaustion and enables the use of mounting options that are applicable to the directory's intended use. Users' data can be stored on separate partitions and have stricter mount options. A user partition is a filesystem that has been established for use by the users and does not contain software for system operations.

The recommendations in this section are easier to perform during initial system installation. If the system is already installed, it is recommended that a full backup be performed before repartitioning the system.

**Note:** If you are repartitioning a system that has already been installed, make sure the data has been copied over to the new partition, unmount it and then remove the data from the directory that was in the old partition. Otherwise, it will still consume space in the old partition that will be masked when the new filesystem is mounted. For example, if a system is in single-user mode with no filesystems mounted and the administrator adds a lot of data to the `/tmp` directory, this data will still consume space in `/` once the `/tmp` filesystem is mounted unless it is removed first.",,,,,,,,,,,,,,,,,,,
1.1,1.1.9,Disable USB Storage,Automated,USB storage provides a means to transfer and store files ensuring persistence and availability of the files independent of network connection status. Its popularity and utility has led to USB-based malware being a simple and common means for network infiltration and a first step to establishing a persistent threat within a networked environment.,Restricting USB access on the system will decrease the physical attack surface for a device and diminish the possible vectors to introduce malware.,,"Run the following script to disable `usb-storage`:

```
#!/usr/bin/env bash

{
 l_mname=""usb-storage"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Remediate loadable
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 echo -e "" - setting module: \""$l_mname\"" to be not loadable""
 echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 # Remediate loaded
 if lsmod | grep ""$l_mname"" > /dev/null 2> then
 echo -e "" - unloading module \""$l_mname\""""
 modprobe -r ""$l_mname""
 fi
 # Remediate deny list
 if ! modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$(tr '-' '_' <<< ""$l_mname"")\b""; then
 echo -e "" - deny listing \""$l_mname\""""
 echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 else
 echo -e "" - Nothing to remediate\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
}
```","Run the following script to verify `usb-storage` is disabled:

```
#!/usr/bin/env bash

{
 l_output="""" l_output2=""""
 l_mname=""usb-storage"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Check how module will be loaded
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loadable: \""$l_loadable\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loadable: \""$l_loadable\""""
 fi
 # Check is the module currently loaded
 if ! lsmod | grep ""$l_mname"" > /dev/null 2> then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loaded""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loaded""
 fi
 # Check if the module is deny listed
 if modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$(tr '-' '_' <<< ""$l_mname"")\b""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is deny listed in: \""$(grep -Pl -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*)\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is not deny listed""
 fi
 else
 l_output=""$l_output\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
 # Report results. If no failures output in l_output2, we pass
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```","An alternative solution to disabling the usb-storage module may be found in USBGuard.

Use of USBGuard and construction of USB device policies should be done in alignment with site policy.

**NIST SP 800-53 Rev. 5:**
- SC-18(4)","TITLE:Disable Autorun and Autoplay for Removable Media CONTROL:v8 10.3 DESCRIPTION:Disable autorun and autoplay auto-execute functionality for removable media.;TITLE:Manage USB Devices CONTROL:v7 13.7 DESCRIPTION:If USB storage devices are required, enterprise software should be used that can configure systems to allow the use of specific devices. An inventory of such devices should be maintained.;",10.3,,,X,X,X,13.7,,,,X,X,
1.1.1,,Disable unused filesystems,,"A number of uncommon filesystem types are supported under Linux. Removing support for unneeded filesystem types reduces the local attack surface of the system. If a filesystem type is not needed it should be disabled. Native Linux file systems are designed to ensure that built-in security controls function as expected. Non-native filesystems can lead to unexpected consequences to both the security and functionality of the system and should be used with caution. Many filesystems are created for niche use cases and are not maintained and supported as the operating systems are updated and patched. Users of non-native filesystems should ensure that there is attention and ongoing support for them, especially in light of frequent operating system changes.

Standard network connectivity and Internet access to cloud storage may make the use of non-standard filesystem formats to directly attach heterogeneous devices much less attractive.

**Note**: This should not be considered a comprehensive list of filesystems. You may wish to consider additions to those listed here for your environment. For the current available file system modules on the system see `/usr/lib/modules/$(uname -r)/kernel/fs`

#### Startup scripts

Kernel modules loaded directly via `insmod` will ignore what is configured in the relevant `/etc/modprobe.d/*.conf` files. If modules are still being loaded after a reboot whilst having the correctly configured `blacklist` and `install` command, check for `insmod` entries in startup scripts such as `.bashrc`.

You may also want to check `/usr/lib/modprobe.d/`. Please note that this directory should not be used for user defined module loading. Ensure that all such entries reside in `/etc/modprobe.d/*.conf` files.

#### Return values

By using `/bin/false` as the command in disabling a particular module service two purposes; to convey the meaning of the entry to the user and cause a non-zero return value. The latter can be tested for in scripts. Please note that `insmod` will ignore what is configured in the relevant `/etc/modprobe.d/*.conf` files. The preferred way to load modules is with `modprobe`.",,,,,,,,,,,,,,,,,,,
1.1.1,1.1.1.1,Ensure mounting of squashfs filesystems is disabled,Automated,The `squashfs` filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A `squashfs` image can be used without having to first decompress the image.,"Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.","As Snap packages utilizes `squashfs` as a compressed filesystem, disabling `squashfs` will cause Snap packages to fail.

`Snap` application packages of software are self-contained and work across a range of Linux distributions. This is unlike traditional Linux package management approaches, like APT or RPM, which require specifically adapted packages per Linux distribution on an application update and delay therefore application deployment from developers to their software's end-user. Snaps themselves have no dependency on any external store (""App store""), can be obtained from any source and can be therefore used for upstream software deployment.","Run the following script to disable `squashfs`:

```
#!/usr/bin/env bash

{
 l_mname=""squashfs"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Remediate loadable
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 echo -e "" - setting module: \""$l_mname\"" to be not loadable""
 echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 # Remediate loaded
 if lsmod | grep ""$l_mname"" > /dev/null 2> then
 echo -e "" - unloading module \""$l_mname\""""
 modprobe -r ""$l_mname""
 fi
 # Remediate deny list
 if ! modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 echo -e "" - deny listing \""$l_mname\""""
 echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 else
 echo -e "" - Nothing to remediate\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
}
```","Run the following script to verify `squashfs` is disabled:

```
#!/usr/bin/env bash

{
 l_output="""" l_output2=""""
 l_mname=""squashfs"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Check how module will be loaded
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loadable: \""$l_loadable\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loadable: \""$l_loadable\""""
 fi
 # Check is the module currently loaded
 if ! lsmod | grep ""$l_mname"" > /dev/null 2> then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loaded""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loaded""
 fi
 # Check if the module is deny listed
 if modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is deny listed in: \""$(grep -Pl -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*)\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is not deny listed""
 fi
 else
 l_output=""$l_output\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
 # Report results. If no failures output in l_output2, we pass
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```",,"TITLE:Uninstall or Disable Unnecessary Services on Enterprise Assets and Software CONTROL:v8 4.8 DESCRIPTION:Uninstall or disable unnecessary services on enterprise assets and software, such as an unused file sharing service, web application module, or service function.;TITLE:Ensure Only Approved Ports, Protocols and Services Are Running CONTROL:v7 9.2 DESCRIPTION:Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.;",4.8,,,,X,X,9.2,,,,X,X,
1.1.1,1.1.1.2,Ensure mounting of udf filesystems is disabled,Automated,The `udf` filesystem type is the universal disk format used to implement ISO/IEC 13346 and ECMA-167 specifications. This is an open vendor filesystem type for data storage on a broad range of media. This filesystem type is necessary to support writing DVDs and newer optical disc formats.,"Removing support for unneeded filesystem types reduces the local attack surface of the system. If this filesystem type is not needed, disable it.","Microsoft Azure requires the usage of `udf`. 

`udf` should not be disabled on systems run on Microsoft Azure.","Run the following script to disable the `udf` filesystem:

```
#!/usr/bin/env bash

{
 l_mname=""udf"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Remediate loadable
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 echo -e "" - setting module: \""$l_mname\"" to be not loadable""
 echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 # Remediate loaded
 if lsmod | grep ""$l_mname"" > /dev/null 2> then
 echo -e "" - unloading module \""$l_mname\""""
 modprobe -r ""$l_mname""
 fi
 # Remediate deny list
 if ! modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 echo -e "" - deny listing \""$l_mname\""""
 echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 else
 echo -e "" - Nothing to remediate\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
}
```","Run the following script to verify `udf` is disabled:

```
!/usr/bin/env bash

{
 l_output="""" l_output2=""""
 l_mname=""udf"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Check how module will be loaded
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loadable: \""$l_loadable\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loadable: \""$l_loadable\""""
 fi
 # Check is the module currently loaded
 if ! lsmod | grep ""$l_mname"" > /dev/null 2> then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loaded""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loaded""
 fi
 # Check if the module is deny listed
 if modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is deny listed in: \""$(grep -Pl -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*)\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is not deny listed""
 fi
 else
 l_output=""$l_output\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
 # Report results. If no failures output in l_output2, we pass
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```",,"TITLE:Uninstall or Disable Unnecessary Services on Enterprise Assets and Software CONTROL:v8 4.8 DESCRIPTION:Uninstall or disable unnecessary services on enterprise assets and software, such as an unused file sharing service, web application module, or service function.;TITLE:Ensure Only Approved Ports, Protocols and Services Are Running CONTROL:v7 9.2 DESCRIPTION:Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.;",4.8,,,,X,X,9.2,,,,X,X,
1.1.2,,Configure /tmp,,The /tmp directory is a world-writable directory used for temporary storage by all users and some applications.,,,,,,,,,,,,,,,,,,,
1.1.3,,Configure /var,,The `/var` directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.,,,,,,,,,,,,,,,,,,,
1.1.3,1.1.3.1,Ensure separate partition exists for /var,Automated,The `/var` directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable.,"The reasoning for mounting `/var` on a separate partition is as follows.

#### Protection from resource exhaustion
The default installation only creates a single `/` partition. Since the `/var` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var` and cause unintended behavior across the system as the disk is full. See `man auditd.conf` for details.

#### Fine grained control over the mount
Configuring `/var` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.

#### Protection from exploitation
An example of exploiting `/var` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.","Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","For new installations, during installation create a custom partition setup and specify a separate partition for `/var`.

For systems that were previously installed, create a new partition and configure `/etc/fstab` as appropriate.","Run the following command and verify output shows `/var` is mounted.

Example:

```
# findmnt --kernel /var

TARGET SOURCE FSTYPE OPTIONS
/var /dev/sdb ext4 rw,relatime,seclabel,data=ordered
```","When modifying `/var` it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multi-user mode.","TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,"AJ Lewis, ""LVM HOWTO"", http://tldp.org/HOWTO/LVM-HOWTO/"
1.1.4,,Configure /var/tmp,,The `/var/tmp` directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in `/var/tmp` are to be preserved between reboots.,,,,,,,,,,,,,,,,,,,
1.1.4,1.1.4.1,Ensure separate partition exists for /var/tmp,Automated,The `/var/tmp` directory is a world-writable directory used for temporary storage by all users and some applications. Temporary files residing in `/var/tmp` are to be preserved between reboots.,"The reasoning for mounting `/var/tmp` on a separate partition is as follows.

#### Protection from resource exhaustion
The default installation only creates a single `/` partition. Since the `/var/tmp` directory may contain world-writable files and directories, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/tmp` and cause potential disruption to daemons as the disk is full.

#### Fine grained control over the mount
Configuring `/var/tmp` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limits an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.

#### Protection from exploitation
An example of exploiting `/var/tmp` may be an attacker establishing a hard-link to a system `setuid` program and wait for it to be updated. Once the program was updated, the hard-link would be broken and the attacker would have his own copy of the program. If the program happened to have a security vulnerability, the attacker could continue to exploit the known flaw.","Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","For new installations, during installation create a custom partition setup and specify a separate partition for `/var/tmp`.

For systems that were previously installed, create a new partition and configure `/etc/fstab` as appropriate.","Run the following command and verify output shows `/var/tmp` is mounted.

Example:

```
# findmnt --kernel /var/tmp

TARGET SOURCE FSTYPE OPTIONS
/var/tmp /dev/sdb ext4 rw,relatime,seclabel,data=ordered
```","When modifying `/var/tmp` it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multi-user mode.","TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,"AJ Lewis, ""LVM HOWTO"", http://tldp.org/HOWTO/LVM-HOWTO/"
1.1.5,,Configure /var/log,,The `/var/log` directory is used by system services to store log data.,,,,,,,,,,,,,,,,,,,
1.1.5,1.1.5.1,Ensure separate partition exists for /var/log,Automated,The `/var/log` directory is used by system services to store log data.,"The reasoning for mounting `/var/log` on a separate partition is as follows.

#### Protection from resource exhaustion
The default installation only creates a single `/` partition. Since the `/var/log` directory contains log files which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole.

#### Fine grained control over the mount
Configuring `/var/log` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attackers ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.

#### Protection of log data
As `/var/log` contains log files, care should be taken to ensure the security and integrity of the data and mount point.","Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","For new installations, during installation create a custom partition setup and specify a separate partition for `/var/log` .

For systems that were previously installed, create a new partition and configure `/etc/fstab` as appropriate.","Run the following command and verify output shows `/var/log` is mounted:

```
# findmnt --kernel /var/log

TARGET SOURCE FSTYPE OPTIONS
/var/log /dev/sdb ext4 rw,relatime,seclabel,data=ordered
```","When modifying `/var/log` it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multiuser mode.",TITLE:Ensure Adequate Audit Log Storage CONTROL:v8 8.3 DESCRIPTION:Ensure that logging destinations maintain adequate storage to comply with the enterprise’s audit log management process.;TITLE:Ensure adequate storage for logs CONTROL:v7 6.4 DESCRIPTION:Ensure that all systems that store logs have adequate storage space for the logs generated.;,8.3,,,X,X,X,6.4,,,,X,X,"AJ Lewis, ""LVM HOWTO"", http://tldp.org/HOWTO/LVM-HOWTO/"
1.1.6,,Configure /var/log/audit,,"The auditing daemon, `auditd`, stores log data in the `/var/log/audit` directory.",,,,,,,,,,,,,,,,,,,
1.1.6,1.1.6.1,Ensure separate partition exists for /var/log/audit,Automated,"The auditing daemon, `auditd`, stores log data in the `/var/log/audit` directory.","The reasoning for mounting `/var/log/audit` on a separate partition is as follows.

#### Protection from resource exhaustion
The default installation only creates a single `/` partition. Since the `/var/log/audit` directory contains the `audit.log` file which can grow quite large, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/var/log/audit` and cause `auditd` to trigger it's `space_left_action` as the disk is full. See `man auditd.conf` for details.

#### Fine grained control over the mount
Configuring `/var/log/audit` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.

#### Protection of audit data
As `/var/log/audit` contains audit logs, care should be taken to ensure the security and integrity of the data and mount point.","Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","For new installations, during installation create a custom partition setup and specify a separate partition for `/var/log/audit`.

For systems that were previously installed, create a new partition and configure `/etc/fstab` as appropriate.","Run the following command and verify output shows `/var/log/audit` is mounted:

```
# findmnt --kernel /var/log/audit

TARGET SOURCE FSTYPE OPTIONS
/var/log/audit /dev/sdb ext4 rw,relatime,seclabel,data=ordered
```","When modifying `/var/log/audit` it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multi-user mode.",TITLE:Ensure Adequate Audit Log Storage CONTROL:v8 8.3 DESCRIPTION:Ensure that logging destinations maintain adequate storage to comply with the enterprise’s audit log management process.;TITLE:Ensure adequate storage for logs CONTROL:v7 6.4 DESCRIPTION:Ensure that all systems that store logs have adequate storage space for the logs generated.;,8.3,,,X,X,X,6.4,,,,X,X,"AJ Lewis, ""LVM HOWTO"", http://tldp.org/HOWTO/LVM-HOWTO/"
1.1.7,,Configure /home,,"Please note that home directories could be mounted anywhere and are not necessarily restricted to `/home`, nor restricted to a single location, nor is the name restricted in any way.

Checks can be made by looking in `/etc/passwd`, looking over the mounted file systems with `mount` or querying the relevant database with `getent`.",,,,,,,,,,,,,,,,,,,
1.1.7,1.1.7.1,Ensure separate partition exists for /home,Automated,The `/home` directory is used to support disk storage needs of local users.,"The reasoning for mounting `/home` on a separate partition is as follows.

#### Protection from resource exhaustion
The default installation only creates a single `/` partition. Since the `/home` directory contains user generated data, there is a risk of resource exhaustion. It will essentially have the whole disk available to fill up and impact the system as a whole. In addition, other operations on the system could fill up the disk unrelated to `/home` and impact all local users.

#### Fine grained control over the mount
Configuring `/home` as its own file system allows an administrator to set additional mount options such as `noexec/nosuid/nodev`. These options limit an attacker's ability to create exploits on the system. In the case of `/home` options such as `usrquota/grpquota` may be considered to limit the impact that users can have on each other with regards to disk resource exhaustion. Other options allow for specific behavior. See `man mount` for exact details regarding filesystem-independent and filesystem-specific options.

#### Protection of user data
As `/home` contains user data, care should be taken to ensure the security and integrity of the data and mount point.","Resizing filesystems is a common activity in cloud-hosted servers. Separate filesystem partitions may prevent successful resizing, or may require the installation of additional tools solely for the purpose of resizing operations. The use of these additional tools may introduce their own security considerations.","For new installations, during installation create a custom partition setup and specify a separate partition for `/home`.

For systems that were previously installed, create a new partition and configure `/etc/fstab` as appropriate.","Run the following command and verify output shows `/home` is mounted:

```
# findmnt --kernel /home

TARGET SOURCE FSTYPE OPTIONS
/home /dev/sdb ext4 rw,relatime,seclabel
```","When modifying `/home` it is advisable to bring the system to emergency mode (so auditd is not running), rename the existing directory, mount the new file system, and migrate the data over before returning to multi-user mode.","TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,"AJ Lewis, ""LVM HOWTO"", http://tldp.org/HOWTO/LVM-HOWTO/"
1.1.8,,Configure /dev/shm,,The `/dev/shm` directory is a world-writable directory that can function as shared memory that facilitates inter process communication (IPC),,,,,,,,,,,,,,,,,,,
1.2,,Configure Software Updates,,"Fedora 34/CentOS 9 stream derived Linux distributions use dnf (previously yum) to install and update software packages. Patch management procedures may vary widely between enterprises. Large enterprises may choose to install a local updates server that can be used in place of their distributions servers, whereas a single deployment of a system may prefer to get updates directly. Updates can be performed automatically or manually, depending on the site's policy for patch management. Many large enterprises prefer to test patches on a non-production system before rolling out to production.

For the purpose of this benchmark, the requirement is to ensure that a patch management system is configured and maintained. The specifics on patch update procedures are left to the organization.",,,,,,,,,,,,,,,,,,,
1.2,1.2.4,Ensure repo_gpgcheck is globally activated,Manual,"The `repo_gpgcheck` option, found in the main section of the `/etc/dnf/dnf.conf` and individual `/etc/yum.repos.d/*` files, will perform a GPG signature check on the repodata.",It is important to ensure that the repository data signature is always checked prior to installation to ensure that the software is not tampered with in any way.,"Not all repositories, notably RedHat, support `repo_gpgcheck`. Take care to set this value to false (default) for particular repositories that do not support it. If enabled on repositories that do not support `repo_gpgcheck` installation of packages will fail.

Research is required by the user to determine which repositories is configured on the local system and, from that list, which support `repo_gpgcheck`.","#### Global configuration

Edit `/etc/dnf/dnf.conf` and set `repo_gpgcheck=1` in the `[main]` section.

Example:

```
[main]
repo_gpgcheck=1
```

#### Per repository configuration

First check that the particular repository support GPG checking on the repodata.

Edit any failing files in `/etc/yum.repos.d/*` and set all instances starting with `repo_gpgcheck` to `1`.","#### Global configuration

Run the following command:

```
grep ^repo_gpgcheck /etc/dnf/dnf.conf
```

Verify that `repo_gpgcheck` is set to `1`

#### Per repository configuration

Configuration in `/etc/yum.repos.d/` takes precedence over the global configuration.

As an example, to list all the configured repositories, excluding ""fedoraproject.org"", that specifically disables `repo_gpgcheck`, run the following command:

```
# REPO_URL=""fedoraproject.org""
# for repo in $(grep -l ""repo_gpgcheck=0"" /etc/yum.repos.d/* ); do
 if ! grep ""${REPO_URL}"" ""${repo}"" &>/dev/null; then
 echo ""${repo}""
 fi
done
```

Per the research that was done on which repositories does not support `repo_gpgcheck`, change the `REPO_URL` variable and run the test.",,"TITLE:Perform Automated Operating System Patch Management CONTROL:v8 7.3 DESCRIPTION:Perform operating system updates on enterprise assets through automated patch management on a monthly, or more frequent, basis.;TITLE:Deploy Automated Operating System Patch Management Tools CONTROL:v7 3.4 DESCRIPTION:Deploy automated software update tools in order to ensure that the operating systems are running the most recent security updates provided by the software vendor.;",7.3,,,X,X,X,3.4,,,X,X,X,
1.3,,Filesystem Integrity Checking,,"AIDE is a file integrity checking tool, similar in nature to Tripwire. While it cannot prevent intrusions, it can detect unauthorized changes to configuration files by alerting when the files are changed. When setting up AIDE, decide internally what the site policy will be concerning integrity checking. Review the AIDE quick start guide and AIDE documentation before proceeding.",,,,,,,,,,,,,,,,,,,
1.4,,Secure Boot Settings,,"The recommendations in this section focus on securing the bootloader and settings involved in the boot process directly.

**Note:** 
- In Fedora 28 based distributions, the kernel command-line parameters for systems using the GRUB2 bootloader were defined in the `kernelopts` environment variable. This variable was stored in the `/boot/grub2/grubenv` file for each kernel boot entry. However, storing the kernel command-line parameters using `kernelopts` was not robust. Therefore, the `kernelopts` has been removed and the kernel command-line parameters are now stored in the Boot Loader Specification (BLS) snippet, instead of in the `/boot/loader/entries/<KERNEL_BOOT_ENTRY>.conf` file.
- Boot loader configuration files are unified across CPU architectures
 - Configuration files for the GRUB boot loader are now stored in the `/boot/grub2/` directory on all supported CPU architectures. The `/boot/efi/EFI/redhat/grub.cfg` file, which GRUB previously used as the main configuration file on UEFI systems, now simply loads the `/boot/grub2/grub.cfg` file.
 - This change simplifies the layout of the GRUB configuration file, improves user experience, and provides the following notable benefits:
 - You can boot the same installation with either EFI or legacy BIOS.
 - You can use the same documentation and commands for all architectures.
 - GRUB configuration tools are more robust, because they no longer rely on symbolic links and they do not have to handle platform-specific cases.
 - The usage of the GRUB configuration files is aligned with images generated by CoreOS Assembler (COSA) and OSBuild.
 - The usage of the GRUB configuration files is aligned with other Linux distributions.
 - Fedora 34 based distributions no longer boot on 32-bit UEFI
- Support for the 32-bit UEFI firmware was removed from the GRUB and shim boot loaders. As a consequence, Fedora 34 based distributions requires a 64-bit UEFI, and can no longer boot on 64-bit systems that use a 32-bit UEFI.
 - The following packages have been removed as part of this change:
 - `grub2-efi-ia32`
 - `grub2-efi-ia32-cdboot`
 - `grub2-efi-ia32-modules`
 - `shim-ia32`

**Reference:** [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_kernel_considerations-in-adopting-rhel-9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_kernel_considerations-in-adopting-rhel-9)",,,,,,,,,,,,,,,,,,,
1.5,,Additional Process Hardening,,,,,,,,,,,,,,,,,,,,,
1.6,,Mandatory Access Control,,"Mandatory Access Control (MAC) provides an additional layer of access restrictions to processes on top of the base Discretionary Access Controls. By restricting how processes can access files and resources on a system the potential impact from vulnerabilities in the processes can be reduced.

**Impact:** Mandatory Access Control limits the capabilities of applications and daemons on a system, while this can prevent unauthorized access the configuration of MAC can be complex and difficult to implement correctly preventing legitimate access from occurring.",,,,,,,,,,,,,,,,,,,
1.6.1,,Configure SELinux,,"SELinux implements Mandatory Access Control (MAC). Every process and system resource has a special security label called an SELinux context. A SELinux context, sometimes referred to as an SELinux label, is an identifier which abstracts away the system-level details and focuses on the security properties of the entity. Not only does this provide a consistent way of referencing objects in the SELinux policy, but it also removes any ambiguity that can be found in other identification methods. For example, a file can have multiple valid path names on a system that makes use of bind mounts. 

The SELinux policy uses these contexts in a series of rules which define how processes can interact with each other and the various system resources. By default, the policy does not allow any interaction unless a rule explicitly grants access. 

In Fedora 34 Family Linux distributions, system services are controlled by the systemd daemon; systemd starts and stops all services, and users and processes communicate with systemd using the systemctl utility. The systemd daemon can consult the SELinux policy and check the label of the calling process and the label of the unit file that the caller tries to manage, and then ask SELinux whether or not the caller is allowed the access. This approach strengthens access control to critical system capabilities, which include starting and stopping system services.

This automatically limits the damage that the software can do to files accessible by the calling user. The user does not need to take any action to gain this benefit. For an action to occur, both the traditional DAC permissions must be satisfied as well as the SELinux MAC rules. The action will not be allowed if either one of these models does not permit the action. In this way, SELinux rules can only make a system's permissions more restrictive and secure. SELinux requires a complex policy to allow all the actions required of a system under normal operation. Two such policies have been designed for use with Fedora 34 Family Linux distributions and are included with the system: `targeted` and `mls`. These are described as follows:

- `targeted`: targeted processes run in their own domain, called a confined domain. In a confined domain, the files that a targeted process has access to are limited. If a confined process is compromised by an attacker, the attacker’s access to resources and the possible damage they can do is also limited. SELinux denies access to these resources and logs the denial.
- `mls`: implements Multi-Level Security (MLS), which introduces even more kinds of labels (sensitivity and category) and rules that govern access based on these.

This section provides guidance for the configuration of the `targeted` policy.

**Notes:** 

- Remember that SELinux policy rules are checked after DAC rules. SELinux policy rules are not used if DAC rules deny access first, which means that no SELinux denial is logged if the traditional DAC rules prevent the access.
- This section only applies if SELinux is in use on the system. Additional Mandatory Access Control systems exist.
- To avoid incorrect SELinux labeling and subsequent problems, ensure that you start services using a systemctl start command.

**References:**

1. NSA SELinux resources:
 1. [http://www.nsa.gov/research/selinux ](http://www.nsa.gov/research/selinux )
 2. [http://www.nsa.gov/research/selinux/list.shtml ](http://www.nsa.gov/research/selinux/list.shtml )
2. Fedora SELinux resources:
 1. FAQ: [http://docs.fedoraproject.org/selinux-faq ](http://docs.fedoraproject.org/selinux-faq )
 2. User Guide: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/using_selinux/index](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/using_selinux/index)
 3. Managing Services Guide: [http://docs.fedoraproject.org/selinux-managing-confined-services-guide ](http://docs.fedoraproject.org/selinux-managing-confined-services-guide )
3. SELinux Project web page and wiki:
 1. [http://www.selinuxproject.org](http://www.selinuxproject.org)",,,,,,,,,,,,,,,,,,,
1.6.1,1.6.1.5,Ensure the SELinux mode is enforcing,Automated,"SELinux can run in one of three modes: disabled, permissive, or enforcing:
- Enforcing - Is the default, and recommended, mode of operation; in enforcing mode SELinux operates normally, enforcing the loaded security policy on the entire system.
- Permissive - The system acts as if SELinux is enforcing the loaded security policy, including labeling objects and emitting access denial entries in the logs, but it does not actually deny any operations. While not recommended for production systems, permissive mode can be helpful for SELinux policy development.
- Disabled - Is strongly discouraged; not only does the system avoid enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future

_Note: you can set individual domains to permissive mode while the system runs in enforcing mode. For example, to make the httpd_t domain permissive:_
```
# semanage permissive -a httpd_t","Running SELinux in disabled mode the system not only avoids enforcing the SELinux policy, it also avoids labeling any persistent objects such as files, making it difficult to enable SELinux in the future. 

Running SELinux in Permissive mode, though helpful for developing SELinux policy, only logs access denial entries, but does not deny any operations.",,"Run the following command to set SELinux's running mode:

```
# setenforce 1
```

Edit the `/etc/selinux/config` file to set the SELINUX parameter:

For Enforcing mode:

```
SELINUX=enforcing
```","Run the following commands and ensure output matches:

Run the following command to verify SELinux's current mode:
```
# getenforce

Enforcing
```

Run the following command to verify SELinux's configured mode:
```
# grep -i SELINUX=enforcing /etc/selinux/config

SELINUX=enforcing
```",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/selinux_users_and_administrators_guide/sect-security-enhanced_linux-introduction-selinux_modes:CCI-002165: The information system enforces organization-defined discretionary access control policies over defined subjects and objects.:NIST SP 800-53 Revision 4 :: AC-3 (4):CCI-002696: The information system verifies correct operation of organization-defined security functions.:NIST SP 800-53 Revision 4 :: SI-6 a
1.7,,Command Line Warning Banners,,"Presenting a warning message prior to the normal user login may assist in the prosecution of trespassers on the computer system. Changing some of these login banners also has the side effect of hiding OS version information and other detailed system information from attackers attempting to target specific exploits at a system.

Guidelines published by the US Department of Defense require that warning messages include at least the name of the organization that owns the system, the fact that the system is subject to monitoring and that such monitoring is in compliance with local statutes, and that use of the system implies consent to such monitoring. It is important that the organization's legal counsel review the content of all messages before any system modifications are made, as these warning messages are inherently site-specific. More information (including citations of relevant case law) can be found at http://www.justice.gov/criminal/cybercrime/

The `/etc/motd`, `/etc/issue`, and `/etc/issue.net` files govern warning banners for standard command line logins for both local and remote users.

**Note:** The text provided in the remediation actions for these items is intended as an example only. Please edit to include the specific text for your organization as approved by your legal department.",,,,,,,,,,,,,,,,,,,
1.8,,GNOME Display Manager,,"The GNOME Display Manager (GDM) is a program that manages graphical display servers and handles graphical user logins.

**Note:** If GDM is not installed on the system, this section can be skipped",,,,,,,,,,,,,,,,,,,
1.8,1.8.6,Ensure GDM automatic mounting of removable media is disabled,Automated,By default GNOME automatically mounts removable media when inserted as a convenience to the user.,With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.,The use of portable hard drives is very common for workstation users. If your organization allows the use of portable storage or media on workstations and physical access controls to workstations is considered adequate there is little value add in turning off automounting.,"Run the following script to disable automatic mounting of media for all GNOME users:

```
#!/usr/bin/env bash

{
 l_pkgoutput="""" l_output="""" l_output2=""""
 l_gpbame=""local"" # Set to desired dconf profile name (defaule is local)
 # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\n
 # determine system's package manager
 if command -v dpkg-query > /dev/null 2> then
 l_pq=""dpkg-query -W""
 elif command -v rpm > /dev/null 2> then
 l_pq=""rpm -q""
 fi
 # Check if GDM is installed
 l_pcl=""gdm gdm3"" # Space seporated list of packages to check
 for l_pn in $l_pcl; do
 $l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n - Package: \""$l_pn\"" exists on the system\n - checking configuration""
 done
 echo -e ""$l_packageout""
 # Check configuration (If applicable)
 if [ -n ""$l_pkgoutput"" ]; then
 echo -e ""$l_pkgoutput""
 # Look for existing settings and set variables if they exist
 l_kfile=""$(grep -Prils -- '^\h*automount\b' /etc/dconf/db/*.d)""
 l_kfile2=""$(grep -Prils -- '^\h*automount-open\b' /etc/dconf/db/*.d)""
 # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
 if [ -f ""$l_kfile"" ]; then
 l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
 echo "" - updating dconf profile name to \""$l_gpname\""""
 elif [ -f ""$l_kfile2"" ]; then
 l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
 echo "" - updating dconf profile name to \""$l_gpname\""""
 fi
 # check for consistency (Clean up configuration if needed)
 if [ -f ""$l_kfile"" ] && [ ""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
 sed -ri ""/^\s*automount\s*=/s/^/# /"" ""$l_kfile""
 l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
 fi
 if [ -f ""$l_kfile2"" ] && [ ""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
 sed -ri ""/^\s*automount-open\s*=/s/^/# /"" ""$l_kfile2""
 fi
 [ -n ""$l_kfile"" ] && l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
 # Check if profile file exists
 if grep -Pq -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*; then
 echo -e ""\n - dconf database profile exists in: \""$(grep -Pl -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*)\""""
 else
 [ ! -f ""/etc/dconf/profile/user"" ] && l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
 echo -e "" - creating dconf database profile""
 {
 echo -e ""\nuser-db:user""
 echo ""system-db:$l_gpname""
 } >> ""$l_gpfile""
 fi
 # create dconf directory if it doesn't exists
 l_gpdir=""/etc/dconf/db/$l_gpname.d""
 if [ -d ""$l_gpdir"" ]; then
 echo "" - The dconf database directory \""$l_gpdir\"" exists""
 else
 echo "" - creating dconf database directory \""$l_gpdir\""""
 mkdir ""$l_gpdir""
 fi
 # check automount-open setting
 if grep -Pqs -- '^\h*automount-open\h*=\h*false\b' ""$l_kfile""; then
 echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
 else
 echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
 ! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b' ""$l_kfile"" && echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
 sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a \\nautomount-open=false'
 fi
 # check automount setting
 if grep -Pqs -- '^\h*automount\h*=\h*false\b' ""$l_kfile""; then
 echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
 else
 echo "" - creating \""automount\"" entry in \""$l_kfile\""""
 ! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b' ""$l_kfile"" && echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
 sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a \\nautomount=false'
 fi
 else
 echo -e ""\n - GNOME Desktop Manager package is not installed on the system\n - Recommendation is not applicable""
 fi
 # update dconf database
 dconf update
}
```

**OR**

Run the following command to uninstall the GNOME desktop Manager package:

```
# dnf remove gdm
```","Run the following script to verify automatic mounting is disabled:

```
#!/usr/bin/env bash

{
 l_pkgoutput="""" l_output="""" l_output2=""""
 # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\n
 # determine system's package manager
 if command -v dpkg-query > /dev/null 2> then
 l_pq=""dpkg-query -W""
 elif command -v rpm > /dev/null 2> then
 l_pq=""rpm -q""
 fi
 # Check if GDM is installed
 l_pcl=""gdm gdm3"" # Space seporated list of packages to check
 for l_pn in $l_pcl; do
 $l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n - Package: \""$l_pn\"" exists on the system\n - checking configuration""
 done
 # Check configuration (If applicable)
 if [ -n ""$l_pkgoutput"" ]; then
 echo -e ""$l_pkgoutput""
 # Look for existing settings and set variables if they exist
 l_kfile=""$(grep -Prils -- '^\h*automount\b' /etc/dconf/db/*.d)""
 l_kfile2=""$(grep -Prils -- '^\h*automount-open\b' /etc/dconf/db/*.d)""
 # Set profile name based on dconf db directory ({PROFILE_NAME}.d)
 if [ -f ""$l_kfile"" ]; then
 l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile"")""
 elif [ -f ""$l_kfile2"" ]; then
 l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<< ""$l_kfile2"")""
 fi
 # If the profile name exist, continue checks
 if [ -n ""$l_gpname"" ]; then
 l_gpdir=""/etc/dconf/db/$l_gpname.d""
 # Check if profile file exists
 if grep -Pq -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*; then
 l_output=""$l_output\n - dconf database profile file \""$(grep -Pl -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*)\"" exists""
 else
 l_output2=""$l_output2\n - dconf database profile isn't set""
 fi
 # Check if the dconf database file exists
 if [ -f ""/etc/dconf/db/$l_gpname"" ]; then
 l_output=""$l_output\n - The dconf database \""$l_gpname\"" exists""
 else
 l_output2=""$l_output2\n - The dconf database \""$l_gpname\"" doesn't exist""
 fi
 # check if the dconf database directory exists
 if [ -d ""$l_gpdir"" ]; then
 l_output=""$l_output\n - The dconf directory \""$l_gpdir\"" exitst""
 else
 l_output2=""$l_output2\n - The dconf directory \""$l_gpdir\"" doesn't exist""
 fi
 # check automount setting
 if grep -Pqrs -- '^\h*automount\h*=\h*false\b' ""$l_kfile""; then
 l_output=""$l_output\n - \""automount\"" is set to false in: \""$l_kfile\""""
 else
 l_output2=""$l_output2\n - \""automount\"" is not set correctly""
 fi
 # check automount-open setting
 if grep -Pqs -- '^\h*automount-open\h*=\h*false\b' ""$l_kfile2""; then
 l_output=""$l_output\n - \""automount-open\"" is set to false in: \""$l_kfile2\""""
 else
 l_output2=""$l_output2\n - \""automount-open\"" is not set correctly""
 fi
 else
 # Setings don't exist. Nothing further to check
 l_output2=""$l_output2\n - neither \""automount\"" or \""automount-open\"" is set""
 fi
 else
 l_output=""$l_output\n - GNOME Desktop Manager package is not installed on the system\n - Recommendation is not applicable""
 fi
 # Report results. If no failures output in l_output2, we pass
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```",,TITLE:Disable Autorun and Autoplay for Removable Media CONTROL:v8 10.3 DESCRIPTION:Disable autorun and autoplay auto-execute functionality for removable media.;TITLE:Configure Devices Not To Auto-run Content CONTROL:v7 8.5 DESCRIPTION:Configure devices to not auto-run content from removable media.;,10.3,,,X,X,X,8.5,,,X,X,X,https://access.redhat.com/solutions/20107
1.8,1.8.7,Ensure GDM disabling automatic mounting of removable media is not overridden,Automated,"By default GNOME automatically mounts removable media when inserted as a convenience to the user

By using the lockdown mode in dconf, you can prevent users from changing specific settings.

To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory. The files inside this directory contain a list of keys or subpaths to lock. Just as with the keyfiles, you may add any number of files to this directory.

_Example Lock File:_
```
# Lock automount settings
/org/gnome/desktop/media-handling/automount
/org/gnome/desktop/media-handling/automount-open
```",With automounting enabled anyone with physical access could attach a USB drive or disc and have its contents available in system even if they lacked permissions to mount it themselves.,The use of portable hard drives is very common for workstation users,"Run the following script to lock disable automatic mounting of media for all GNOME users:

```
#!/usr/bin/env bash

{
 # Check if GNMOE Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\n
 # determine system's package manager
 l_pkgoutput=""""
 if command -v dpkg-query > /dev/null 2> then
 l_pq=""dpkg-query -W""
 elif command -v rpm > /dev/null 2> then
 l_pq=""rpm -q""
 fi
 # Check if GDM is installed
 l_pcl=""gdm gdm3"" # Space seporated list of packages to check
 for l_pn in $l_pcl; do
 $l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""y"" && echo -e ""\n - Package: \""$l_pn\"" exists on the system\n - remediating configuration if needed""
 done
 # Check configuration (If applicable)
 if [ -n ""$l_pkgoutput"" ]; then
 # Look for automount to determine profile in use, needed for remaining tests
 l_kfd=""/etc/dconf/db/$(grep -Psril '^\h*automount\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set directory of key file to be locked
 # Look for automount-open to determine profile in use, needed for remaining tests
 l_kfd2=""/etc/dconf/db/$(grep -Psril '^\h*automount-open\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set directory of key file to be locked
 if [ -d ""$l_kfd"" ]; then # If key file directory doesn't exist, options can't be locked
 if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/automount\b' ""$l_kfd""; then
 echo "" - \""automount\"" is locked in \""$(grep -Pril '^\h*\/org/gnome\/desktop\/media-handling\/automount\b' ""$l_kfd"")\""""
 else
 echo "" - creating entry to lock \""automount\""""
 [ ! -d ""$l_kfd""/locks ] && echo ""creating directory $l_kfd/locks"" && mkdir ""$l_kfd""/locks
 {
 echo -e '\n# Lock desktop media-handling automount setting'
 echo '/org/gnome/desktop/media-handling/automount'
 } >> ""$l_kfd""/locks/00-media-automount 
 fi
 else
 echo -e "" - \""automount\"" is not set so it can not be locked\n - Please follow Recommendation \""Ensure GDM automatic mounting of removable media is disabled\"" and follow this Recommendation again""
 fi
 if [ -d ""$l_kfd2"" ]; then # If key file directory doesn't exist, options can't be locked
 if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/automount-open\b' ""$l_kfd2""; then
 echo "" - \""automount-open\"" is locked in \""$(grep -Pril '^\h*\/org/gnome\/desktop\/media-handling\/automount-open\b' ""$l_kfd2"")\""""
 else
 echo "" - creating entry to lock \""automount-open\""""
 [ ! -d ""$l_kfd2""/locks ] && echo ""creating directory $l_kfd2/locks"" && mkdir ""$l_kfd2""/locks
 {
 echo -e '\n# Lock desktop media-handling automount-open setting'
 echo '/org/gnome/desktop/media-handling/automount-open'
 } >> ""$l_kfd2""/locks/00-media-automount
 fi
 else
 echo -e "" - \""automount-open\"" is not set so it can not be locked\n - Please follow Recommendation \""Ensure GDM automatic mounting of removable media is disabled\"" and follow this Recommendation again""
 fi
 # update dconf database
 dconf update
 else
 echo -e "" - GNOME Desktop Manager package is not installed on the system\n - Recommendation is not applicable""
 fi
}
```","Run the following script to verify disable automatic mounting is locked:

```
#!/usr/bin/env bash

{
 # Check if GNOME Desktop Manager is installed. If package isn't installed, recommendation is Not Applicable\n
 # determine system's package manager
 l_pkgoutput=""""
 if command -v dpkg-query > /dev/null 2> then
 l_pq=""dpkg-query -W""
 elif command -v rpm > /dev/null 2> then
 l_pq=""rpm -q""
 fi
 # Check if GDM is installed
 l_pcl=""gdm gdm3"" # Space seporated list of packages to check
 for l_pn in $l_pcl; do
 $l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n - Package: \""$l_pn\"" exists on the system\n - checking configuration""
 done
 # Check configuration (If applicable)
 if [ -n ""$l_pkgoutput"" ]; then
 l_output="""" l_output2=""""
 # Look for idle-delay to determine profile in use, needed for remaining tests
 l_kfd=""/etc/dconf/db/$(grep -Psril '^\h*automount\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set directory of key file to be locked
 l_kfd2=""/etc/dconf/db/$(grep -Psril '^\h*automount-open\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set directory of key file to be locked
 if [ -d ""$l_kfd"" ]; then # If key file directory doesn't exist, options can't be locked
 if grep -Piq '^\h*\/org/gnome\/desktop\/media-handling\/automount\b' ""$l_kfd""; then
 l_output=""$l_output\n - \""automount\"" is locked in \""$(grep -Pil '^\h*\/org/gnome\/desktop\/media-handling\/automount\b' ""$l_kfd"")\""""
 else
 l_output2=""$l_output2\n - \""automount\"" is not locked""
 fi
 else
 l_output2=""$l_output2\n - \""automount\"" is not set so it can not be locked""
 fi
 if [ -d ""$l_kfd2"" ]; then # If key file directory doesn't exist, options can't be locked
 if grep -Piq '^\h*\/org/gnome\/desktop\/media-handling\/automount-open\b' ""$l_kfd2""; then
 l_output=""$l_output\n - \""lautomount-open\"" is locked in \""$(grep -Pril '^\h*\/org/gnome\/desktop\/media-handling\/automount-open\b' ""$l_kfd2"")\""""
 else
 l_output2=""$l_output2\n - \""automount-open\"" is not locked""
 fi
 else
 l_output2=""$l_output2\n - \""automount-open\"" is not set so it can not be locked""
 fi
 else
 l_output=""$l_output\n - GNOME Desktop Manager package is not installed on the system\n - Recommendation is not applicable""
 fi
 # Report results. If no failures output in l_output2, we pass
 [ -n ""$l_pkgoutput"" ] && echo -e ""\n$l_pkgoutput""
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```",,TITLE:Disable Autorun and Autoplay for Removable Media CONTROL:v8 10.3 DESCRIPTION:Disable autorun and autoplay auto-execute functionality for removable media.;TITLE:Configure Devices Not To Auto-run Content CONTROL:v7 8.5 DESCRIPTION:Configure devices to not auto-run content from removable media.;,10.3,,,X,X,X,8.5,,,X,X,X,https://help.gnome.org/admin/system-admin-guide/stable/dconf-lockdown.html.en
2,,Services,,"While applying system updates and patches helps correct known vulnerabilities, one of the best ways to protect the system against as yet unreported vulnerabilities is to disable all services that are not required for normal system operation. This prevents the exploitation of vulnerabilities discovered at a later date. If a service is not enabled, it cannot be exploited. The actions in this section of the document provide guidance on some services which can be safely disabled and under which circumstances, greatly reducing the number of possible threats to the resulting system. Additionally, some services which should remain enabled but with secure configuration are covered as well as insecure service clients.",,,,,,,,,,,,,,,,,,,
2.1,,Time Synchronization,,It is recommended that physical systems and virtual guests lacking direct access to the physical host's clock be configured to synchronize their time using a service such as NTP or chrony.,,,,,,,,,,,,,,,,,,,
2.2,,Special Purpose Services,,"This section describes services that are installed on systems that specifically need to run these services. If any of these services are not required, it is recommended that the package be removed, or the service be masked to reduce the potential attack surface.

**Note:** This should not be considered a comprehensive list of services not required for normal system operation. You may wish to consider additions to those listed here for your environment",,,,,,,,,,,,,,,,,,,
2.2,2.2.2,Ensure Avahi Server is not installed,Automated,"Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD service discovery. Avahi allows programs to publish and discover services and hosts running on a local network with no specific configuration. For example, a user can plug a computer into a network and Avahi automatically finds printers to print to, files to look at and people to talk to, as well as network services running on the machine.",Automatic discovery of network services is not normally required for system functionality. It is recommended to remove this package to reduce the potential attack surface.,,"Run the following commands to stop, mask and remove `avahi`:

```
# systemctl stop avahi-daemon.socket avahi-daemon.service
```

```
# dnf remove avahi
```","Run one of the following command to verify `avahi` is not installed:

```
# rpm -q avahi

package avahi is not installed
```","**NIST SP 800-53 Rev. 5:**
- CM-7","TITLE:Uninstall or Disable Unnecessary Services on Enterprise Assets and Software CONTROL:v8 4.8 DESCRIPTION:Uninstall or disable unnecessary services on enterprise assets and software, such as an unused file sharing service, web application module, or service function.;TITLE:Ensure Only Approved Ports, Protocols and Services Are Running CONTROL:v7 9.2 DESCRIPTION:Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.;",4.8,,,,X,X,9.2,,,,X,X,
2.3,,Service Clients,,"A number of insecure services exist. While disabling the servers prevents a local attack against these services, it is advised to remove their clients unless they are required.

**Note:** This should not be considered a comprehensive list of insecure service clients. You may wish to consider additions to those listed here for your environment.",,,,,,,,,,,,,,,,,,,
3,,Network Configuration,,"This section provides guidance on for securing the network configuration of the system through kernel parameters, access list control, and firewall settings.

**Note:**
- sysctl settings are defined through files in `/usr/lib/sysctl.d/`, `/run/sysctl.d/`, and `/etc/sysctl.d/`.
- Files must have the ""`.conf`"" extension. 
- Vendors settings live in `/usr/lib/sysctl.d/`
- To override a whole file, create a new file with the same name in `/etc/sysctl.d/` and put new settings there.
- To override only specific settings, add a file with a lexically later name in `/etc/sysctl.d/` and put new settings there.
- The paths where sysctl preload files usually exist
 - `/run/sysctl.d/*.conf`
 - `/etc/sysctl.d/*.conf`
 - `/usr/local/lib/sysctl.d/*.conf`
 - `/usr/lib/sysctl.d/*.conf`
 - `/lib/sysctl.d/*.conf`
 - `/etc/sysctl.conf`",,,,,,,,,,,,,,,,,,,
3.1,,Disable unused network protocols and devices,,"To reduce the attack surface of a system, unused network protocols and devices should be disabled.

The Linux kernel modules support several network protocols that are not commonly used. If these protocols are not needed, it is recommended that they be disabled in the kernel.",,,,,,,,,,,,,,,,,,,
3.1,3.1.3,Ensure TIPC is disabled,Automated,The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communication between cluster nodes.,"If the protocol is not being used, it is recommended that kernel module not be loaded, disabling the service to reduce the potential attack surface.",,"Run the following script to disable `tipc`:

```
#!/usr/bin/env bash

{
 l_mname=""tipc"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Remediate loadable
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if ! grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 echo -e "" - setting module: \""$l_mname\"" to be not loadable""
 echo -e ""install $l_mname /bin/false"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 # Remediate loaded
 if lsmod | grep ""$l_mname"" > /dev/null 2> then
 echo -e "" - unloading module \""$l_mname\""""
 modprobe -r ""$l_mname""
 fi
 # Remediate deny list
 if ! modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 echo -e "" - deny listing \""$l_mname\""""
 echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
 fi
 else
 echo -e "" - Nothing to remediate\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
}
```","Run the following script to verify `tipc` is disabled:

```
#!/usr/bin/env bash

{
 l_output="""" l_output2=""""
 l_mname=""tipc"" # set module name
 # Check if the module exists on the system
 if [ -z ""$(modprobe -n -v ""$l_mname"" 2>&1 | grep -Pi -- ""\h*modprobe:\h+FATAL:\h+Module\h+$l_mname\h+not\h+found\h+in\h+directory"")"" ]; then
 # Check how module will be loaded
 l_loadable=""$(modprobe -n -v ""$l_mname"")""
 [ ""$(wc -l <<< ""$l_loadable"")"" -gt ""1"" ] && l_loadable=""$(grep -P -- ""(^\h*install|\b$l_mname)\b"" <<< ""$l_loadable"")""
 if grep -Pq -- '^\h*install \/bin\/(true|false)' <<< ""$l_loadable""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loadable: \""$l_loadable\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loadable: \""$l_loadable\""""
 fi
 # Check is the module currently loaded
 if ! lsmod | grep ""$l_mname"" > /dev/null 2> then
 l_output=""$l_output\n - module: \""$l_mname\"" is not loaded""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is loaded""
 fi
 # Check if the module is deny listed
 if modprobe --showconfig | grep -Pq -- ""^\h*blacklist\h+$l_mname\b""; then
 l_output=""$l_output\n - module: \""$l_mname\"" is deny listed in: \""$(grep -Pl -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*)\""""
 else
 l_output2=""$l_output2\n - module: \""$l_mname\"" is not deny listed""
 fi
 else
 l_output=""$l_output\n - Module \""$l_mname\"" doesn't exist on the system""
 fi
 # Report results. If no failures output in l_output2, we pass
 if [ -z ""$l_output2"" ]; then
 echo -e ""\n- Audit Result:\n ** PASS **\n$l_output\n""
 else
 echo -e ""\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n$l_output2\n""
 [ -n ""$l_output"" ] && echo -e ""\n- Correctly set:\n$l_output\n""
 fi
}
```",,"TITLE:Ensure Only Approved Ports, Protocols and Services Are Running CONTROL:v7 9.2 DESCRIPTION:Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.;TITLE:Limit Open Ports, Protocols, and Services CONTROL:v6 9.1 DESCRIPTION:Ensure that only ports, protocols, and services with validated business needs are running on each system.;",,,,,,,9.2,,,,X,X,
3.2,,Network Parameters (Host Only),,"The following network parameters are intended for use if the system is to act as a host only. A system is considered host only if the system has a single interface, or has multiple interfaces but will not be configured as a router.

**Note:**
- sysctl settings are defined through files in `/usr/lib/sysctl.d/`, `/run/sysctl.d/`, and `/etc/sysctl.d/`.
- Files must have the ""`.conf`"" extension. 
- Vendors settings live in `/usr/lib/sysctl.d/`
- To override a whole file, create a new file with the same name in `/etc/sysctl.d/` and put new settings there.
- To override only specific settings, add a file with a lexically later name in `/etc/sysctl.d/` and put new settings there.
- The paths where sysctl preload files usually exist
 - `/run/sysctl.d/*.conf`
 - `/etc/sysctl.d/*.conf`
 - `/usr/local/lib/sysctl.d/*.conf`
 - `/usr/lib/sysctl.d/*.conf`
 - `/lib/sysctl.d/*.conf`
 - `/etc/sysctl.conf`",,,,,,,,,,,,,,,,,,,
3.3,,Network Parameters (Host and Router),,"The following network parameters are intended for use on both host only and router systems. A system acts as a router if it has at least two interfaces and is configured to perform routing functions.

**Note:**
- sysctl settings are defined through files in `/usr/lib/sysctl.d/`, `/run/sysctl.d/`, and `/etc/sysctl.d/`.
- Files must have the ""`.conf`"" extension. 
- Vendors settings live in `/usr/lib/sysctl.d/`
- To override a whole file, create a new file with the same name in `/etc/sysctl.d/` and put new settings there.
- To override only specific settings, add a file with a lexically later name in `/etc/sysctl.d/` and put new settings there.
- The paths where sysctl preload files usually exist
 - `/run/sysctl.d/*.conf`
 - `/etc/sysctl.d/*.conf`
 - `/usr/local/lib/sysctl.d/*.conf`
 - `/usr/lib/sysctl.d/*.conf`
 - `/lib/sysctl.d/*.conf`
 - `/etc/sysctl.conf`",,,,,,,,,,,,,,,,,,,
3.4,,Configure Host Based Firewall,,"A Host Based Firewall, on a Linux system, is a set of rules. When a data packet moves into or out of a protected network space, its contents (in particular, information about its origin, target, and the protocol it plans to use) are tested against the firewall rules to see if it should be allowed through

To provide a Host Based Firewall, the Linux kernel includes support for nftables.
 - nftables - A subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames. nftables is supposed to replace certain parts of Netfilter, while keeping and reusing most of it. nftables utilizes the building blocks of the Netfilter infrastructure, such as the existing hooks into the networking stack, connection tracking system, userspace queueing component, and logging subsystem.

In order to configure firewall rules for nftables, a firewall utility needs to be installed. Guidance has been included for the following firewall utilities:
 - FirewallD - Provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables backend. Starting in v0.6.0, FirewallD added support for acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program. firewalld supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles. 
 - nftables - Includes the nft utility for configuration of the nftables subsystem of the Linux kernel

**Note:**
- Only **one** method should be used to configure a firewall on the system. Use of more than one method could produce unexpected results.
- This section is intended only to ensure the resulting firewall rules are in place, not how they are configured.
- The `ipset` and `iptables-nft` packages have been deprecated in Fedora 34 based Linux distributions. This includes deprecation of nft-variants such as `iptables`, `ip6tables`, `arptables`, and `ebtables` utilities. If you are using any of these tools, for example, because you upgraded from an earlier version, we recommend migrating to the nft command line tool provided by the nftables package.",,,,,,,,,,,,,,,,,,,
3.4.1,,Configure a firewall utility,,"In order to configure firewall rules for Netfilter or nftables, a firewall utility needs to be installed. Guidance has been included for the following firewall utilities:
- FirewallD:
 - Provides firewall features by acting as a front-end for the Linux kernel's netfilter framework via the nftables userspace utility, acting as an alternative to the nft command line program. firewalld supports both IPv4 and IPv6 networks and can administer separate firewall zones with varying degrees of trust as defined in zone profiles.
 - Use the firewalld utility for simple firewall use cases. The utility is easy to use and covers the typical use cases for these scenarios.
- NFTables:
 - Includes the nft utility for configuration of the nftables subsystem of the Linux kernel
 - Use the nftables utility to set up complex and performance critical firewalls, such as for a whole network.

**Note:**
- Only **one** method should be used to configure a firewall on the system. Use of more than one method could produce unexpected results.
- IPTables are deprecated in this release, and not covered in this Benchmark. The iptables utility on Fedora 34/CentOS 9 stream based Linux distributions uses the nf_tables kernel API instead of the legacy back end. The nf_tables API provides backward compatibility so that scripts that use iptables commands still work on Fedora 34 based Linux distributions. For new firewall scripts, it is recommended to use nftables.",,,,,,,,,,,,,,,,,,,
3.4.2,,Configure firewall rules,,"nftables is a subsystem of the Linux kernel providing filtering and classification of network packets/datagrams/frames and is the successor to iptables.

**Important:** Configuration of a live systems firewall directly over a remote connection will often result in being locked out. It is advised to have a known good firewall configuration set to run on boot and to configure an entire firewall structure in a script that is then run and tested before saving to boot.

**FirewallD**

The following will create a FirewallD Zone called `securezone` to implement the firewall rules of this section leveraging the firewalld utility included with the firewalld package. This example will open port 22(ssh) from anywhere. Opening service `SSH` should be updated in accordance with local site policy.

_Sample securezone zone xml file_

```
<?xml version=""1.0"" encoding=""utf-8""?>
<zone target=""DROP"">
 <description>For use with CIS Linux Benchmark. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>
 <service name=""ssh""/>
 <service name=""dhcpv6-client""/>
 <icmp-block name=""destination-unreachable""/>
 <icmp-block name=""packet-too-big""/>
 <icmp-block name=""time-exceeded""/>
 <icmp-block name=""parameter-problem""/>
 <icmp-block name=""neighbour-advertisement""/>
 <icmp-block name=""neighbour-solicitation""/>
 <icmp-block name=""router-advertisement""/>
 <icmp-block name=""router-solicitation""/>
 <rule family=""ipv4"">
 <source address=""127.0.0.1""/>
 <destination address=""127.0.0.1"" invert=""True""/>
 <drop/>
 </rule>
 <rule family=""ipv6"">
 <source address=""::1""/>
 <destination address=""::1"" invert=""True""/>
 <drop/>
 </rule>
 <icmp-block-inversion/>
</zone>
```

**Note:** To use this zone, save this as `/etc/firewalld/zones/securezone.xml` and run the following commands:

```
# firewall-cmd --reload
# firewall-cmd --permanent --zone=securezone --change-interface={NAME OF NETWORK INTERFACE}
```

**NFTables Utility:**

The following will implement the firewall rules of this section leveraging the nftables utility included with the nftables package. This example will open ICMP, IGMP, and port 22(ssh) from anywhere. Opening the ports for ICMP, IGMP, and port 22(ssh) needs to be updated in accordance with local site policy. Allow port 22(ssh) should to be updated to only allow systems requiring ssh connectivity to connect, as per site policy.

Save the script below as `/etc/nftables/nftables.rules` 
```
# This nftables.rules config should be saved as /etc/nftables/nftables.rules

# flush nftables rulesset
flush ruleset

# Load nftables ruleset
# nftables config with inet table named filter

table inet filter {
 chain input {
 type filter hook input priority 0; policy drop;

 # early drop invalid packets
 ct state invalid drop

 # allow loopback if not forged
 iif lo accept
 iif != lo ip daddr 127.0.0.1/8 drop
 iif != lo ip6 daddr ::1/128 drop

 # allow connections made by ourselves
 ip protocol tcp ct state established accept
 ip protocol udp ct state established accept

 # allow from anywhere
 ip protocol igmp accept
 tcp dport ssh accept

 # allow some icmp
 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-done, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report } accept
 icmp type { destination-unreachable, router-advertisement, router-solicitation, time-exceeded, parameter-problem } accept
 }

 chain forward {
 # drop all forward
 type filter hook forward priority 0; policy drop;
 }

 chain output {
 # can omit this as its accept by default
 type filter hook output priority 0; policy accept;
 }
}
```

Run the following command to load the file into nftables
```
# nft -f /etc/nftables/nftables.rules
```

**Note:** All changes in the nftables subsections are temporary

To make these changes permanent:

Run the following command to create the nftables.rules file
```
nft list ruleset > /etc/nftables/nftables.rules
```

Add the following line to `/etc/sysconfig/nftables.conf`
```
include ""/etc/nftables/nftables.rules""
```",,,,,,,,,,,,,,,,,,,
4,,Logging and Auditing,,"The items in this section describe how to configure logging, log monitoring, and auditing, using tools included in most distributions.

It is recommended that `rsyslog `be used for logging (with `logwatch `providing summarization) and `auditd` be used for auditing (with `aureport `providing summarization) to automatically monitor logs for intrusion attempts and other suspicious system behavior.

In addition to the local log files created by the steps in this section, it is also recommended that sites collect copies of their system logs on a secure, centralized log server via an encrypted connection. Not only does centralized logging help sites correlate events that may be occurring on multiple systems, but having a second copy of the system log information may be critical after a system compromise where the attacker has modified the local log files on the affected system(s). If a log correlation system is deployed, configure it to process the logs described in this section.

Because it is often necessary to correlate log information from many different systems (particularly after a security incident) it is recommended that the time be synchronized among systems and devices connected to the local network. The standard Internet protocol for time synchronization is the Network Time Protocol (NTP), which is supported by most network-ready devices. Reference <[http://chrony.tuxfamily.org/](http://chrony.tuxfamily.org/)> manual page for more information on configuring chrony.

It is important that all logs described in this section be monitored on a regular basis and correlated to determine trends. A seemingly innocuous entry in one log could be more significant when compared to an entry in another log.

**Note on log file permissions:** There really isn't a ""one size fits all"" solution to the permissions on log files. Many sites utilize group permissions so that administrators who are in a defined security group, such as ""wheel"" do not have to elevate privileges to root in order to read log files. Also, if a third party log aggregation tool is used, it may need to have group permissions to read the log files, which is preferable to having it run setuid to root. Therefore, there are two remediation and audit steps for log file permissions. One is for systems that do not have a secured group method implemented that only permits root to read the log files (`root:root 600`). The other is for sites that do have such a setup and are designated as `root:securegrp 640 `where `securegrp` is the defined security group (in some cases `wheel`).",,,,,,,,,,,,,,,,,,,
4.1,,Configure System Accounting (auditd),,"The Linux Auditing System operates on a set of rules that collects certain types of system activity to facilitate incident investigation, detect unauthorized access or modification of data. By default events will be logged to `/var/log/audit/audit.log`, which can be configured in `/etc/audit/auditd.conf`.

The following types of audit rules can be specified:
 - Control rules: Configuration of the auditing system.
 - File system rules: Allow the auditing of access to a particular file or a directory. Also known as file watches.
 - System call rules: Allow logging of system calls that any specified program makes.

Audit rules can be set:
 - On the command line using the `auditctl` utility. These rules are not persistent across reboots.
 - In `/etc/audit/audit.rules`. These rules have to be merged and loaded before they are active.

**Notes:**
 - For 64 bit systems that have `arch` as a rule parameter, you will need two rules: one for 64 bit and one for 32 bit systems calls. For 32 bit systems, only one rule is needed.
 - If the auditing system is configured to be locked (`-e 2`), a system reboot will be required in order to load any changes.
 - Key names are optional on the rules and will not be used in compliance auditing. The usage of key names is highly recommended as it facilitates organization and searching; as such, all remediation steps will have key names supplied.
 - It is best practice to store the rules, in number prepended files, in `/etc/audit/rules.d/`. Rules must end in a `.rules` suffix. This then requires the use of `augenrules` to merge all the rules into `/etc/audit/audit.rules` based on their alphabetical (lexical) sort order. All benchmark recommendations follow this best practice for remediation, specifically using the prefix of `50` which is center weighed if all rule sets make use of the number prepending naming convention.
 - Your system may have been customized to change the default `UID_MIN`. All sample output uses `1000`, but this value will not be used in compliance auditing. To confirm the `UID_MIN` for your system, run the following command: `awk '/^\s*UID_MIN/{print $2}' /etc/login.defs`

#### Normalization
The Audit system normalizes some entries, so when you look at the sample output keep in mind that:
 - With regards to users whose login UID is not set, the values `-1` / `unset` / `4294967295` are equivalent and normalized to `-1`.
 - When comparing field types and both sides of the comparison is valid fields types, such as `euid!=uid`, then the auditing system may normalize such that the output is `uid!=euid`.
 - Some parts of the rule may be rearranged whilst others are dependent on previous syntax. For example, the following two statements are the same:

```
-a always,exit -F arch=b64 -S execve -C uid!=euid -F auid!=-1 -F key=user_emulation
```

and

```
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation
```

#### Capacity planning

The recommendations in this section implement auditing policies that not only produce large quantities of logged data, but may also negatively impact system performance. Capacity planning is critical in order not to adversely impact production environments.

 - Disk space. If a significantly large set of events are captured, additional on system or off system storage may need to be allocated. If the logs are not sent to a remote log server, ensure that log rotation is implemented else the disk will fill up and the system will halt. Even when logs are sent to a log server, ensure sufficient disk space to allow caching of logs in the case of temporary network outages.
 - Disk IO. It is not just the amount of data collected that should be considered, but the rate at which logs are generated.
 - CPU overhead. System call rules might incur considerable CPU overhead. Test the systems open/close syscalls per second with and without the rules to gauge the impact of the rules.",,,,,,,,,,,,,,,,,,,
4.1.1,,Ensure auditing is enabled,,The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.,,,,,,,,,,,,,,,,,,,
4.1.1,4.1.1.1,Ensure auditd is installed,Automated,auditd is the userspace component to the Linux Auditing System. It's responsible for writing audit records to the disk,The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.,,"Run the following command to Install auditd

```
# dnf install audit
```","Run the following command and verify auditd is installed:

```
# rpm -q audit
```","**NIST SP 800-53 Rev. 5:**
- AU-2
- AU-3
- AU-3(1)
- AU-12
- SI-5","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;TITLE:Enable Detailed Logging CONTROL:v7 6.3 DESCRIPTION:Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.;",8.2,8.5,,X,X,X,6.2,6.3,,X,X,X,
4.1.1,4.1.1.2,Ensure auditing for processes that start prior to auditd is enabled,Automated,Configure `grub2` so that processes that are capable of being audited can be audited even if they start up prior to `auditd` startup.,"Audit events need to be captured on processes that start up prior to `auditd` , so that potential malicious activity cannot go undetected.",,"Run the following command to update the `grub2` configuration with `audit=1`:

```
# grubby --update-kernel ALL --args 'audit=1'
```","Run the following command to verify that the audit=1 parameter has been set:

```
# grubby --info=ALL | grep -Po '\baudit=1\b'

audit=1
```

**Note** `audit=1` may be returned multiple times","This recommendation is designed around the grub2 bootloader, if another bootloader is in use in your environment enact equivalent settings.","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.1,4.1.1.3,Ensure audit_backlog_limit is sufficient,Automated,The backlog limit has a default setting of 64,"During boot if `audit=1`, then the backlog will hold 64 records. If more that 64 records are created during boot, auditd records will be lost and potential malicious activity could go undetected.",,"Run the following command to add `audit_backlog_limit=<BACKLOG SIZE>` to GRUB_CMDLINE_LINUX:

```
# grubby --update-kernel ALL --args 'audit_backlog_limit=<BACKLOG SIZE>'
```

_Example:_
```
# grubby --update-kernel ALL --args 'audit_backlog_limit=8192'
```","Run the following command and verify the `audit_backlog_limit=` parameter is set to an appropriate size for your organization

```
# grubby --info=ALL | grep -Po ""\baudit_backlog_limit=\d+\b""

audit_backlog_limit=<BACKLOG SIZE>
```

Validate that the line(s) returned contain a value for `audit_backlog_limit=` that is sufficient for your organization. 

**Recommended that this value be `8192` or larger.**","**NIST SP 800-53 Rev. 5:**
- AU-2
- AU-12
- SI-5","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.1,4.1.1.4,Ensure auditd service is enabled,Automated,Turn on the `auditd` daemon to record system events.,The capturing of system events provides system administrators with information to allow them to determine if unauthorized access to their system is occurring.,,"Run the following command to enable `auditd`:

```
# systemctl --now enable auditd
```","Run the following command to verify `auditd` is enabled:

```
# systemctl is-enabled auditd

enabled
```

Verify result is ""enabled"".","Additional methods of enabling a service exist. Consult your distribution documentation for appropriate methods.

**NIST SP 800-53 Rev. 5:**
- AU-2
- AU-12
- SI-5","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;TITLE:Enable Detailed Logging CONTROL:v7 6.3 DESCRIPTION:Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.;",8.2,,,X,X,X,6.2,6.3,,X,X,X,
4.1.2,,Configure Data Retention,,"When auditing, it is important to carefully configure the storage requirements for audit logs. By default, auditd will max out the log files at 5MB and retain only 4 copies of them. Older versions will be deleted. It is possible on a system that the 20 MBs of audit logs may fill up the system causing loss of audit data. While the recommendations here provide guidance, check your site policy for audit storage requirements.",,,,,,,,,,,,,,,,,,,
4.1.2,4.1.2.1,Ensure audit log storage size is configured,Automated,"Configure the maximum size of the audit log file. Once the log reaches the maximum size, it will be rotated and a new log file will be started.",It is important that an appropriate size is determined for log files so that they do not impact the system and audit data is not lost.,,"Set the following parameter in `/etc/audit/auditd.conf` in accordance with site policy:

```
max_log_file = <MB>
```","Run the following command and ensure output is in compliance with site policy:

```
# grep -w ""^\s*max_log_file\s*="" /etc/audit/auditd.conf

max_log_file = <MB>
```","The `max_log_file` parameter is measured in megabytes.

Other methods of log rotation may be appropriate based on site policy. One example is time-based rotation strategies which don't have native support in auditd configurations. Manual audit of custom configurations should be evaluated for effectiveness and completeness.

**NIST SP 800-53 Rev. 5:**
- AU-8",TITLE:Ensure Adequate Audit Log Storage CONTROL:v8 8.3 DESCRIPTION:Ensure that logging destinations maintain adequate storage to comply with the enterprise’s audit log management process.;TITLE:Ensure adequate storage for logs CONTROL:v7 6.4 DESCRIPTION:Ensure that all systems that store logs have adequate storage space for the logs generated.;,8.3,,,X,X,X,6.4,,,,X,X,
4.1.2,4.1.2.2,Ensure audit logs are not automatically deleted,Automated,The `max_log_file_action` setting determines how to handle the audit log file reaching the max file size. A value of `keep_logs` will rotate the logs but never delete old logs.,"In high security contexts, the benefits of maintaining a long audit history exceed the cost of storing the audit history.",,"Set the following parameter in `/etc/audit/auditd.conf:` 

```
max_log_file_action = keep_logs
```","Run the following command and verify output matches:

```
# grep max_log_file_action /etc/audit/auditd.conf

max_log_file_action = keep_logs
```","**NIST SP 800-53 Rev. 5:**
- AU-8",TITLE:Ensure Adequate Audit Log Storage CONTROL:v8 8.3 DESCRIPTION:Ensure that logging destinations maintain adequate storage to comply with the enterprise’s audit log management process.;TITLE:Ensure adequate storage for logs CONTROL:v7 6.4 DESCRIPTION:Ensure that all systems that store logs have adequate storage space for the logs generated.;,8.3,,,X,X,X,6.4,,,,X,X,
4.1.2,4.1.2.3,Ensure system is disabled when audit logs are full,Automated,"The `auditd` daemon can be configured to halt the system when the audit logs are full.

The admin_space_left_action parameter tells the system what action to take when the system has detected that it is low on disk space. Valid values are ignore, syslog, suspend, single, and halt.
- `ignore`, the audit daemon does nothing
- `Syslog`, the audit daemon will issue a warning to syslog
- `Suspend`, the audit daemon will stop writing records to the disk
- `single`, the audit daemon will put the computer system in single user mode
- `halt`, the audit daemon will shut down the system","In high security contexts, the risk of detecting unauthorized access or nonrepudiation exceeds the benefit of the system's availability.",If the `admin_space_left_action` parameter is set to `halt` the audit daemon will shutdown the system when the disk partition containing the audit logs becomes full.,"Set the following parameters in `/etc/audit/auditd.conf:` 

```
space_left_action = email
action_mail_acct = root
```

set `admin_space_left_action` to either `halt` **or** `single` in `/etc/audit/auditd.conf`.

_Example:_

```
admin_space_left_action = halt
```","Run the following commands and verify output matches:

```
# grep space_left_action /etc/audit/auditd.conf

space_left_action = email
```

```
# grep action_mail_acct /etc/audit/auditd.conf

action_mail_acct = root
```

Run the following command and verify the output is either `halt` **or** `single`:
```
# grep -E 'admin_space_left_action\s*=\s*(halt|single)' /etc/audit/auditd.conf

admin_space_left_action = <halt|single>
```","**NIST SP 800-53 Rev. 5:**
- AU-2
- AU-8
- AU-12
- SI-5","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Ensure Adequate Audit Log Storage CONTROL:v8 8.3 DESCRIPTION:Ensure that logging destinations maintain adequate storage to comply with the enterprise’s audit log management process.;",8.2,8.3,,X,X,X,,,,,,,
4.1.3,,Configure auditd rules,,"The Audit system operates on a set of rules that define what is to be captured in the log files.

The following types of Audit rules can be specified:
 - Control rules: Allow the Audit system's behavior and some of its configuration to be modified.
 - File system rules: Allow the auditing of access to a particular file or a directory. (Also known as file watches)
 - System call rules: Allow logging of system calls that any specified program makes.

Audit rules can be set:
 - on the command line using the auditctl utility. Note that these rules are not persistent across reboots.
 - in a file ending in `.rules` in the `/etc/audit/audit.d/` directory.",,,,,,,,,,,,,,,,,,,
4.1.3,4.1.3.1,Ensure changes to system administration scope (sudoers) is collected,Automated,"Monitor scope changes for system administrators. If the system has been properly configured to force system administrators to log in as themselves first and then use the `sudo` command to execute privileged commands, it is possible to monitor changes in scope. The file `/etc/sudoers`, or files in `/etc/sudoers.d`, will be written to when the file(s) or related attributes have changed. The audit records will be tagged with the identifier ""scope"".",Changes in the `/etc/sudoers` and `/etc/sudoers.d` files can indicate that an unauthorized change has been made to the scope of system administrator activity.,,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor scope changes for system administrators.

Example:

```
# printf ""
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
"" >> /etc/audit/rules.d/50-scope.rules
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# awk '/^ *-w/ \
&&/\/etc\/sudoers/ \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
```

#### Running configuration

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-w/ \
&&/\/etc\/sudoers/ \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Changes to Administrative Group Membership CONTROL:v7 4.8 DESCRIPTION:Configure systems to issue a log entry and alert when an account is added to or removed from any group assigned administrative privileges.;",8.5,,,,X,X,4.8,,,,X,X,
4.1.3,4.1.3.2,Ensure actions as another user are always logged,Automated,"`sudo` provides users with temporary elevated privileges to perform operations, either as the superuser or another user.",Creating an audit log of users with temporary elevated privileges and the operation(s) they performed is essential to reporting. Administrators will want to correlate the events written to the audit trail with the records written to `sudo`'s logfile to verify if unauthorized commands have been executed.,,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor elevated privileges.

##### 64 Bit systems

Example:

```
# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation 
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# awk '/^ *-a *always,exit/ \
&&/ -F *arch=b[2346]{2}/ \
&&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
&&(/ -C *euid!=uid/||/ -C *uid!=euid/) \
&&/ -S *execve/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k user_emulation 
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k user_emulation
```

***Running configuration***

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-a *always,exit/ \
&&/ -F *arch=b[2346]{2}/ \
&&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
&&(/ -C *euid!=uid/||/ -C *uid!=euid/) \
&&/ -S *execve/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S execve -C uid!=euid -F auid!=-1 -F key=user_emulation
-a always,exit -F arch=b32 -S execve -C uid!=euid -F auid!=-1 -F key=user_emulation
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Unsuccessful Administrative Account Login CONTROL:v7 4.9 DESCRIPTION:Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.;",8.5,,,,X,X,4.9,,,,X,X,
4.1.3,4.1.3.3,Ensure events that modify the sudo log file are collected,Automated,"Monitor the `sudo` log file. If the system has been properly configured to disable the use of the `su` command and force all administrators to have to log in first and then use `sudo` to execute privileged commands, then all administrator commands will be logged to `/var/log/sudo.log` . Any time a command is executed, an audit event will be triggered as the `/var/log/sudo.log` file will be opened for write and the executed administration command will be written to the log.",Changes in `/var/log/sudo.log` indicate that an administrator has executed a command or the log file itself has been tampered with. Administrators will want to correlate the events written to the audit trail with the records written to `/var/log/sudo.log` to verify if unauthorized commands have been executed.,,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor events that modify the sudo log file.

Example:

```
# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] && printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable 'SUDO_LOG_FILE_ESCAPED' is unset.\n""
}
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# {
 SUDO_LOG_FILE_ESCAPED=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g' -e 's|/|\\/|g')
 [ -n ""${SUDO_LOG_FILE_ESCAPED}"" ] && awk ""/^ *-w/ \
 &&/""${SUDO_LOG_FILE_ESCAPED}""/ \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'SUDO_LOG_FILE_ESCAPED' is unset.\n""
}
```

Verify output of matches:

```
-w /var/log/sudo.log -p wa -k sudo_log_file
```

#### Running configuration

Run the following command to check loaded rules:

```
# {
 SUDO_LOG_FILE_ESCAPED=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,? .*//' -e 's/""//g' -e 's|/|\\/|g')
 [ -n ""${SUDO_LOG_FILE_ESCAPED}"" ] && auditctl -l | awk ""/^ *-w/ \
 &&/""${SUDO_LOG_FILE_ESCAPED}""/ \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'SUDO_LOG_FILE_ESCAPED' is unset.\n""
}
```

Verify output matches:

```
-w /var/log/sudo.log -p wa -k sudo_log_file
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Unsuccessful Administrative Account Login CONTROL:v7 4.9 DESCRIPTION:Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.;",8.5,,,,X,X,4.9,,,,X,X,
4.1.3,4.1.3.4,Ensure events that modify date and time information are collected,Automated,"Capture events where the system date and/or time has been modified. The parameters in this section are set to determine if the;
- `adjtimex` - tune kernel clock
- `settimeofday` - set time using `timeval` and `timezone` structures
- `stime` - using seconds since 1/1/1970
- `clock_settime` - allows for the setting of several internal clocks and timers

system calls have been executed. Further, ensure to write an audit record to the configured audit log file upon exit, tagging the records with a unique identifier such as ""time-change"".",Unexpected changes in system date and/or time could be a sign of malicious activity on the system.,,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor events that modify date and time information.

##### 64 Bit systems

Example:

```
# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`. In addition, add `stime` to the system call audit. Example:

```
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime,stime -k time-change
```","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&/ -S/ \
 &&(/adjtimex/ \
 ||/settimeofday/ \
 ||/clock_settime/ ) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules

 awk '/^ *-w/ \
 &&/\/etc\/localtime/ \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
}
```

Verify output of matches:

```
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 auditctl -l | awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&/ -S/ \
 &&(/adjtimex/ \
 ||/settimeofday/ \
 ||/clock_settime/ ) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'

 auditctl -l | awk '/^ *-w/ \
 &&/\/etc\/localtime/ \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
}
```

Verify the output includes:

```
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -F key=time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -F key=time-change
-w /etc/localtime -p wa -k time-change
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.

In addition, also audit for the `stime` system call rule. For example:

```
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime,stime -k time-change
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Implement Automated Configuration Monitoring Systems CONTROL:v7 5.5 DESCRIPTION:Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.;",8.5,,,,X,X,5.5,,,,X,X,
4.1.3,4.1.3.5,Ensure events that modify the system's network environment are collected,Automated,"Record changes to network environment files or system calls. The below parameters monitors the following system calls, and write an audit event on system call exit:
- `sethostname` - set the systems host name
- `setdomainname` - set the systems domain name

The files being monitored are:
- `/etc/issue` and `/etc/issue.net` - messages displayed pre-login
- `/etc/hosts` - file containing host names and associated IP addresses
- `/etc/sysconfig/network` - additional information that is valid to all network interfaces
- `/etc/sysconfig/network-scripts/` - directory containing network interface scripts and configurations files","Monitoring `sethostname` and `setdomainname` will identify potential unauthorized changes to host and domain name of a system. The changing of these names could potentially break security parameters that are set based on those names. The `/etc/hosts` file is monitored for changes that can indicate an unauthorized intruder is trying to change machine associations with IP addresses and trick users and processes into connecting to unintended machines. Monitoring `/etc/issue` and `/etc/issue.net` is important, as intruders could put disinformation into those files and trick users into providing information to the intruder. Monitoring `/etc/sysconfig/network` is important as it can show if network interfaces or scripts are being modified in a way that can lead to the machine becoming unavailable or compromised. All audit records should have a relevant tag associated with them.",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor events that modify the system's network environment.

##### 64 Bit systems

Example:

```
# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-w /etc/sysconfig/network-scripts/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_local.rules
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following commands to check the on disk rules:

```
# {
 awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b(32|64)/ \
 &&/ -S/ \
 &&(/sethostname/ \
 ||/setdomainname/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules

 awk '/^ *-w/ \
 &&(/\/etc\/issue/ \
 ||/\/etc\/issue.net/ \
 ||/\/etc\/hosts/ \
 ||/\/etc\/sysconfig\/network/) \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-w /etc/sysconfig/network-scripts/ -p wa -k system-locale
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 auditctl -l | awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b(32|64)/ \
 &&/ -S/ \
 &&(/sethostname/ \
 ||/setdomainname/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'

 auditctl -l | awk '/^ *-w/ \
 &&(/\/etc\/issue/ \
 ||/\/etc\/issue.net/ \
 ||/\/etc\/hosts/ \
 ||/\/etc\/sysconfig\/network/) \
 &&/ +-p *wa/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
}
```

Verify the output includes:

```
-a always,exit -F arch=b64 -S sethostname,setdomainname -F key=system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -F key=system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-w /etc/sysconfig/network-scripts -p wa -k system-locale
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Implement Automated Configuration Monitoring Systems CONTROL:v7 5.5 DESCRIPTION:Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.;",8.5,,,,X,X,5.5,,,,X,X,
4.1.3,4.1.3.6,Ensure use of privileged commands are collected,Automated,"Monitor privileged programs, those that have the `setuid` and/or `setgid` bit set on execution, to determine if unprivileged users are running these commands.",Execution of privileged commands by non-privileged users could be an indication of someone trying to gain unauthorized access to the system.,"Both the audit and remediation section of this recommendation will traverse all mounted file systems that is not mounted with either `noexec` or `nosuid` mount options. If there are large file systems without these mount options, **such traversal will be significantly detrimental to the performance of the system.**

Before running either the audit or remediation section, inspect the output of the following command to determine exactly which file systems will be traversed:

```
# findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid""
```

To exclude a particular file system due to adverse performance impacts, update the audit and remediation sections by adding a sufficiently unique string to the `grep` statement. The above command can be used to test the modified exclusions.","Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor the use of privileged commands.

Example:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
 NEW_DATA=()
 for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
 readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk -v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
 for ENTRY in ""${DATA[@]}""; do
 NEW_DATA+=(""${ENTRY}"")
 done
 done
 readarray &> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
 COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
 printf '%s\n' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

#### Special mount points

If there are any special mount points that are not visible by default from just scanning `/`, change the `PARTITION` variable to the appropriate partition and re-run the remediation.","#### On disk configuration

Run the following command to check on disk rules:

```
# for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
 for PRIVILEGED in $(find ""${PARTITION}"" -xdev -perm /6000 -type f); do
 grep -qr ""${PRIVILEGED}"" /etc/audit/rules.d && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in on disk configuration.\n""
 done
done
```

Verify that all output is `OK`.

#### Running configuration

Run the following command to check loaded rules:

```
# {
 RUNNING=$(auditctl -l)
 [ -n ""${RUNNING}"" ] && for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }' /proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print $1}'); do
 for PRIVILEGED in $(find ""${PARTITION}"" -xdev -perm /6000 -type f); do
 printf -- ""${RUNNING}"" | grep -q ""${PRIVILEGED}"" && printf ""OK: '${PRIVILEGED}' found in auditing rules.\n"" || printf ""Warning: '${PRIVILEGED}' not found in running configuration.\n""
 done
 done \
 || printf ""ERROR: Variable 'RUNNING' is unset.\n""
}
```

Verify that all output is `OK`.

#### Special mount points

If there are any special mount points that are not visible by default from `findmnt` as per the above audit, said file systems would have to be manually audited.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.

**NIST SP 800-53 Rev. 5:**
- AU-3
- AU-3(1)","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.5,,,,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.7,Ensure unsuccessful file access attempts are collected,Automated,"Monitor for unsuccessful attempts to access files. The following parameters are associated with system calls that control files:
- creation - `creat`
- opening - `open` , `openat`
- truncation - `truncate` , `ftruncate`

An audit log record will only be written if all of the following criteria is met for the user when trying to access a file:
- a non-privileged user (auid>=UID_MIN)
- is not a Daemon event (auid=4294967295/unset/-1)
- if the system call returned EACCES (permission denied) or EPERM (some other permanent error associated with the specific system call)","Failed attempts to open, create or truncate files could be an indication that an individual or process is trying to gain unauthorized access to the system.",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor unsuccessful file access attempts.

##### 64 Bit systems

Example:

```
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \
 &&/ -S/ \
 &&/creat/ \
 &&/open/ \
 &&/truncate/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output includes:

```
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -k access
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&(/ -F *exit=-EACCES/||/ -F *exit=-EPERM/) \
 &&/ -S/ \
 &&/creat/ \
 &&/open/ \
 &&/truncate/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output includes:

```
-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-EACCES -F auid>=1000 -F auid!=-1 -F key=access
-a always,exit -F arch=b64 -S open,truncate,ftruncate,creat,openat -F exit=-EPERM -F auid>=1000 -F auid!=-1 -F key=access
-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-EACCES -F auid>=1000 -F auid!=-1 -F key=access
-a always,exit -F arch=b32 -S open,truncate,ftruncate,creat,openat -F exit=-EPERM -F auid>=1000 -F auid!=-1 -F key=access
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Enforce Detail Logging for Access or Changes to Sensitive Data CONTROL:v7 14.9 DESCRIPTION:Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).;",8.5,,,,X,X,14.9,,,,,X,
4.1.3,4.1.3.8,Ensure events that modify user/group information are collected,Automated,"Record events affecting the modification of user or group information, including that of passwords and old passwords if in use.
- `/etc/group` - system groups
- `/etc/passwd` - system users
- `/etc/gshadow` - encrypted password for each group
- `/etc/shadow` - system user passwords
- `/etc/security/opasswd` - storage of old passwords if the relevant PAM module is in use

The parameters in this section will watch the files to see if they have been opened for write or have had attribute changes (e.g. permissions) and tag them with the identifier ""identity"" in the audit log file.",Unexpected changes to these files could be an indication that the system has been compromised and that an unauthorized user is attempting to hide their activities or compromise additional accounts.,,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor events that modify user/group information.

Example:

```
# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# awk '/^ *-w/ \
&&(/\/etc\/group/ \
 ||/\/etc\/passwd/ \
 ||/\/etc\/gshadow/ \
 ||/\/etc\/shadow/ \
 ||/\/etc\/security\/opasswd/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
```

#### Running configuration

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-w/ \
&&(/\/etc\/group/ \
 ||/\/etc\/passwd/ \
 ||/\/etc\/gshadow/ \
 ||/\/etc\/shadow/ \
 ||/\/etc\/security\/opasswd/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Changes to Administrative Group Membership CONTROL:v7 4.8 DESCRIPTION:Configure systems to issue a log entry and alert when an account is added to or removed from any group assigned administrative privileges.;",8.5,,,,X,X,4.8,,,,X,X,
4.1.3,4.1.3.9,Ensure discretionary access control permission modification events are collected,Automated,"Monitor changes to file permissions, attributes, ownership and group. The parameters in this section track changes for system calls that affect file permissions and attributes. The following commands and system calls effect the permissions, ownership and various attributes of files.
- `chmod`
- `fchmod`
- `fchmodat`
- `chown`
- `fchown`
- `fchownat`
- `lchown`
- `setxattr`
- `lsetxattr`
- `fsetxattr`
- `removexattr`
- `lremovexattr`
- `fremovexattr`

In all cases, an audit record will only be written for non-system user ids and will ignore Daemon events. All audit records will be tagged with the identifier ""perm_mod.""",Monitoring for changes in file attributes could alert a system administrator to activity that could indicate intruder activity or policy violation.,,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor discretionary access control permission modification events.

##### 64 Bit systems

Example:

```
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -S/ \
 &&/ -F *auid>=${UID_MIN}/ \
 &&(/chmod/||/fchmod/||/fchmodat/ \
 ||/chown/||/fchown/||/fchownat/||/lchown/ \
 ||/setxattr/||/lsetxattr/||/fsetxattr/ \
 ||/removexattr/||/lremovexattr/||/fremovexattr/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:
```
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -S/ \
 &&/ -F *auid>=${UID_MIN}/ \
 &&(/chmod/||/fchmod/||/fchmodat/ \
 ||/chown/||/fchown/||/fchownat/||/lchown/ \
 ||/setxattr/||/lsetxattr/||/fsetxattr/ \
 ||/removexattr/||/lremovexattr/||/fremovexattr/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod
-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod
-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=1000 -F auid!=-1 -F key=perm_mod
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Implement Automated Configuration Monitoring Systems CONTROL:v7 5.5 DESCRIPTION:Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.;",8.5,,,,X,X,5.5,,,,X,X,
4.1.3,4.1.3.10,Ensure successful file system mounts are collected,Automated,Monitor the use of the `mount` system call. The `mount` (and `umount` ) system call controls the mounting and unmounting of file systems. The parameters below configure the system to create an audit record when the mount system call is used by a non-privileged user,"It is highly unusual for a non privileged user to `mount` file systems to the system. While tracking `mount` commands gives the system administrator evidence that external media may have been mounted (based on a review of the source of the mount and confirming it's an external media type), it does not conclusively indicate that data was exported to the media. System administrators who wish to determine if data were exported, would also have to track successful `open`, `creat` and `truncate` system calls requiring write access to a file under the mount point of the external media file system. This could give a fair indication that a write occurred. The only way to truly prove it, would be to track successful writes to the external media. Tracking write system calls could quickly fill up the audit log and is not recommended. Recommendations on configuration options to track data export to media is beyond the scope of this document.",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor successful file system mounts.

##### 64 Bit systems

Example:

```
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -k mounts
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -k mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -S/ \
 &&/mount/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=unset -k mounts
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=unset -k mounts
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -S/ \
 &&/mount/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts
-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=-1 -F key=mounts
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.

**NIST SP 800-53 Rev. 5:**
- CM-6","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Enable Detailed Logging CONTROL:v7 6.3 DESCRIPTION:Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.;",8.5,,,,X,X,6.3,,,,X,X,
4.1.3,4.1.3.11,Ensure session initiation information is collected,Automated,"Monitor session initiation events. The parameters in this section track changes to the files associated with session events.
- `/var/run/utmp` - tracks all currently logged in users.
- `/var/log/wtmp` - file tracks logins, logouts, shutdown, and reboot events.
- `/var/log/btmp` - keeps track of failed login attempts and can be read by entering the command `/usr/bin/last -f /var/log/btmp`.

All audit records will be tagged with the identifier ""session.""","Monitoring these files for changes could alert a system administrator to logins occurring at unusual hours, which could indicate intruder activity (i.e. a user logging in at a time when they do not normally log in).",,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor session initiation information.

Example:

```
# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# awk '/^ *-w/ \
&&(/\/var\/run\/utmp/ \
 ||/\/var\/log\/wtmp/ \
 ||/\/var\/log\/btmp/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
```

#### Running configuration

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-w/ \
&&(/\/var\/run\/utmp/ \
 ||/\/var\/log\/wtmp/ \
 ||/\/var\/log\/btmp/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.

**NIST SP 800-53 Rev. 5:**
- AU-3
- AU-3(1)","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Unsuccessful Administrative Account Login CONTROL:v7 4.9 DESCRIPTION:Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.;TITLE:Alert on Account Login Behavior Deviation CONTROL:v7 16.13 DESCRIPTION:Alert when users deviate from normal login behavior, such as time-of-day, workstation location and duration.;",8.5,,,,X,X,4.9,16.13,,,X,X,
4.1.3,4.1.3.12,Ensure login and logout events are collected,Automated,"Monitor login and logout events. The parameters below track changes to files associated with login/logout events.
- `/var/log/lastlog` - maintain records of the last time a user successfully logged in. 
- `/var/run/faillock` - directory maintains records of login failures via the `pam_faillock` module.",Monitoring login/logout events could provide a system administrator with information associated with brute force attacks against user logins.,,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor login and logout events.

Example:

```
# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# awk '/^ *-w/ \
&&(/\/var\/log\/lastlog/ \
 ||/\/var\/run\/faillock/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
```

#### Running configuration

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-w/ \
&&(/\/var\/log\/lastlog/ \
 ||/\/var\/run\/faillock/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.

**NIST SP 800-53 Rev. 5:**
- AU-3
- AU-3(1)","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Log and Alert on Unsuccessful Administrative Account Login CONTROL:v7 4.9 DESCRIPTION:Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.;TITLE:Lock Workstation Sessions After Inactivity CONTROL:v7 16.11 DESCRIPTION:Automatically lock workstation sessions after a standard period of inactivity.;TITLE:Alert on Account Login Behavior Deviation CONTROL:v7 16.13 DESCRIPTION:Alert when users deviate from normal login behavior, such as time-of-day, workstation location and duration.;",8.5,,,,X,X,4.9,16.11,16.13,X,X,X,
4.1.3,4.1.3.13,Ensure file deletion events by users are collected,Automated,"Monitor the use of system calls associated with the deletion or renaming of files and file attributes. This configuration statement sets up monitoring for:
- `unlink` - remove a file
- `unlinkat` - remove a file attribute
- `rename` - rename a file
- `renameat` rename a file attribute
system calls and tags them with the identifier ""delete"".","Monitoring these calls from non-privileged users could provide a system administrator with evidence that inappropriate removal of files and file attributes associated with protected files is occurring. While this audit option will look at all events, system administrators will want to look for specific privileged files that are being deleted or altered.",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor file deletion events by users.

##### 64 Bit systems

Example:

```
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -S/ \
 &&(/unlink/||/rename/||/unlinkat/||/renameat/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F auid>=1000 -F auid!=unset -k delete
-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F auid>=1000 -F auid!=unset -k delete
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -S/ \
 &&(/unlink/||/rename/||/unlinkat/||/renameat/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F auid>=1000 -F auid!=-1 -F key=delete
-a always,exit -F arch=b32 -S unlink,rename,unlinkat,renameat -F auid>=1000 -F auid!=-1 -F key=delete
```
#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.5,,,,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.14,Ensure events that modify the system's Mandatory Access Controls are collected,Automated,"Monitor SELinux, an implementation of mandatory access controls. The parameters below monitor any write access (potential additional, deletion or modification of files in the directory) or attribute changes to the `/etc/selinux/` and `/usr/share/selinux/` directories.

**Note:** If a different Mandatory Access Control method is used, changes to the corresponding directories should be audited.","Changes to files in the `/etc/selinux/` and `/usr/share/selinux/` directories could indicate that an unauthorized user is attempting to modify access controls and change security contexts, leading to a compromise of the system.",,"Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor events that modify the system's Mandatory Access Controls.

Example:

```
# printf ""
-w /etc/selinux -p wa -k MAC-policy
-w /usr/share/selinux -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules
```

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### On disk configuration

Run the following command to check the on disk rules:

```
# awk '/^ *-w/ \
&&(/\/etc\/selinux/ \
 ||/\/usr\/share\/selinux/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules
```

Verify the output matches:

```
-w /etc/selinux -p wa -k MAC-policy
-w /usr/share/selinux -p wa -k MAC-policy
```

#### Running configuration

Run the following command to check loaded rules:

```
# auditctl -l | awk '/^ *-w/ \
&&(/\/etc\/selinux/ \
 ||/\/usr\/share\/selinux/) \
&&/ +-p *wa/ \
&&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'
```

Verify the output matches:

```
-w /etc/selinux -p wa -k MAC-policy
-w /usr/share/selinux -p wa -k MAC-policy
```","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Implement Automated Configuration Monitoring Systems CONTROL:v7 5.5 DESCRIPTION:Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.;",8.5,,,,X,X,5.5,,,,X,X,
4.1.3,4.1.3.15,Ensure successful and unsuccessful attempts to use the chcon command are recorded,Automated,The operating system must generate audit records for successful/unsuccessful uses of the `chcon` command.,"Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

Audit records can be generated from various components within the information system (e.g., module or policy filter).",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor successful and unsuccessful attempts to use the `chcon` command.

##### 64 Bit systems

Example:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/chcon/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset -k perm_chng
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/chcon/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -S all -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=-1 -F key=perm_chng
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.16,Ensure successful and unsuccessful attempts to use the setfacl command are recorded,Automated,The operating system must generate audit records for successful/unsuccessful uses of the `setfacl` command,"Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

Audit records can be generated from various components within the information system (e.g., module or policy filter).",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor successful and unsuccessful attempts to use the `setfacl` command.

##### 64 Bit systems

Example:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/setfacl/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=1000 -F auid!=unset -k perm_chng
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/setfacl/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -S all -F path=/usr/bin/setfacl -F perm=x -F auid>=1000 -F auid!=-1 -F key=perm_chng
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.17,Ensure successful and unsuccessful attempts to use the chacl command are recorded,Automated,The operating system must generate audit records for successful/unsuccessful uses of the `chacl` command,"Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

Audit records can be generated from various components within the information system (e.g., module or policy filter).",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor successful and unsuccessful attempts to use the `chacl` command.

##### 64 Bit systems

Example:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/chacl/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=1000 -F auid!=unset -k perm_chng
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/chacl/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -S all -F path=/usr/bin/chacl -F perm=x -F auid>=1000 -F auid!=-1 -F key=perm_chng
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.18,Ensure successful and unsuccessful attempts to use the usermod command are recorded,Automated,The operating system must generate audit records for successful/unsuccessful uses of the `usermod` command.,"Without generating audit records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

Audit records can be generated from various components within the information system (e.g., module or policy filter).",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor successful and unsuccessful attempts to use the `usermod` command.

##### 64 Bit systems

Example:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```

##### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### 64 Bit systems

***On disk configuration***

Run the following command to check the on disk rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/sbin\/usermod/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=1000 -F auid!=unset -k usermod
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/sbin\/usermod/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -S all -F path=/usr/sbin/usermod -F perm=x -F auid>=1000 -F auid!=-1 -F key=usermod
```

#### 32 Bit systems

Follow the same procedures as for 64 bit systems and ignore any entries with `b64`.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Audit Logs CONTROL:v8 8.2 DESCRIPTION:Collect audit logs. Ensure that logging, per the enterprise’s audit log management process, has been enabled across enterprise assets.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.2,,,X,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.19,Ensure kernel module loading unloading and modification is collected,Automated,"Monitor the loading and unloading of kernel modules. All the loading / listing / dependency checking of modules is done by `kmod` via symbolic links.

The following system calls control loading and unloading of modules:
- `init_module` - load a module
- `finit_module` - load a module (used when the overhead of using cryptographically signed modules to determine the authenticity of a module can be avoided)
- `delete_module` - delete a module
- `create_module` - create a loadable module entry
- `query_module` - query the kernel for various bits pertaining to modules

Any execution of the loading and unloading module programs and system calls will trigger an audit record with an identifier of `modules`.","Monitoring the use of all the various ways to manipulate kernel modules could provide system administrators with evidence that an unauthorized change was made to a kernel module, possibly compromising the security of the system.",,"#### Create audit rules

Edit or create a file in the `/etc/audit/rules.d/` directory, ending in `.rules` extension, with the relevant rules to monitor kernel module modification.

##### 64 Bit systems

Example:

```
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```
#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","#### 64 Bit systems

***On disk configuration***

Run the following commands to check the on disk rules:

```
# {
awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \
 &&/ -S/ \
 &&(/init_module/ \
 ||/finit_module/ \
 ||/delete_module/ \
 ||/create_module/ \
 ||/query_module/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)' /etc/audit/rules.d/*.rules

 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/kmod/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" /etc/audit/rules.d/*.rules \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output matches:

```
-a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid>=1000 -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=1000 -F auid!=unset -k kernel_modules
```

***Running configuration***

Run the following command to check loaded rules:

```
# {
 auditctl -l | awk '/^ *-a *always,exit/ \
 &&/ -F *arch=b[2346]{2}/ \
 &&(/ -F auid!=unset/||/ -F auid!=-1/||/ -F auid!=4294967295/) \
 &&/ -S/ \
 &&(/init_module/ \
 ||/finit_module/ \
 ||/delete_module/ \
 ||/create_module/ \
 ||/query_module/) \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)'

 UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
 [ -n ""${UID_MIN}"" ] && auditctl -l | awk ""/^ *-a *always,exit/ \
 &&(/ -F *auid!=unset/||/ -F *auid!=-1/||/ -F *auid!=4294967295/) \
 &&/ -F *auid>=${UID_MIN}/ \
 &&/ -F *perm=x/ \
 &&/ -F *path=\/usr\/bin\/kmod/ \
 &&(/ key= *[!-~]* *$/||/ -k *[!-~]* *$/)"" \
 || printf ""ERROR: Variable 'UID_MIN' is unset.\n""
}
```

Verify the output includes:

```
-a always,exit -F arch=b64 -S create_module,init_module,delete_module,query_module,finit_module -F auid>=1000 -F auid!=-1 -F key=kernel_modules
-a always,exit -S all -F path=/usr/bin/kmod -F perm=x -F auid>=1000 -F auid!=-1 -F key=kernel_modules
```

#### Symlink audit

Audit if the symlinks that `kmod` accepts is indeed pointing at it:

```
# S_LINKS=$(ls -l /usr/sbin/lsmod /usr/sbin/rmmod /usr/sbin/insmod /usr/sbin/modinfo /usr/sbin/modprobe /usr/sbin/depmod | grep -v "" -> ../bin/kmod"" || true) \
&& if [[ ""${S_LINKS}"" != """" ]]; then printf ""Issue with symlinks: ${S_LINKS}\n""; else printf ""OK\n""; fi
```

Verify the output states `OK`. If there is a symlink pointing to a different location it should be investigated.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.

#### System call structure

For performance (`man 7 audit.rules`) reasons it is preferable to have all the system calls on one line. However, your configuration may have them on one line each or some other combination. This is important to understand for both the auditing and remediation sections as the examples given are optimized for performance as per the man page.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;",8.5,,,,X,X,6.2,,,X,X,X,
4.1.3,4.1.3.20,Ensure the audit configuration is immutable,Automated,"Set system audit so that audit rules cannot be modified with `auditctl` . Setting the flag ""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on system reboot.

**Note:** This setting will require the system to be rebooted to update the active `auditd` configuration settings.","In immutable mode, unauthorized users cannot execute changes to the audit system to potentially hide malicious activity and then put the audit rules back. Users would most likely notice a system reboot and that could alert administrators of an attempt to make unauthorized audit changes.",,"Edit or create the file `/etc/audit/rules.d/99-finalize.rules` and add the line `-e 2` at the end of the file:

_Example:_ 

```
# printf -- ""-e 2"" >> /etc/audit/rules.d/99-finalize.rules
```

#### Load audit rules

Merge and load the rules into active configuration:

```
# augenrules --load
```

Check if reboot is required.

```
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot required to load rules\n""; fi
```","Run the following command and verify output matches:
```
# grep -Ph -- '^\h*-e\h+2\b' /etc/audit/rules.d/*.rules | tail -1

-e 2
```","**NIST SP 800-53 Rev. 5:**
- AC-3
- AU-3
- AU-3(1)
- MP-2","TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Activate audit logging CONTROL:v7 6.2 DESCRIPTION:Ensure that local logging has been enabled on all systems and networking devices.;TITLE:Enable Detailed Logging CONTROL:v7 6.3 DESCRIPTION:Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.;",3.3,8.5,,X,X,X,6.2,6.3,,X,X,X,
4.1.3,4.1.3.21,Ensure the running and on disk configuration is the same,Manual,"The Audit system have both on disk and running configuration. It is possible for these configuration settings to differ.

**Note:** Due to the limitations of `augenrules` and `auditctl`, it is not absolutely guaranteed that loading the rule sets via `augenrules --load` will result in all rules being loaded or even that the user will be informed if there was a problem loading the rules.",Configuration differences between what is currently running and what is on disk could cause unexpected problems or may give a false impression of compliance requirements.,,"If the rules are not aligned across all three () areas, run the following command to merge and load all rules:

```
# augenrules --load
```

Check if reboot is required.

```
if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required to load rules""; fi
```","#### Merged rule sets

Ensure that all rules in `/etc/audit/rules.d` have been merged into `/etc/audit/audit.rules`:

```
# augenrules --check

/usr/sbin/augenrules: No change
```

Should there be any drift, run `augenrules --load` to merge and load all rules.","#### Potential reboot required

If the auditing configuration is locked (`-e 2`), then `augenrules` will not warn in any way that rules could not be loaded into the running configuration. A system reboot will be required to load the rules into the running configuration.","TITLE:Collect Detailed Audit Logs CONTROL:v8 8.5 DESCRIPTION:Configure detailed audit logging for enterprise assets containing sensitive data. Include event source, date, username, timestamp, source addresses, destination addresses, and other useful elements that could assist in a forensic investigation.;TITLE:Enable Detailed Logging CONTROL:v7 6.3 DESCRIPTION:Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.;",8.5,,,,X,X,6.3,,,,X,X,
4.1.4,,Configure auditd file access,,"Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent the auditing of critical events.",,,,,,,,,,,,,,,,,,,
4.1.4,4.1.4.1,Ensure audit log files are mode 0640 or less permissive,Automated,Audit log files contain information about the system and system activity.,"Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.",,"Run the following command to remove more permissive mode than `0640` from audit log files:

```
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""="" '/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f \( ! -perm 600 -a ! -perm 0400 -a ! -perm 0200 -a ! -perm 0000 -a ! -perm 0640 -a ! -perm 0440 -a ! -perm 0040 \) -exec chmod u-x,g-wx,o-rwx {} +
```","Run the following command to verify audit log files have mode `0640` or less permissive:

```
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""="" '/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f \( ! -perm 600 -a ! -perm 0400 -a ! -perm 0200 -a ! -perm 0000 -a ! -perm 0640 -a ! -perm 0440 -a ! -perm 0040 \) -exec stat -Lc ""%n %#a"" {} +
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.2,Ensure only authorized users own audit log files,Automated,Audit log files contain information about the system and system activity.,"Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.",,"Run the following command to configure the audit log files to be owned by the `root` user: 

```
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""="" '/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec chown root {} +
```","Run the following command to verify audit log files are owned by the `root` user: 

```
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""="" '/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user root -exec stat -Lc ""%n %U"" {} +
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.3,Ensure only authorized groups are assigned ownership of audit log files,Automated,Audit log files contain information about the system and system activity.,"Access to audit records can reveal system and configuration data to attackers, potentially compromising its confidentiality.",,"Run the following command to configure the audit log files to be owned by `adm` group: 

```
# find $(dirname $(awk -F""="" '/^\s*log_file\s*=\s*/ {print $2}' /etc/audit/auditd.conf | xargs)) -type f \( ! -group adm -a ! -group root \) -exec chgrp adm {} +
```

Run the following command to configure the audit log files to be owned by the `adm` group:

```
# chgrp adm /var/log/audit/
```

Run the following command to set the `log_group` parameter in the audit configuration file to `log_group = adm`:

```
# sed -ri 's/^\s*#?\s*log_group\s*=\s*\S+(\s*#.*)?.*$/log_group = adm\1/' /etc/audit/auditd.conf
```

Run the following command to restart the audit daemon to reload the configuration file: 

```
# systemctl restart auditd
```","Run the following command to verify `log_group` parameter is set to either `adm` or `root` in `/etc/audit/auditd.conf`: 

```
# grep -Piw -- '^\h*log_group\h*=\h*(adm|root)\b' /etc/audit/auditd.conf
```

Verify the output is:

```
log_group = adm
-OR-
log_group = root
```

Using the path of the directory containing the audit logs, determine if the audit log files are owned by the ""root"" or ""adm"" group by using the following command: 

```
# stat -c ""%n %G"" ""$(dirname $(awk -F""="" '/^\s*log_file\s*=\s*/ {print $2}' /etc/audit/auditd.conf | xargs))""/* | grep -Pv '^\h*\H+\h+(adm|root)\b'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.4,Ensure the audit log directory is 0750 or more restrictive,Automated,The audit log directory contains audit log files.,"Audit information includes all information including: audit records, audit settings and audit reports. This information is needed to successfully audit system activity. This information must be protected from unauthorized modification or deletion. If this information were to be compromised, forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.",,"Run the following command to configure the audit log directory to have a mode of ""0750"" or less permissive: 

```
# chmod g-w,o-rwx ""$(dirname $( awk -F""="" '/^\s*log_file\s*=\s*/ {print $2}' /etc/audit/auditd.conf))""
```","Run the following command to verify that the audit log directory has a mode of 0750 or less permissive:

```
# stat -Lc ""%n %a"" ""$(dirname $( awk -F""="" '/^\s*log_file\s*=\s*/ {print $2}' /etc/audit/auditd.conf))"" | grep -Pv -- '^\h*\H+\h+([0,5,7][0,5]0)'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.5,Ensure audit configuration files are 640 or more restrictive,Automated,Audit configuration files control auditd and what events are audited.,"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.",,"Run the following command to remove more permissive mode than 0640 from the audit configuration files:

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec chmod u-x,g-wx,o-rwx {} +
```","Run the following command to verify that the audit configuration files have mode 640 or more restrictive and are owned by the root user and root group: 

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec stat -Lc ""%n %a"" {} + | grep -Pv -- '^\h*\H+\h*([0,2,4,6][0,4]0)\h*$'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.6,Ensure audit configuration files are owned by root,Automated,Audit configuration files control auditd and what events are audited.,"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.",,"Run the following command to change ownership to `root` user:

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root -exec chown root {} +
```","Run the following command to verify that the audit configuration files have mode 640 or more restrictive and are owned by the root user and root group: 

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user root
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.7,Ensure audit configuration files belong to group root,Automated,Audit configuration files control auditd and what events are audited.,"Access to the audit configuration files could allow unauthorized personnel to prevent the auditing of critical events. 

Misconfigured audit configuration files may prevent the auditing of critical events or impact the system's performance by overwhelming the audit log. Misconfiguration of the audit configuration files may also make it more difficult to establish and investigate events relating to an incident.",,"Run the following command to change group to `root`:

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root -exec chgrp root {} +
```","Run the following command to verify that the audit configuration files have mode 640 or more restrictive and are owned by the root user and root group: 

```
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group root
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.8,Ensure audit tools are 755 or more restrictive,Automated,"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.",Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.,,"Run the following command to remove more permissive mode from the audit tools: 

```
# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
```","Run the following command to verify the audit tools have mode `755` or more restrictive, are owned by the root user and group root: 

```
# stat -c ""%n %a"" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules | grep -Pv -- '^\h*\H+\h+([0-7][0,1,4,5][0,1,4,5])\h*$'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.9,Ensure audit tools are owned by root,Automated,"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.",Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.,,"Run the following command to change the owner of the audit tools to the `root` user:

```
# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
```","Run the following command to verify the audit tools have mode `755` or more restrictive, are owned by the root user and group root: 

```
# stat -c ""%n %U"" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules | grep -Pv -- '^\h*\H+\h+root\h*$'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.1.4,4.1.4.10,Ensure audit tools belong to group root,Automated,"Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.",Protecting audit information includes identifying and protecting the tools used to view and manipulate log data. Protecting audit tools is necessary to prevent unauthorized operation on audit information.,,"Run the following command to remove more permissive mode from the audit tools: 

```
# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
```

Run the following command to change owner and group of the audit tools to `root` user and group:

```
# chown root:root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules
```","Run the following command to verify the audit tools have mode `755` or more restrictive, are owned by the root user and group root: 

```
# stat -c ""%n %a %U %G"" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace /sbin/auditd /sbin/augenrules | grep -Pv -- '^\h*\H+\h+([0-7][0,1,4,5][0,1,4,5])\h+root\h+root\h*$'
```

Nothing should be returned",,"TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,
4.2,,Configure Logging,,"Logging services should be configured to prevent information leaks and to aggregate logs on a remote server so that they can be reviewed in the event of a system compromise. A centralized log server provides a single point of entry for further analysis, monitoring and filtering.

### Security principals for logging
* Ensure transport layer security is implemented between the client and the log server.
* Ensure that logs are rotated as per the environment requirements.
* Ensure all locally generated logs have the appropriate permissions.
* Ensure all security logs are sent to a remote log server.
* Ensure the required events are logged.

### What is covered
This section will cover the minimum best practices for the usage of **either** `rsyslog` **or** `journald`. The recommendations are written such that each is wholly independent of each other and **only one is implemented**.
* If your organization makes use of an enterprise wide logging system completely outside of `rsyslog` or `journald`, then the following recommendations does not directly apply. However, the principals of the recommendations should be followed regardless of what solution is implemented. If the enterprise solution incorporates either of these tools, careful consideration should be given to the following recommendations to determine exactly what applies.
* Should your organization make use of both `rsyslog` and `journald`, take care how the recommendations may or may not apply to you.

### What is not covered
* Enterprise logging systems not utilizing `rsyslog` or `journald`.
As logging is very situational and dependent on the local environment, not everything can be covered here.
* Transport layer security should be applied to all remote logging functionality. Both `rsyslog` and `journald` supports secure transport and should be configured as such.
* The log server. There are a multitude of reasons for a centralized log server (and keeping a short period logging on the local system), but the log server is out of scope for these recommendations.",,,,,,,,,,,,,,,,,,,
4.2.1,,Configure rsyslog,,"The `rsyslog` software package may be used instead of the default `journald` logging mechanism.

**Note:** This section only applies if `rsyslog` is the chosen method for client side logging. Do not apply this section if `journald` is used.",,,,,,,,,,,,,,,,,,,
4.2.2,,Configure journald,,"Included in the systemd suite is a journaling service called `systemd-journald.service` for the collection and storage of logging data. It creates and maintains structured, indexed journals based on logging information that is received from a variety of sources such as: 
- Classic RFC3164 BSD syslog via the /dev/log socket
- STDOUT/STDERR of programs via StandardOutput=journal + StandardError=journal in service files (both of which are default settings)
- Kernel log messages via the /dev/kmsg device node
- Audit records via the kernel’s audit subsystem
- Structured log messages via journald’s native protocol

Any changes made to the `systemd-journald` configuration will require a re-start of `systemd-journald`",,,,,,,,,,,,,,,,,,,
4.2.2.1,,Ensure journald is configured to send logs to a remote log host,,,,,,,,,,,,,,,,,,,,,
5,,"Access, Authentication and Authorization",,,,,,,,,,,,,,,,,,,,,
5.1,,Configure time-based job schedulers,,"`cron` is a time-based job scheduler used to schedule jobs, commands or shell scripts, to run periodically at fixed times, dates, or intervals.

`at` provides the ability to execute a command or shell script at a specified date and hour, or after a given interval of time.

Other methods exist for scheduling jobs, such as `systemd timers`. If another method is used, it should be secured in accordance with local site policy

_Note: `systemd timers` are systemd unit files whose name ends in `.timer` that control `.service` files or events. Timers can be used as an alternative to `cron` and `at`. Timers have built-in support for calendar time events, monotonic time events, and can be run asynchronously_

_If `cron` and `at` are not installed, this section can be skipped._",,,,,,,,,,,,,,,,,,,
5.2,,Configure SSH Server,,"SSH is a secure, encrypted replacement for common login services such as `telnet`, `ftp`, `rlogin`, `rsh`, and `rcp`. It is strongly recommended that sites abandon older clear-text login protocols and use SSH to prevent session hijacking and sniffing of sensitive data off the network.

**Note:**
- The recommendations in this section only apply if the SSH daemon is installed on the system, if remote access is **not** required the SSH daemon can be removed and this section skipped.
- Once all configuration changes have been made to `/etc/ssh/sshd_config`, the sshd configuration must be reloaded:

Command to re-load the SSH daemon configuration:
```
# systemctl reload sshd
```

Command to remove the SSH daemon:
```
# dnf remove openssh-server
```",,,,,,,,,,,,,,,,,,,
5.2,5.2.13,Ensure SSH AllowTcpForwarding is disabled,Automated,"SSH port forwarding is a mechanism in SSH for tunneling application ports from the client to the server, or servers to clients. It can be used for adding encryption to legacy applications, going through firewalls, and some system administrators and IT professionals use it for opening backdoors into the internal network from their home machines","Leaving port forwarding enabled can expose the organization to security risks and back-doors. 

SSH connections are protected with strong encryption. This makes their contents invisible to most deployed network monitoring and traffic filtering solutions. This invisibility carries considerable risk potential if it is used for malicious purposes such as data exfiltration. Cybercriminals or malware could exploit SSH to hide their unauthorized communications, or to exfiltrate stolen data from the target network","SSH tunnels are widely used in many corporate environments that employ mainframe systems as their application backends. In those environments the applications themselves may have very limited native support for security. By utilizing tunneling, compliance with SOX, HIPAA, PCI-DSS, and other standards can be achieved without having to modify the applications.","Edit the /etc/ssh/sshd_config file to set the parameter as follows:
```
AllowTcpForwarding no
```","Run the following command and verify that output matches:
```
# sshd -T -C user=root -C host=""$(hostname)"" -C addr=""$(grep $(hostname) /etc/hosts | awk '{print $1}')"" | grep -i allowtcpforwarding

allowtcpforwarding no
```

Run the following command and verify the output:
```
# grep -Ei '^\s*AllowTcpForwarding\s+yes' /etc/ssh/sshd_config

Nothing should be returned
```","**NIST SP 800-53 Rev. 5:**
- CM-1
- CM-2
- CM-6
- CM-7
- IA-5","TITLE:Establish and Maintain a Secure Configuration Process CONTROL:v8 4.1 DESCRIPTION:Establish and maintain a secure configuration process for enterprise assets (end-user devices, including portable and mobile, non-computing/IoT devices, and servers) and software (operating systems and applications). Review and update documentation annually, or when significant enterprise changes occur that could impact this Safeguard.;TITLE:Ensure Only Approved Ports, Protocols and Services Are Running CONTROL:v7 9.2 DESCRIPTION:Ensure that only network ports, protocols, and services listening on a system with validated business needs, are running on each system.;",4.1,,,X,X,X,9.2,,,,X,X,https://www.ssh.com/ssh/tunneling/example
5.3,,Configure privilege escalation,,"There are various tools which allows a permitted user to execute a command as the superuser or another user, as specified by the security policy.

#### sudo

https://www.sudo.ws/

The invoking user's real (not effective) user ID is used to determine the user name with which to query the security policy.

`sudo` supports a plug-in architecture for security policies and input/output logging. Third parties can develop and distribute their own policy and I/O logging plug-ins to work seamlessly with the `sudo` front end. The default security policy is `sudoers`, which is configured via the file `/etc/sudoers` and any entries in `/etc/sudoers.d`.

#### pkexec

https://www.freedesktop.org/software/polkit/docs/0.105/pkexec.1.html",,,,,,,,,,,,,,,,,,,
5.3,5.3.4,Ensure users must provide password for escalation,Automated,The operating system must be configured so that users must provide a password for privilege escalation.,"Without re-authentication, users may access resources or perform tasks for which they do not have authorization. 

When operating systems provide the capability to escalate a functional capability, it is critical the user re-authenticate.",This will prevent automated processes from being able to elevate privileges. To include Ansible and AWS builds,"Based on the outcome of the audit procedure, use `visudo -f <PATH TO FILE>` to edit the relevant sudoers file.

Remove any line with occurrences of `NOPASSWD` tags in the file.","**Note:** If passwords are not being used for authentication, this is not applicable.

Verify the operating system requires users to supply a password for privilege escalation.

Check the configuration of the `/etc/sudoers` and `/etc/sudoers.d/*` files with the following command:

```
# grep -r ""^[^#].*NOPASSWD"" /etc/sudoers*
```

If any line is found refer to the remediation procedure below.",,"TITLE:Restrict Administrator Privileges to Dedicated Administrator Accounts CONTROL:v8 5.4 DESCRIPTION:Restrict administrator privileges to dedicated administrator accounts on enterprise assets. Conduct general computing activities, such as internet browsing, email, and productivity suite use, from the user’s primary, non-privileged account.;TITLE:Ensure the Use of Dedicated Administrative Accounts CONTROL:v7 4.3 DESCRIPTION:Ensure that all users with administrative account access use a dedicated or secondary account for elevated activities. This account should only be used for administrative activities and not internet browsing, email, or similar activities.;",5.4,,,X,X,X,4.3,,,X,X,X,
5.4,,Configure authselect,,"Authselect is a utility that simplifies the configuration of user authentication. Authselect offers two ready-made profiles that can be universally used with all modern identity management systems

Authselect makes testing and troubleshooting easy because it only modifies files in these directories:

- `/etc/nsswitch.conf`
- `/etc/pam.d/* files`
- `/etc/dconf/db/distro.d/* files`

You can create and deploy a custom profile by customizing one of the default profiles, the sssd, winbind, or the nis profile. This is particularly useful if Modifying a ready-made authselect profile is not enough for your needs. When you deploy a custom profile, the profile is applied to every user logging into the given host. This would be the recommended method, so that the existing profiles can remain unmodified.

_Example of creating a custom authselect profile called custom-profile_

```
# authselect create-profile custom-profile -b sssd --symlink-meta
```

**WARNING:** 

Do not use authselect if: 
- your host is part of Linux Identity Management. Joining your host to an IdM domain with the ipa-client-install command automatically configures SSSD authentication on your host.
- Your host is part of Active Directory via SSSD. Calling the realm join command to join your host to an Active Directory domain automatically configures SSSD authentication on your host.
- It is not recommended to change the authselect profiles configured by ipa-client-install or realm join. If you need to modify them, display the current settings before making any modifications, so you can revert back to them if necessary",,,,,,,,,,,,,,,,,,,
5.5,,Configure PAM,,"PAM (Pluggable Authentication Modules) is a service that implements modular authentication modules on UNIX systems. PAM is implemented as a set of shared objects that are loaded and executed when a program needs to authenticate a user. Files for PAM are typically located in the `/etc/pam.d` directory. PAM must be carefully configured to secure system authentication. While this section covers some of PAM, please consult other PAM resources to fully understand the configuration capabilities.",,,,,,,,,,,,,,,,,,,
5.6,,User Accounts and Environment,,This section provides guidance on setting up secure defaults for system and user accounts and their environment.,,,,,,,,,,,,,,,,,,,
5.6.1,,Set Shadow Password Suite Parameters,,"While a majority of the password control parameters have been moved to PAM, some parameters are still available through the shadow password suite. Any changes made to `/etc/login.defs `will only be applied if the `usermod `command is used. If user IDs are added a different way, use the `chage `command to effect changes to individual user IDs.",,,,,,,,,,,,,,,,,,,
6,,System Maintenance,,Recommendations in this section are intended as maintenance and are intended to be checked on a frequent basis to ensure system stability. Many recommendations do not have quick remediations and require investigation into the cause and best fix available and may indicate an attempted breach of system security.,,,,,,,,,,,,,,,,,,,
6.1,,System File Permissions,,This section provides guidance on securing aspects of system files and directories.,,,,,,,,,,,,,,,,,,,
6.1,6.1.15,Audit system file permissions,Manual,"The RPM package manager has a number of useful options. One of these, the `-V` for RPM option, can be used to verify that system packages are correctly installed. The `-V` option can be used to verify a particular package or to verify all system packages. If no output is returned, the package is installed correctly. The following table describes the meaning of output from the verify option:
```
Code Meaning
S File size differs.
M File mode differs (includes permissions and file type).
5 The MD5 checksum differs.
D The major and minor version numbers differ on a device file.
L A mismatch occurs in a link.
U The file ownership differs.
G The file group owner differs.
T The file time (mtime) differs.
```
The `rpm -qf` command can be used to determine which package a particular file belongs to. For example, the following commands determines which package the `/bin/bash` file belongs to:

```
# rpm -qf /bin/bash
bash-4.1.2-29.el6.x86_64
# rpm -S /bin/bash
bash: /bin/bash
```
To verify the settings for the package that controls the `/bin/bash` file, run the following:
```
# rpm -V bash-4.1.2-29.el6.x86_64
.M....... /bin/bash
# rpm --verify bash
??5?????? c /etc/bash.bashrc
```
Note that you can feed the output of the `rpm -qf` command to the `rpm -V` command:
```
# rpm -V `rpm -qf /etc/passwd` 
.M...... c /etc/passwd
S.5....T c /etc/printcap
```",It is important to confirm that packaged system files and directories are maintained with the permissions they were intended to have from the OS vendor.,,Correct any discrepancies found and rerun the audit until output is clean or risk is mitigated or accepted.,"Run the following command to review all installed packages. Note that this may be very time consuming and may be best scheduled via the `cron` utility. It is recommended that the output of this command be redirected to a file that can be reviewed later.

```
# rpm -Va --nomtime --nosize --nomd5 --nolinkto > <filename>
```","Since packages and important files may change with new updates and releases, it is recommended to verify everything, not just a finite list of files. This can be a time consuming task and results may depend on site policy therefore it is not a scorable benchmark item, but is provided for those interested in additional security measures.

Some of the recommendations of this benchmark alter the state of files audited by this recommendation. The audit command will alert for all changes to a file's permissions even if the new state is more secure than the default.

**NIST SP 800-53 Rev. 5:**
- AC-3
- CM-1
- CM-2
- CM-6
- CM-7
- IA-5
- MP-2","TITLE:Configure Data Access Control Lists CONTROL:v8 3.3 DESCRIPTION:Configure data access control lists based on a user’s need to know. Apply data access control lists, also known as access permissions, to local and remote file systems, databases, and applications.;TITLE:Protect Information through Access Control Lists CONTROL:v7 14.6 DESCRIPTION:Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists. These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.;",3.3,,,X,X,X,14.6,,,X,X,X,http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/index.html
6.2,,Local User and Group Settings,,"This section provides guidance on securing aspects of the local users and groups.

**Note:** The recommendations in this section check local users and groups. Any users or groups from other sources such as LDAP will not be audited. In a domain environment, similar checks should be performed against domain users and groups.",,,,,,,,,,,,,,,,,,,
